; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_change_color_env_no_spec_2.txt
;
#const C3.rgb= $change_color_primary
#const C4.rgb= $env_tint_color
#const C5.rgb= $change_color_secondary
#const C6.a= $env_brightness
#const C7.rgb= $lightmap_ambient_color
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
samplerCUBE s2 : register(S2);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 2 dot 0 input-stage 0
    float4 tex2= texCUBE(s2, tc2);
    // exp.components=1 term=1
    // line 27: T1= C0.T1
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex1.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: T3= C1.T1
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex1.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    tex1.rgb= temp0;
    tex3.rgb= temp6;
    // exp.components=3 term=3 term=3
    // line 36: T1= INVERT(T1) + T1*C0
    float3 temp12;
    float3 temp13;
    float3 temp14;
    float3 temp15;
    temp15= 1-saturate(tex1.rgb);
    float3 temp16;
    temp13= temp15;
    float3 temp17;
    temp17= saturate(tex1.rgb);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    tex1.rgb= temp12;
    // exp.components=3 term=3
    // line 58: T0= T0*T1
    float3 temp22;
    float3 temp23;
    temp23= saturate(tex0.rgb);
    float3 temp24;
    float3 temp25;
    temp25= saturate(tex1.rgb);
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp22= temp27;
    // exp.components=3 term=3
    // line 59: T2= T2*C0
    float3 temp28;
    float3 temp29;
    temp29= saturate(tex2.rgb);
    float3 temp30;
    float3 temp31;
    temp31= c4.rgb;
    float3 temp32;
    float3 temp33;
    temp33= temp29 * temp31;
    temp28= temp33;
    // exp.components=1 term=1
    // line 61: T0a= OUT_SCALE_BY_2(T0a*D0a)
    float temp34;
    float temp35;
    temp35= saturate(tex0.a);
    float3 temp36;
    float temp37;
    temp37= saturate(color0.a);
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp34= temp39;
    temp34= 2 * temp34;
    tex0.rgb= temp22;
    tex2.rgb= temp28;
    tex0.a= temp34;
    // exp.components=3 term=3 term=3
    // line 64: T3= INVERT(T3) + T3*C0
    float3 temp40;
    float3 temp41;
    float3 temp42;
    float3 temp43;
    temp43= 1-saturate(tex3.rgb);
    float3 temp44;
    temp41= temp43;
    float3 temp45;
    temp45= saturate(tex3.rgb);
    float3 temp46;
    float3 temp47;
    temp47= c5.rgb;
    float3 temp48;
    float3 temp49;
    temp49= temp45 * temp47;
    temp42= temp49;
    temp40= temp41 + temp42;
    tex3.rgb= temp40;
    // exp.components=3 term=3
    // line 67: T0= T0*T3
    float3 temp50;
    float3 temp51;
    temp51= saturate(tex0.rgb);
    float3 temp52;
    float3 temp53;
    temp53= saturate(tex3.rgb);
    float3 temp54;
    float3 temp55;
    temp55= temp51 * temp53;
    temp50= temp55;
    // exp.components=3 term=3
    // line 68: T2= T2*C0a
    float3 temp56;
    float3 temp57;
    temp57= saturate(tex2.rgb);
    float3 temp58;
    float temp59;
    temp59= c6.a;
    float3 temp60;
    float3 temp61;
    temp61= temp57 * temp59;
    temp56= temp61;
    tex0.rgb= temp50;
    tex2.rgb= temp56;
    // exp.components=3 term=3 term=3
    // line 72: R0= OUT_SCALE_BY_2(T0*D0 + T0*C0)
    float3 temp62;
    float3 temp63;
    float3 temp64;
    float3 temp65;
    temp65= saturate(tex0.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(color0.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp63= temp69;
    float3 temp70;
    temp70= saturate(tex0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c7.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp64= temp74;
    temp62= temp63 + temp64;
    temp62= 2 * temp62;
    r0.rgb= temp62;
    // exp.components=3 term=3 term=3
    // line 79: SRCCOLOR= T2*T0a + R0
    float3 temp75;
    float3 temp76;
    float3 temp77;
    float3 temp78;
    temp78= saturate(tex2.rgb);
    float3 temp79;
    float temp80;
    temp80= saturate(tex0.a);
    float3 temp81;
    float3 temp82;
    temp82= temp78 * temp80;
    temp76= temp82;
    float3 temp83;
    temp83= saturate(r0.rgb);
    float3 temp84;
    temp77= temp83;
    temp75= temp76 + temp77;
    // exp.components=1 term=1
    // line 80: SRCALPHA= 0
    float temp85;
    float temp86;
    temp86= 0;
    float3 temp87;
    temp85= temp86;
    r0.rgb= temp75;
    r0.a= temp85;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
