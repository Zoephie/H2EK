; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_light_response_default_light_combined_tex_one_change_color_0.txt
;
#const C1.rgb= $change_color_primary
#const C2.rgb= $specular_color
#const C3.rgb= $specular_glancing_color
#const C4.rgb= $light_diffuse_color
#const C5.rgb= $light_specular_color
#case $light_diffuse_contrast=0 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.rgb= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float3 temp102;
    temp102= saturate(color1.rgb);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp106;
    float temp107;
    temp107= 0;
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp103;
    float temp104;
    temp104= 0;
    float3 temp105;
    temp103= temp104;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp106;
    float temp107;
    temp107= saturate(tex0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r1.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    color1.rgb= temp103;
    tex0.a= temp106;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    r1.rgb= temp112;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp118;
    float3 temp119;
    float3 temp120;
    float3 temp121;
    temp121= saturate(r0.rgb);
    float3 temp122;
    float3 temp123;
    temp123= saturate(tex0.rgb);
    float3 temp124;
    float3 temp125;
    temp125= temp121 * temp123;
    temp119= temp125;
    float3 temp126;
    temp126= saturate(r1.rgb);
    float3 temp127;
    float temp128;
    temp128= saturate(tex0.a);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp120= temp130;
    temp118= temp119 + temp120;
    r0.rgb= temp118;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp131;
    float3 temp132;
    temp132= saturate(r0.rgb);
    float3 temp133;
    float temp134;
    temp134= 1-saturate(color0.b);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp131= temp136;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp137;
    float temp138;
    temp138= 0;
    float3 temp139;
    temp137= temp138;
    r0.rgb= temp131;
    r0.a= temp137;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp106;
    float temp107;
    temp107= 0;
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.rgb= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float3 temp105;
    temp105= saturate(color1.rgb);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp106;
    float temp107;
    temp107= saturate(r0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp112;
    float temp113;
    temp113= saturate(tex0.a);
    float3 temp114;
    float temp115;
    temp115= saturate(r1.a);
    float3 temp116;
    float temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    color1.rgb= temp106;
    tex0.a= temp112;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp118;
    float3 temp119;
    temp119= saturate(r1.rgb);
    float3 temp120;
    float3 temp121;
    temp121= saturate(color1.rgb);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    r1.rgb= temp118;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp124;
    float3 temp125;
    float3 temp126;
    float3 temp127;
    temp127= saturate(r0.rgb);
    float3 temp128;
    float3 temp129;
    temp129= saturate(tex0.rgb);
    float3 temp130;
    float3 temp131;
    temp131= temp127 * temp129;
    temp125= temp131;
    float3 temp132;
    temp132= saturate(r1.rgb);
    float3 temp133;
    float temp134;
    temp134= saturate(tex0.a);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp126= temp136;
    temp124= temp125 + temp126;
    r0.rgb= temp124;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp137;
    float3 temp138;
    temp138= saturate(r0.rgb);
    float3 temp139;
    float temp140;
    temp140= 1-saturate(color0.b);
    float3 temp141;
    float3 temp142;
    temp142= temp138 * temp140;
    temp137= temp142;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp143;
    float temp144;
    temp144= 0;
    float3 temp145;
    temp143= temp144;
    r0.rgb= temp137;
    r0.a= temp143;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp103;
    float temp104;
    temp104= saturate(r0.a);
    float3 temp105;
    float temp106;
    temp106= saturate(r0.a);
    float3 temp107;
    float temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp103;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp106;
    float temp107;
    temp107= saturate(r0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp112;
    float temp113;
    temp113= saturate(tex0.a);
    float3 temp114;
    float temp115;
    temp115= saturate(r1.a);
    float3 temp116;
    float temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    color1.rgb= temp106;
    tex0.a= temp112;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp118;
    float3 temp119;
    temp119= saturate(r1.rgb);
    float3 temp120;
    float3 temp121;
    temp121= saturate(color1.rgb);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    r1.rgb= temp118;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp124;
    float3 temp125;
    float3 temp126;
    float3 temp127;
    temp127= saturate(r0.rgb);
    float3 temp128;
    float3 temp129;
    temp129= saturate(tex0.rgb);
    float3 temp130;
    float3 temp131;
    temp131= temp127 * temp129;
    temp125= temp131;
    float3 temp132;
    temp132= saturate(r1.rgb);
    float3 temp133;
    float temp134;
    temp134= saturate(tex0.a);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp126= temp136;
    temp124= temp125 + temp126;
    r0.rgb= temp124;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp137;
    float3 temp138;
    temp138= saturate(r0.rgb);
    float3 temp139;
    float temp140;
    temp140= 1-saturate(color0.b);
    float3 temp141;
    float3 temp142;
    temp142= temp138 * temp140;
    temp137= temp142;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp143;
    float temp144;
    temp144= 0;
    float3 temp145;
    temp143= temp144;
    r0.rgb= temp137;
    r0.a= temp143;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.rgb= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float3 temp102;
    temp102= saturate(color1.rgb);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp106;
    float temp107;
    temp107= saturate(color0.a);
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp103;
    float temp104;
    temp104= saturate(color0.a);
    float3 temp105;
    temp103= temp104;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp106;
    float temp107;
    temp107= saturate(tex0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r1.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    color1.rgb= temp103;
    tex0.a= temp106;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    r1.rgb= temp112;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp118;
    float3 temp119;
    float3 temp120;
    float3 temp121;
    temp121= saturate(r0.rgb);
    float3 temp122;
    float3 temp123;
    temp123= saturate(tex0.rgb);
    float3 temp124;
    float3 temp125;
    temp125= temp121 * temp123;
    temp119= temp125;
    float3 temp126;
    temp126= saturate(r1.rgb);
    float3 temp127;
    float temp128;
    temp128= saturate(tex0.a);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp120= temp130;
    temp118= temp119 + temp120;
    r0.rgb= temp118;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp131;
    float3 temp132;
    temp132= saturate(r0.rgb);
    float3 temp133;
    float temp134;
    temp134= 1-saturate(color0.b);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp131= temp136;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp137;
    float temp138;
    temp138= 0;
    float3 temp139;
    temp137= temp138;
    r0.rgb= temp131;
    r0.a= temp137;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp106;
    float temp107;
    temp107= saturate(color0.a);
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.rgb= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float3 temp109;
    temp109= saturate(color1.rgb);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp106;
    float temp107;
    float temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= saturate(r0.a);
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp107= temp113;
    float temp114;
    temp114= 0.752941;
    float3 temp115;
    temp108= temp114;
    temp106= temp107 - temp108;
    temp106= 4 * temp106;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp116;
    float temp117;
    temp117= saturate(tex0.a);
    float3 temp118;
    float temp119;
    temp119= saturate(r1.a);
    float3 temp120;
    float temp121;
    temp121= temp117 * temp119;
    temp116= temp121;
    color1.rgb= temp106;
    tex0.a= temp116;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp122;
    float3 temp123;
    temp123= saturate(r1.rgb);
    float3 temp124;
    float3 temp125;
    temp125= saturate(color1.rgb);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    r1.rgb= temp122;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp128;
    float3 temp129;
    float3 temp130;
    float3 temp131;
    temp131= saturate(r0.rgb);
    float3 temp132;
    float3 temp133;
    temp133= saturate(tex0.rgb);
    float3 temp134;
    float3 temp135;
    temp135= temp131 * temp133;
    temp129= temp135;
    float3 temp136;
    temp136= saturate(r1.rgb);
    float3 temp137;
    float temp138;
    temp138= saturate(tex0.a);
    float3 temp139;
    float3 temp140;
    temp140= temp136 * temp138;
    temp130= temp140;
    temp128= temp129 + temp130;
    r0.rgb= temp128;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp141;
    float3 temp142;
    temp142= saturate(r0.rgb);
    float3 temp143;
    float temp144;
    temp144= 1-saturate(color0.b);
    float3 temp145;
    float3 temp146;
    temp146= temp142 * temp144;
    temp141= temp146;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp147;
    float temp148;
    temp148= 0;
    float3 temp149;
    temp147= temp148;
    r0.rgb= temp141;
    r0.a= temp147;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp103;
    float temp104;
    float temp105;
    float temp106;
    temp106= saturate(r0.a);
    float3 temp107;
    float temp108;
    temp108= saturate(r0.a);
    float3 temp109;
    float temp110;
    temp110= temp106 * temp108;
    temp104= temp110;
    float temp111;
    temp111= 0.752941;
    float3 temp112;
    temp105= temp111;
    temp103= temp104 - temp105;
    temp103= 4 * temp103;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp113;
    float temp114;
    temp114= saturate(tex0.a);
    float3 temp115;
    float temp116;
    temp116= saturate(r1.a);
    float3 temp117;
    float temp118;
    temp118= temp114 * temp116;
    temp113= temp118;
    color1.rgb= temp103;
    tex0.a= temp113;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float3 temp122;
    temp122= saturate(color1.rgb);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp119= temp124;
    r1.rgb= temp119;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp125;
    float3 temp126;
    float3 temp127;
    float3 temp128;
    temp128= saturate(r0.rgb);
    float3 temp129;
    float3 temp130;
    temp130= saturate(tex0.rgb);
    float3 temp131;
    float3 temp132;
    temp132= temp128 * temp130;
    temp126= temp132;
    float3 temp133;
    temp133= saturate(r1.rgb);
    float3 temp134;
    float temp135;
    temp135= saturate(tex0.a);
    float3 temp136;
    float3 temp137;
    temp137= temp133 * temp135;
    temp127= temp137;
    temp125= temp126 + temp127;
    r0.rgb= temp125;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp138;
    float3 temp139;
    temp139= saturate(r0.rgb);
    float3 temp140;
    float temp141;
    temp141= 1-saturate(color0.b);
    float3 temp142;
    float3 temp143;
    temp143= temp139 * temp141;
    temp138= temp143;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp144;
    float temp145;
    temp145= 0;
    float3 temp146;
    temp144= temp145;
    r0.rgb= temp138;
    r0.a= temp144;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp106;
    float temp107;
    float temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= saturate(r0.a);
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp107= temp113;
    float temp114;
    temp114= 0.752941;
    float3 temp115;
    temp108= temp114;
    temp106= temp107 - temp108;
    temp106= 4 * temp106;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp116;
    float temp117;
    temp117= saturate(tex0.a);
    float3 temp118;
    float temp119;
    temp119= saturate(r1.a);
    float3 temp120;
    float temp121;
    temp121= temp117 * temp119;
    temp116= temp121;
    color1.rgb= temp106;
    tex0.a= temp116;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp122;
    float3 temp123;
    temp123= saturate(r1.rgb);
    float3 temp124;
    float3 temp125;
    temp125= saturate(color1.rgb);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    r1.rgb= temp122;
    // exp.components=3 term=3 term=3
    // line 127: R0= R0*T0 + R1*T0a
    float3 temp128;
    float3 temp129;
    float3 temp130;
    float3 temp131;
    temp131= saturate(r0.rgb);
    float3 temp132;
    float3 temp133;
    temp133= saturate(tex0.rgb);
    float3 temp134;
    float3 temp135;
    temp135= temp131 * temp133;
    temp129= temp135;
    float3 temp136;
    temp136= saturate(r1.rgb);
    float3 temp137;
    float temp138;
    temp138= saturate(tex0.a);
    float3 temp139;
    float3 temp140;
    temp140= temp136 * temp138;
    temp130= temp140;
    temp128= temp129 + temp130;
    r0.rgb= temp128;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp141;
    float3 temp142;
    temp142= saturate(r0.rgb);
    float3 temp143;
    float temp144;
    temp144= 1-saturate(color0.b);
    float3 temp145;
    float3 temp146;
    temp146= temp142 * temp144;
    temp141= temp146;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp147;
    float temp148;
    temp148= 0;
    float3 temp149;
    temp147= temp148;
    r0.rgb= temp141;
    r0.a= temp147;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.rgb= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float3 temp102;
    temp102= saturate(color1.rgb);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 2 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp106;
    float temp107;
    temp107= 0;
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 2 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp103;
    float temp104;
    temp104= 0;
    float3 temp105;
    temp103= temp104;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp106;
    float temp107;
    temp107= saturate(tex0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r1.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    color1.rgb= temp103;
    tex0.a= temp106;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    r1.rgb= temp112;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp118;
    float3 temp119;
    float3 temp120;
    float3 temp121;
    temp121= saturate(r0.rgb);
    float3 temp122;
    float3 temp123;
    temp123= saturate(tex0.rgb);
    float3 temp124;
    float3 temp125;
    temp125= temp121 * temp123;
    temp119= temp125;
    float3 temp126;
    temp126= saturate(r1.rgb);
    float3 temp127;
    float temp128;
    temp128= saturate(tex0.a);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp120= temp130;
    temp118= temp119 + temp120;
    temp118= 2 * temp118;
    r0.rgb= temp118;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp131;
    float3 temp132;
    temp132= saturate(r0.rgb);
    float3 temp133;
    float temp134;
    temp134= 1-saturate(color0.b);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp131= temp136;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp137;
    float temp138;
    temp138= 0;
    float3 temp139;
    temp137= temp138;
    r0.rgb= temp131;
    r0.a= temp137;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp106;
    float temp107;
    temp107= 0;
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 2 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.rgb= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float3 temp105;
    temp105= saturate(color1.rgb);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    temp108= 2 * temp108;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp106;
    float temp107;
    temp107= saturate(r0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp112;
    float temp113;
    temp113= saturate(tex0.a);
    float3 temp114;
    float temp115;
    temp115= saturate(r1.a);
    float3 temp116;
    float temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    color1.rgb= temp106;
    tex0.a= temp112;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp118;
    float3 temp119;
    temp119= saturate(r1.rgb);
    float3 temp120;
    float3 temp121;
    temp121= saturate(color1.rgb);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    r1.rgb= temp118;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp124;
    float3 temp125;
    float3 temp126;
    float3 temp127;
    temp127= saturate(r0.rgb);
    float3 temp128;
    float3 temp129;
    temp129= saturate(tex0.rgb);
    float3 temp130;
    float3 temp131;
    temp131= temp127 * temp129;
    temp125= temp131;
    float3 temp132;
    temp132= saturate(r1.rgb);
    float3 temp133;
    float temp134;
    temp134= saturate(tex0.a);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp126= temp136;
    temp124= temp125 + temp126;
    temp124= 2 * temp124;
    r0.rgb= temp124;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp137;
    float3 temp138;
    temp138= saturate(r0.rgb);
    float3 temp139;
    float temp140;
    temp140= 1-saturate(color0.b);
    float3 temp141;
    float3 temp142;
    temp142= temp138 * temp140;
    temp137= temp142;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp143;
    float temp144;
    temp144= 0;
    float3 temp145;
    temp143= temp144;
    r0.rgb= temp137;
    r0.a= temp143;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp103;
    float temp104;
    temp104= saturate(r0.a);
    float3 temp105;
    float temp106;
    temp106= saturate(r0.a);
    float3 temp107;
    float temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp103;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 2 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp106;
    float temp107;
    temp107= saturate(r0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp112;
    float temp113;
    temp113= saturate(tex0.a);
    float3 temp114;
    float temp115;
    temp115= saturate(r1.a);
    float3 temp116;
    float temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    color1.rgb= temp106;
    tex0.a= temp112;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp118;
    float3 temp119;
    temp119= saturate(r1.rgb);
    float3 temp120;
    float3 temp121;
    temp121= saturate(color1.rgb);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    r1.rgb= temp118;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp124;
    float3 temp125;
    float3 temp126;
    float3 temp127;
    temp127= saturate(r0.rgb);
    float3 temp128;
    float3 temp129;
    temp129= saturate(tex0.rgb);
    float3 temp130;
    float3 temp131;
    temp131= temp127 * temp129;
    temp125= temp131;
    float3 temp132;
    temp132= saturate(r1.rgb);
    float3 temp133;
    float temp134;
    temp134= saturate(tex0.a);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp126= temp136;
    temp124= temp125 + temp126;
    temp124= 2 * temp124;
    r0.rgb= temp124;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp137;
    float3 temp138;
    temp138= saturate(r0.rgb);
    float3 temp139;
    float temp140;
    temp140= 1-saturate(color0.b);
    float3 temp141;
    float3 temp142;
    temp142= temp138 * temp140;
    temp137= temp142;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp143;
    float temp144;
    temp144= 0;
    float3 temp145;
    temp143= temp144;
    r0.rgb= temp137;
    r0.a= temp143;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.rgb= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float3 temp102;
    temp102= saturate(color1.rgb);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 2 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp106;
    float temp107;
    temp107= saturate(color0.a);
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 2 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp103;
    float temp104;
    temp104= saturate(color0.a);
    float3 temp105;
    temp103= temp104;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp106;
    float temp107;
    temp107= saturate(tex0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r1.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    color1.rgb= temp103;
    tex0.a= temp106;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    r1.rgb= temp112;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp118;
    float3 temp119;
    float3 temp120;
    float3 temp121;
    temp121= saturate(r0.rgb);
    float3 temp122;
    float3 temp123;
    temp123= saturate(tex0.rgb);
    float3 temp124;
    float3 temp125;
    temp125= temp121 * temp123;
    temp119= temp125;
    float3 temp126;
    temp126= saturate(r1.rgb);
    float3 temp127;
    float temp128;
    temp128= saturate(tex0.a);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp120= temp130;
    temp118= temp119 + temp120;
    temp118= 2 * temp118;
    r0.rgb= temp118;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp131;
    float3 temp132;
    temp132= saturate(r0.rgb);
    float3 temp133;
    float temp134;
    temp134= 1-saturate(color0.b);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp131= temp136;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp137;
    float temp138;
    temp138= 0;
    float3 temp139;
    temp137= temp138;
    r0.rgb= temp131;
    r0.a= temp137;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp106;
    float temp107;
    temp107= saturate(color0.a);
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 2 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.rgb= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float3 temp109;
    temp109= saturate(color1.rgb);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    temp112= 2 * temp112;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp106;
    float temp107;
    float temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= saturate(r0.a);
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp107= temp113;
    float temp114;
    temp114= 0.752941;
    float3 temp115;
    temp108= temp114;
    temp106= temp107 - temp108;
    temp106= 4 * temp106;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp116;
    float temp117;
    temp117= saturate(tex0.a);
    float3 temp118;
    float temp119;
    temp119= saturate(r1.a);
    float3 temp120;
    float temp121;
    temp121= temp117 * temp119;
    temp116= temp121;
    color1.rgb= temp106;
    tex0.a= temp116;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp122;
    float3 temp123;
    temp123= saturate(r1.rgb);
    float3 temp124;
    float3 temp125;
    temp125= saturate(color1.rgb);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    r1.rgb= temp122;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp128;
    float3 temp129;
    float3 temp130;
    float3 temp131;
    temp131= saturate(r0.rgb);
    float3 temp132;
    float3 temp133;
    temp133= saturate(tex0.rgb);
    float3 temp134;
    float3 temp135;
    temp135= temp131 * temp133;
    temp129= temp135;
    float3 temp136;
    temp136= saturate(r1.rgb);
    float3 temp137;
    float temp138;
    temp138= saturate(tex0.a);
    float3 temp139;
    float3 temp140;
    temp140= temp136 * temp138;
    temp130= temp140;
    temp128= temp129 + temp130;
    temp128= 2 * temp128;
    r0.rgb= temp128;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp141;
    float3 temp142;
    temp142= saturate(r0.rgb);
    float3 temp143;
    float temp144;
    temp144= 1-saturate(color0.b);
    float3 temp145;
    float3 temp146;
    temp146= temp142 * temp144;
    temp141= temp146;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp147;
    float temp148;
    temp148= 0;
    float3 temp149;
    temp147= temp148;
    r0.rgb= temp141;
    r0.a= temp147;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp103;
    float temp104;
    float temp105;
    float temp106;
    temp106= saturate(r0.a);
    float3 temp107;
    float temp108;
    temp108= saturate(r0.a);
    float3 temp109;
    float temp110;
    temp110= temp106 * temp108;
    temp104= temp110;
    float temp111;
    temp111= 0.752941;
    float3 temp112;
    temp105= temp111;
    temp103= temp104 - temp105;
    temp103= 4 * temp103;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp113;
    float temp114;
    temp114= saturate(tex0.a);
    float3 temp115;
    float temp116;
    temp116= saturate(r1.a);
    float3 temp117;
    float temp118;
    temp118= temp114 * temp116;
    temp113= temp118;
    color1.rgb= temp103;
    tex0.a= temp113;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float3 temp122;
    temp122= saturate(color1.rgb);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp119= temp124;
    r1.rgb= temp119;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp125;
    float3 temp126;
    float3 temp127;
    float3 temp128;
    temp128= saturate(r0.rgb);
    float3 temp129;
    float3 temp130;
    temp130= saturate(tex0.rgb);
    float3 temp131;
    float3 temp132;
    temp132= temp128 * temp130;
    temp126= temp132;
    float3 temp133;
    temp133= saturate(r1.rgb);
    float3 temp134;
    float temp135;
    temp135= saturate(tex0.a);
    float3 temp136;
    float3 temp137;
    temp137= temp133 * temp135;
    temp127= temp137;
    temp125= temp126 + temp127;
    temp125= 2 * temp125;
    r0.rgb= temp125;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp138;
    float3 temp139;
    temp139= saturate(r0.rgb);
    float3 temp140;
    float temp141;
    temp141= 1-saturate(color0.b);
    float3 temp142;
    float3 temp143;
    temp143= temp139 * temp141;
    temp138= temp143;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp144;
    float temp145;
    temp145= 0;
    float3 temp146;
    temp144= temp145;
    r0.rgb= temp138;
    r0.a= temp144;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp106;
    float temp107;
    float temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= saturate(r0.a);
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp107= temp113;
    float temp114;
    temp114= 0.752941;
    float3 temp115;
    temp108= temp114;
    temp106= temp107 - temp108;
    temp106= 4 * temp106;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp116;
    float temp117;
    temp117= saturate(tex0.a);
    float3 temp118;
    float temp119;
    temp119= saturate(r1.a);
    float3 temp120;
    float temp121;
    temp121= temp117 * temp119;
    temp116= temp121;
    color1.rgb= temp106;
    tex0.a= temp116;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp122;
    float3 temp123;
    temp123= saturate(r1.rgb);
    float3 temp124;
    float3 temp125;
    temp125= saturate(color1.rgb);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    r1.rgb= temp122;
    // exp.components=3 term=3 term=3
    // line 130: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp128;
    float3 temp129;
    float3 temp130;
    float3 temp131;
    temp131= saturate(r0.rgb);
    float3 temp132;
    float3 temp133;
    temp133= saturate(tex0.rgb);
    float3 temp134;
    float3 temp135;
    temp135= temp131 * temp133;
    temp129= temp135;
    float3 temp136;
    temp136= saturate(r1.rgb);
    float3 temp137;
    float temp138;
    temp138= saturate(tex0.a);
    float3 temp139;
    float3 temp140;
    temp140= temp136 * temp138;
    temp130= temp140;
    temp128= temp129 + temp130;
    temp128= 2 * temp128;
    r0.rgb= temp128;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp141;
    float3 temp142;
    temp142= saturate(r0.rgb);
    float3 temp143;
    float temp144;
    temp144= 1-saturate(color0.b);
    float3 temp145;
    float3 temp146;
    temp146= temp142 * temp144;
    temp141= temp146;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp147;
    float temp148;
    temp148= 0;
    float3 temp149;
    temp147= temp148;
    r0.rgb= temp141;
    r0.a= temp147;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.rgb= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float3 temp102;
    temp102= saturate(color1.rgb);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 4 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp106;
    float temp107;
    temp107= 0;
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 4 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp103;
    float temp104;
    temp104= 0;
    float3 temp105;
    temp103= temp104;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp106;
    float temp107;
    temp107= saturate(tex0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r1.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    color1.rgb= temp103;
    tex0.a= temp106;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    r1.rgb= temp112;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp118;
    float3 temp119;
    float3 temp120;
    float3 temp121;
    temp121= saturate(r0.rgb);
    float3 temp122;
    float3 temp123;
    temp123= saturate(tex0.rgb);
    float3 temp124;
    float3 temp125;
    temp125= temp121 * temp123;
    temp119= temp125;
    float3 temp126;
    temp126= saturate(r1.rgb);
    float3 temp127;
    float temp128;
    temp128= saturate(tex0.a);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp120= temp130;
    temp118= temp119 + temp120;
    temp118= 4 * temp118;
    r0.rgb= temp118;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp131;
    float3 temp132;
    temp132= saturate(r0.rgb);
    float3 temp133;
    float temp134;
    temp134= 1-saturate(color0.b);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp131= temp136;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp137;
    float temp138;
    temp138= 0;
    float3 temp139;
    temp137= temp138;
    r0.rgb= temp131;
    r0.a= temp137;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 104: D1= 0
    float temp106;
    float temp107;
    temp107= 0;
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 105: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 4 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.rgb= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float3 temp105;
    temp105= saturate(color1.rgb);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    temp108= 4 * temp108;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp106;
    float temp107;
    temp107= saturate(r0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp112;
    float temp113;
    temp113= saturate(tex0.a);
    float3 temp114;
    float temp115;
    temp115= saturate(r1.a);
    float3 temp116;
    float temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    color1.rgb= temp106;
    tex0.a= temp112;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp118;
    float3 temp119;
    temp119= saturate(r1.rgb);
    float3 temp120;
    float3 temp121;
    temp121= saturate(color1.rgb);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    r1.rgb= temp118;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp124;
    float3 temp125;
    float3 temp126;
    float3 temp127;
    temp127= saturate(r0.rgb);
    float3 temp128;
    float3 temp129;
    temp129= saturate(tex0.rgb);
    float3 temp130;
    float3 temp131;
    temp131= temp127 * temp129;
    temp125= temp131;
    float3 temp132;
    temp132= saturate(r1.rgb);
    float3 temp133;
    float temp134;
    temp134= saturate(tex0.a);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp126= temp136;
    temp124= temp125 + temp126;
    temp124= 4 * temp124;
    r0.rgb= temp124;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp137;
    float3 temp138;
    temp138= saturate(r0.rgb);
    float3 temp139;
    float temp140;
    temp140= 1-saturate(color0.b);
    float3 temp141;
    float3 temp142;
    temp142= temp138 * temp140;
    temp137= temp142;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp143;
    float temp144;
    temp144= 0;
    float3 temp145;
    temp143= temp144;
    r0.rgb= temp137;
    r0.a= temp143;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp103;
    float temp104;
    temp104= saturate(r0.a);
    float3 temp105;
    float temp106;
    temp106= saturate(r0.a);
    float3 temp107;
    float temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp103;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 4 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 108: D1= R0a*R0a
    float temp106;
    float temp107;
    temp107= saturate(r0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    // exp.components=1 term=1
    // line 109: T0a= T0a*R1a
    float temp112;
    float temp113;
    temp113= saturate(tex0.a);
    float3 temp114;
    float temp115;
    temp115= saturate(r1.a);
    float3 temp116;
    float temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    color1.rgb= temp106;
    tex0.a= temp112;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp118;
    float3 temp119;
    temp119= saturate(r1.rgb);
    float3 temp120;
    float3 temp121;
    temp121= saturate(color1.rgb);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    r1.rgb= temp118;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp124;
    float3 temp125;
    float3 temp126;
    float3 temp127;
    temp127= saturate(r0.rgb);
    float3 temp128;
    float3 temp129;
    temp129= saturate(tex0.rgb);
    float3 temp130;
    float3 temp131;
    temp131= temp127 * temp129;
    temp125= temp131;
    float3 temp132;
    temp132= saturate(r1.rgb);
    float3 temp133;
    float temp134;
    temp134= saturate(tex0.a);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp126= temp136;
    temp124= temp125 + temp126;
    temp124= 4 * temp124;
    r0.rgb= temp124;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp137;
    float3 temp138;
    temp138= saturate(r0.rgb);
    float3 temp139;
    float temp140;
    temp140= 1-saturate(color0.b);
    float3 temp141;
    float3 temp142;
    temp142= temp138 * temp140;
    temp137= temp142;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp143;
    float temp144;
    temp144= 0;
    float3 temp145;
    temp143= temp144;
    r0.rgb= temp137;
    r0.a= temp143;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.rgb= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float3 temp102;
    temp102= saturate(color1.rgb);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 4 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp106;
    float temp107;
    temp107= saturate(color0.a);
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 4 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp103;
    float temp104;
    temp104= saturate(color0.a);
    float3 temp105;
    temp103= temp104;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp106;
    float temp107;
    temp107= saturate(tex0.a);
    float3 temp108;
    float temp109;
    temp109= saturate(r1.a);
    float3 temp110;
    float temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    color1.rgb= temp103;
    tex0.a= temp106;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp112= temp117;
    r1.rgb= temp112;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp118;
    float3 temp119;
    float3 temp120;
    float3 temp121;
    temp121= saturate(r0.rgb);
    float3 temp122;
    float3 temp123;
    temp123= saturate(tex0.rgb);
    float3 temp124;
    float3 temp125;
    temp125= temp121 * temp123;
    temp119= temp125;
    float3 temp126;
    temp126= saturate(r1.rgb);
    float3 temp127;
    float temp128;
    temp128= saturate(tex0.a);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp120= temp130;
    temp118= temp119 + temp120;
    temp118= 4 * temp118;
    r0.rgb= temp118;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp131;
    float3 temp132;
    temp132= saturate(r0.rgb);
    float3 temp133;
    float temp134;
    temp134= 1-saturate(color0.b);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp131= temp136;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp137;
    float temp138;
    temp138= 0;
    float3 temp139;
    temp137= temp138;
    r0.rgb= temp131;
    r0.a= temp137;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1
    // line 112: D1= D0a
    float temp106;
    float temp107;
    temp107= saturate(color0.a);
    float3 temp108;
    temp106= temp107;
    // exp.components=1 term=1
    // line 113: T0a= T0a*R1a
    float temp109;
    float temp110;
    temp110= saturate(tex0.a);
    float3 temp111;
    float temp112;
    temp112= saturate(r1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    color1.rgb= temp106;
    tex0.a= temp109;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float3 temp118;
    temp118= saturate(color1.rgb);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r1.rgb= temp115;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(tex0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r1.rgb);
    float3 temp130;
    float temp131;
    temp131= saturate(tex0.a);
    float3 temp132;
    float3 temp133;
    temp133= temp129 * temp131;
    temp123= temp133;
    temp121= temp122 + temp123;
    temp121= 4 * temp121;
    r0.rgb= temp121;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp134;
    float3 temp135;
    temp135= saturate(r0.rgb);
    float3 temp136;
    float temp137;
    temp137= 1-saturate(color0.b);
    float3 temp138;
    float3 temp139;
    temp139= temp135 * temp137;
    temp134= temp139;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp140;
    float temp141;
    temp141= 0;
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp134;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=1 term=1
    // line 61: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 62: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.rgb= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float3 temp109;
    temp109= saturate(color1.rgb);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    temp112= 4 * temp112;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 68: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 69: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 70: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=3 term=3 term=1
    // line 72: R0= R0 - D0a*D0a
    float3 temp87;
    float3 temp88;
    float temp89;
    float3 temp90;
    temp90= saturate(r0.rgb);
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 73: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 74: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp106;
    float temp107;
    float temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= saturate(r0.a);
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp107= temp113;
    float temp114;
    temp114= 0.752941;
    float3 temp115;
    temp108= temp114;
    temp106= temp107 - temp108;
    temp106= 4 * temp106;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp116;
    float temp117;
    temp117= saturate(tex0.a);
    float3 temp118;
    float temp119;
    temp119= saturate(r1.a);
    float3 temp120;
    float temp121;
    temp121= temp117 * temp119;
    temp116= temp121;
    color1.rgb= temp106;
    tex0.a= temp116;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp122;
    float3 temp123;
    temp123= saturate(r1.rgb);
    float3 temp124;
    float3 temp125;
    temp125= saturate(color1.rgb);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    r1.rgb= temp122;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp128;
    float3 temp129;
    float3 temp130;
    float3 temp131;
    temp131= saturate(r0.rgb);
    float3 temp132;
    float3 temp133;
    temp133= saturate(tex0.rgb);
    float3 temp134;
    float3 temp135;
    temp135= temp131 * temp133;
    temp129= temp135;
    float3 temp136;
    temp136= saturate(r1.rgb);
    float3 temp137;
    float temp138;
    temp138= saturate(tex0.a);
    float3 temp139;
    float3 temp140;
    temp140= temp136 * temp138;
    temp130= temp140;
    temp128= temp129 + temp130;
    temp128= 4 * temp128;
    r0.rgb= temp128;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp141;
    float3 temp142;
    temp142= saturate(r0.rgb);
    float3 temp143;
    float temp144;
    temp144= 1-saturate(color0.b);
    float3 temp145;
    float3 temp146;
    temp146= temp142 * temp144;
    temp141= temp146;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp147;
    float temp148;
    temp148= 0;
    float3 temp149;
    temp147= temp148;
    r0.rgb= temp141;
    r0.a= temp147;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 79: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 80: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 81: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 82: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 84: R0= 1 - D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    temp89= temp92;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 85: D0a= R0a
    float temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 86: R0a= R0a*R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    r0.rgb= temp87;
    color0.a= temp94;
    r0.a= temp97;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp103;
    float temp104;
    float temp105;
    float temp106;
    temp106= saturate(r0.a);
    float3 temp107;
    float temp108;
    temp108= saturate(r0.a);
    float3 temp109;
    float temp110;
    temp110= temp106 * temp108;
    temp104= temp110;
    float temp111;
    temp111= 0.752941;
    float3 temp112;
    temp105= temp111;
    temp103= temp104 - temp105;
    temp103= 4 * temp103;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp113;
    float temp114;
    temp114= saturate(tex0.a);
    float3 temp115;
    float temp116;
    temp116= saturate(r1.a);
    float3 temp117;
    float temp118;
    temp118= temp114 * temp116;
    temp113= temp118;
    color1.rgb= temp103;
    tex0.a= temp113;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float3 temp122;
    temp122= saturate(color1.rgb);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp119= temp124;
    r1.rgb= temp119;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp125;
    float3 temp126;
    float3 temp127;
    float3 temp128;
    temp128= saturate(r0.rgb);
    float3 temp129;
    float3 temp130;
    temp130= saturate(tex0.rgb);
    float3 temp131;
    float3 temp132;
    temp132= temp128 * temp130;
    temp126= temp132;
    float3 temp133;
    temp133= saturate(r1.rgb);
    float3 temp134;
    float temp135;
    temp135= saturate(tex0.a);
    float3 temp136;
    float3 temp137;
    temp137= temp133 * temp135;
    temp127= temp137;
    temp125= temp126 + temp127;
    temp125= 4 * temp125;
    r0.rgb= temp125;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp138;
    float3 temp139;
    temp139= saturate(r0.rgb);
    float3 temp140;
    float temp141;
    temp141= 1-saturate(color0.b);
    float3 temp142;
    float3 temp143;
    temp143= temp139 * temp141;
    temp138= temp143;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp144;
    float temp145;
    temp145= 0;
    float3 temp146;
    temp144= temp145;
    r0.rgb= temp138;
    r0.a= temp144;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3 term=3
    // line 31: T4= INVERT(T4) + T4*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float3 temp3;
    temp3= 1-saturate(tex4.rgb);
    float3 temp4;
    temp1= temp3;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= c1.rgb;
    float3 temp8;
    float3 temp9;
    temp9= temp5 * temp7;
    temp2= temp9;
    temp0= temp1 + temp2;
    // exp.components=3 term=3
    // line 32: T0= T4*T0
    float3 temp10;
    float3 temp11;
    temp11= saturate(tex4.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    tex4.rgb= temp0;
    tex0.rgb= temp10;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T1)
    float temp16;
    float3 temp17;
    temp17= 2 * saturate(tex2.rgb) - 1;
    float3 temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float temp21;
    temp21= dot(temp17, temp19);
    temp16= temp21;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(T3)
    float temp22;
    float3 temp23;
    temp23= 2 * saturate(tex2.rgb) - 1;
    float3 temp24;
    float3 temp25;
    temp25= 2 * saturate(tex3.rgb) - 1;
    float3 temp26;
    float temp27;
    temp27= dot(temp23, temp25);
    temp22= temp27;
    // exp.components=1 term=1
    // line 38: T3= EXPAND(T1).EXPAND(T3)
    float temp28;
    float3 temp29;
    temp29= 2 * saturate(tex1.rgb) - 1;
    float3 temp30;
    float3 temp31;
    temp31= 2 * saturate(tex3.rgb) - 1;
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    r0.rgb= temp16;
    r1.rgb= temp22;
    tex3.rgb= temp28;
    // exp.components=1 term=1 term=1
    // line 40: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp34;
    float temp35;
    float temp36;
    float temp37;
    temp37= r0.b;
    float3 temp38;
    float temp39;
    temp39= r1.b;
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float temp42;
    temp42= 0.5;
    float3 temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    float temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 - temp36;
    temp34= 2 * temp34;
    // exp.components=1 term=1
    // line 41: R1a= OUT_SCALE_BY_2(R0b)
    float temp47;
    float temp48;
    temp48= saturate(r0.b);
    float3 temp49;
    temp47= temp48;
    temp47= 2 * temp47;
    r0.a= temp34;
    r1.a= temp47;
    // exp.components=3 term=3 term=3
    // line 46: R1= R1*C0 + INVERT(R1)*C1
    float3 temp50;
    float3 temp51;
    float3 temp52;
    float3 temp53;
    temp53= saturate(r1.rgb);
    float3 temp54;
    float3 temp55;
    temp55= c2.rgb;
    float3 temp56;
    float3 temp57;
    temp57= temp53 * temp55;
    temp51= temp57;
    float3 temp58;
    temp58= 1-saturate(r1.rgb);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp52= temp62;
    temp50= temp51 + temp52;
    r1.rgb= temp50;
    // exp.components=3 term=3
    // line 91: T0= T0*C0
    float3 temp63;
    float3 temp64;
    temp64= saturate(tex0.rgb);
    float3 temp65;
    float3 temp66;
    temp66= c4.rgb;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=3 term=3
    // line 92: R1= R1*C1
    float3 temp69;
    float3 temp70;
    temp70= saturate(r1.rgb);
    float3 temp71;
    float3 temp72;
    temp72= c5.rgb;
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    // exp.components=1 term=1
    // line 93: R0a= R0a*R0a
    float temp75;
    float temp76;
    temp76= saturate(r0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(r0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 94: D0a= INVERT(R0b)*INVERT(R0b)
    float temp81;
    float temp82;
    temp82= 1-saturate(r0.b);
    float3 temp83;
    float temp84;
    temp84= 1-saturate(r0.b);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    tex0.rgb= temp63;
    r1.rgb= temp69;
    r0.a= temp75;
    color0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 96: R0= 1 - D0a*D0a
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= 1;
    float3 temp91;
    temp88= temp90;
    float temp92;
    temp92= saturate(color0.a);
    float3 temp93;
    float temp94;
    temp94= saturate(color0.a);
    float3 temp95;
    float temp96;
    temp96= temp92 * temp94;
    temp89= temp96;
    temp87= temp88 - temp89;
    // exp.components=1 term=1
    // line 97: D0a= R0a
    float temp97;
    float temp98;
    temp98= saturate(r0.a);
    float3 temp99;
    temp97= temp98;
    // exp.components=1 term=1
    // line 98: R0a= R0a*R0a
    float temp100;
    float temp101;
    temp101= saturate(r0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r0.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    r0.rgb= temp87;
    color0.a= temp97;
    r0.a= temp100;
    // exp.components=1 term=1 term=1
    // line 117: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp106;
    float temp107;
    float temp108;
    float temp109;
    temp109= saturate(r0.a);
    float3 temp110;
    float temp111;
    temp111= saturate(r0.a);
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp107= temp113;
    float temp114;
    temp114= 0.752941;
    float3 temp115;
    temp108= temp114;
    temp106= temp107 - temp108;
    temp106= 4 * temp106;
    // exp.components=1 term=1
    // line 118: T0a= T0a*R1a
    float temp116;
    float temp117;
    temp117= saturate(tex0.a);
    float3 temp118;
    float temp119;
    temp119= saturate(r1.a);
    float3 temp120;
    float temp121;
    temp121= temp117 * temp119;
    temp116= temp121;
    color1.rgb= temp106;
    tex0.a= temp116;
    // exp.components=3 term=3
    // line 122: R1= R1*D1
    float3 temp122;
    float3 temp123;
    temp123= saturate(r1.rgb);
    float3 temp124;
    float3 temp125;
    temp125= saturate(color1.rgb);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    r1.rgb= temp122;
    // exp.components=3 term=3 term=3
    // line 133: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp128;
    float3 temp129;
    float3 temp130;
    float3 temp131;
    temp131= saturate(r0.rgb);
    float3 temp132;
    float3 temp133;
    temp133= saturate(tex0.rgb);
    float3 temp134;
    float3 temp135;
    temp135= temp131 * temp133;
    temp129= temp135;
    float3 temp136;
    temp136= saturate(r1.rgb);
    float3 temp137;
    float temp138;
    temp138= saturate(tex0.a);
    float3 temp139;
    float3 temp140;
    temp140= temp136 * temp138;
    temp130= temp140;
    temp128= temp129 + temp130;
    temp128= 4 * temp128;
    r0.rgb= temp128;
    // exp.components=3 term=3
    // line 137: SRCCOLOR= R0*INVERT(D0b)
    float3 temp141;
    float3 temp142;
    temp142= saturate(r0.rgb);
    float3 temp143;
    float temp144;
    temp144= 1-saturate(color0.b);
    float3 temp145;
    float3 temp146;
    temp146= temp142 * temp144;
    temp141= temp146;
    // exp.components=1 term=1
    // line 138: SRCALPHA= 0
    float temp147;
    float temp148;
    temp148= 0;
    float3 temp149;
    temp147= temp148;
    r0.rgb= temp141;
    r0.a= temp147;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
