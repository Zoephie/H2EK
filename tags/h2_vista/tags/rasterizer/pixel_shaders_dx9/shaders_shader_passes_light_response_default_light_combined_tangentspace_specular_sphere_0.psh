; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_light_response_default_light_combined_tangentspace_specular_sphere_0.txt
;
#const C2.rgb= $light_specular_color
#case $specular_type=0 $light_diffuse_overbrightness=0
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 48: D1= 0
    float temp66;
    float temp67;
    temp67= 0;
    float3 temp68;
    temp66= temp67;
    // exp.components=1 term=1
    // line 49: T0a= R1a
    float temp69;
    float temp70;
    temp70= saturate(r1.a);
    float3 temp71;
    temp69= temp70;
    color1.rgb= temp66;
    tex0.a= temp69;
    // exp.components=3 term=3
    // line 69: R0= D1*C1
    float3 temp72;
    float3 temp73;
    temp73= saturate(color1.rgb);
    float3 temp74;
    float3 temp75;
    temp75= c2.rgb;
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    r0.rgb= temp72;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(r1.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp84;
    float temp85;
    temp85= 0;
    float3 temp86;
    temp84= temp85;
    r0.rgb= temp78;
    r0.a= temp84;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=1 $light_diffuse_overbrightness=0
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 52: D1= R0a*R0a
    float temp66;
    float temp67;
    temp67= saturate(r0.a);
    float3 temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= temp67 * temp69;
    temp66= temp71;
    // exp.components=1 term=1
    // line 53: T0a= R1a
    float temp72;
    float temp73;
    temp73= saturate(r1.a);
    float3 temp74;
    temp72= temp73;
    color1.rgb= temp66;
    tex0.a= temp72;
    // exp.components=3 term=3
    // line 69: R0= D1*C1
    float3 temp75;
    float3 temp76;
    temp76= saturate(color1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= c2.rgb;
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    r0.rgb= temp75;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp81;
    float3 temp82;
    temp82= saturate(r0.rgb);
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float3 temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp87;
    float temp88;
    temp88= 0;
    float3 temp89;
    temp87= temp88;
    r0.rgb= temp81;
    r0.a= temp87;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=2 $light_diffuse_overbrightness=0
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 56: D1= D0a
    float temp66;
    float temp67;
    temp67= saturate(color0.a);
    float3 temp68;
    temp66= temp67;
    // exp.components=1 term=1
    // line 57: T0a= R1a
    float temp69;
    float temp70;
    temp70= saturate(r1.a);
    float3 temp71;
    temp69= temp70;
    color1.rgb= temp66;
    tex0.a= temp69;
    // exp.components=3 term=3
    // line 69: R0= D1*C1
    float3 temp72;
    float3 temp73;
    temp73= saturate(color1.rgb);
    float3 temp74;
    float3 temp75;
    temp75= c2.rgb;
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    r0.rgb= temp72;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(r1.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp84;
    float temp85;
    temp85= 0;
    float3 temp86;
    temp84= temp85;
    r0.rgb= temp78;
    r0.a= temp84;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=3 $light_diffuse_overbrightness=0
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1 term=1
    // line 61: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp66;
    float temp67;
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp67= temp73;
    float temp74;
    temp74= 0.752941;
    float3 temp75;
    temp68= temp74;
    temp66= temp67 - temp68;
    temp66= 4 * temp66;
    // exp.components=1 term=1
    // line 62: T0a= R1a
    float temp76;
    float temp77;
    temp77= saturate(r1.a);
    float3 temp78;
    temp76= temp77;
    color1.rgb= temp66;
    tex0.a= temp76;
    // exp.components=3 term=3
    // line 69: R0= D1*C1
    float3 temp79;
    float3 temp80;
    temp80= saturate(color1.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c2.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    r0.rgb= temp79;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp85;
    float3 temp86;
    temp86= saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= saturate(r1.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp91;
    float temp92;
    temp92= 0;
    float3 temp93;
    temp91= temp92;
    r0.rgb= temp85;
    r0.a= temp91;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=0 $light_diffuse_overbrightness=1
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 48: D1= 0
    float temp66;
    float temp67;
    temp67= 0;
    float3 temp68;
    temp66= temp67;
    // exp.components=1 term=1
    // line 49: T0a= R1a
    float temp69;
    float temp70;
    temp70= saturate(r1.a);
    float3 temp71;
    temp69= temp70;
    color1.rgb= temp66;
    tex0.a= temp69;
    // exp.components=3 term=3
    // line 73: R0= OUT_SCALE_BY_2(D1*C1)
    float3 temp72;
    float3 temp73;
    temp73= saturate(color1.rgb);
    float3 temp74;
    float3 temp75;
    temp75= c2.rgb;
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    temp72= 2 * temp72;
    r0.rgb= temp72;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(r1.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp84;
    float temp85;
    temp85= 0;
    float3 temp86;
    temp84= temp85;
    r0.rgb= temp78;
    r0.a= temp84;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=1 $light_diffuse_overbrightness=1
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 52: D1= R0a*R0a
    float temp66;
    float temp67;
    temp67= saturate(r0.a);
    float3 temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= temp67 * temp69;
    temp66= temp71;
    // exp.components=1 term=1
    // line 53: T0a= R1a
    float temp72;
    float temp73;
    temp73= saturate(r1.a);
    float3 temp74;
    temp72= temp73;
    color1.rgb= temp66;
    tex0.a= temp72;
    // exp.components=3 term=3
    // line 73: R0= OUT_SCALE_BY_2(D1*C1)
    float3 temp75;
    float3 temp76;
    temp76= saturate(color1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= c2.rgb;
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    temp75= 2 * temp75;
    r0.rgb= temp75;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp81;
    float3 temp82;
    temp82= saturate(r0.rgb);
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float3 temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp87;
    float temp88;
    temp88= 0;
    float3 temp89;
    temp87= temp88;
    r0.rgb= temp81;
    r0.a= temp87;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=2 $light_diffuse_overbrightness=1
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 56: D1= D0a
    float temp66;
    float temp67;
    temp67= saturate(color0.a);
    float3 temp68;
    temp66= temp67;
    // exp.components=1 term=1
    // line 57: T0a= R1a
    float temp69;
    float temp70;
    temp70= saturate(r1.a);
    float3 temp71;
    temp69= temp70;
    color1.rgb= temp66;
    tex0.a= temp69;
    // exp.components=3 term=3
    // line 73: R0= OUT_SCALE_BY_2(D1*C1)
    float3 temp72;
    float3 temp73;
    temp73= saturate(color1.rgb);
    float3 temp74;
    float3 temp75;
    temp75= c2.rgb;
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    temp72= 2 * temp72;
    r0.rgb= temp72;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(r1.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp84;
    float temp85;
    temp85= 0;
    float3 temp86;
    temp84= temp85;
    r0.rgb= temp78;
    r0.a= temp84;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=3 $light_diffuse_overbrightness=1
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1 term=1
    // line 61: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp66;
    float temp67;
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp67= temp73;
    float temp74;
    temp74= 0.752941;
    float3 temp75;
    temp68= temp74;
    temp66= temp67 - temp68;
    temp66= 4 * temp66;
    // exp.components=1 term=1
    // line 62: T0a= R1a
    float temp76;
    float temp77;
    temp77= saturate(r1.a);
    float3 temp78;
    temp76= temp77;
    color1.rgb= temp66;
    tex0.a= temp76;
    // exp.components=3 term=3
    // line 73: R0= OUT_SCALE_BY_2(D1*C1)
    float3 temp79;
    float3 temp80;
    temp80= saturate(color1.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c2.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    temp79= 2 * temp79;
    r0.rgb= temp79;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp85;
    float3 temp86;
    temp86= saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= saturate(r1.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp91;
    float temp92;
    temp92= 0;
    float3 temp93;
    temp91= temp92;
    r0.rgb= temp85;
    r0.a= temp91;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=0 $light_diffuse_overbrightness=2
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 48: D1= 0
    float temp66;
    float temp67;
    temp67= 0;
    float3 temp68;
    temp66= temp67;
    // exp.components=1 term=1
    // line 49: T0a= R1a
    float temp69;
    float temp70;
    temp70= saturate(r1.a);
    float3 temp71;
    temp69= temp70;
    color1.rgb= temp66;
    tex0.a= temp69;
    // exp.components=3 term=3
    // line 77: R0= OUT_SCALE_BY_4(D1*C1)
    float3 temp72;
    float3 temp73;
    temp73= saturate(color1.rgb);
    float3 temp74;
    float3 temp75;
    temp75= c2.rgb;
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    temp72= 4 * temp72;
    r0.rgb= temp72;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(r1.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp84;
    float temp85;
    temp85= 0;
    float3 temp86;
    temp84= temp85;
    r0.rgb= temp78;
    r0.a= temp84;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=1 $light_diffuse_overbrightness=2
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 52: D1= R0a*R0a
    float temp66;
    float temp67;
    temp67= saturate(r0.a);
    float3 temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= temp67 * temp69;
    temp66= temp71;
    // exp.components=1 term=1
    // line 53: T0a= R1a
    float temp72;
    float temp73;
    temp73= saturate(r1.a);
    float3 temp74;
    temp72= temp73;
    color1.rgb= temp66;
    tex0.a= temp72;
    // exp.components=3 term=3
    // line 77: R0= OUT_SCALE_BY_4(D1*C1)
    float3 temp75;
    float3 temp76;
    temp76= saturate(color1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= c2.rgb;
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    temp75= 4 * temp75;
    r0.rgb= temp75;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp81;
    float3 temp82;
    temp82= saturate(r0.rgb);
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float3 temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp87;
    float temp88;
    temp88= 0;
    float3 temp89;
    temp87= temp88;
    r0.rgb= temp81;
    r0.a= temp87;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=2 $light_diffuse_overbrightness=2
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1
    // line 56: D1= D0a
    float temp66;
    float temp67;
    temp67= saturate(color0.a);
    float3 temp68;
    temp66= temp67;
    // exp.components=1 term=1
    // line 57: T0a= R1a
    float temp69;
    float temp70;
    temp70= saturate(r1.a);
    float3 temp71;
    temp69= temp70;
    color1.rgb= temp66;
    tex0.a= temp69;
    // exp.components=3 term=3
    // line 77: R0= OUT_SCALE_BY_4(D1*C1)
    float3 temp72;
    float3 temp73;
    temp73= saturate(color1.rgb);
    float3 temp74;
    float3 temp75;
    temp75= c2.rgb;
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    temp72= 4 * temp72;
    r0.rgb= temp72;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(r1.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp84;
    float temp85;
    temp85= 0;
    float3 temp86;
    temp84= temp85;
    r0.rgb= temp78;
    r0.a= temp84;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $specular_type=3 $light_diffuse_overbrightness=2
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 25: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 26: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3
    // line 28: T0= SIGNED(R0)*SIGNED(R1)
    float3 temp12;
    float3 temp13;
    temp13= r0.rgb;
    float3 temp14;
    float3 temp15;
    temp15= r1.rgb;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 29: T1= EXPAND(T1).HALF_BIAS(T3)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex3.rgb) - 0.5;
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    // exp.components=1 term=1 term=1
    // line 30: R1a= OUT_SCALE_BY_4(R0b + R0b)
    float temp24;
    float temp25;
    float temp26;
    float temp27;
    temp27= saturate(r0.b);
    float3 temp28;
    temp25= temp27;
    float temp29;
    temp29= saturate(r0.b);
    float3 temp30;
    temp26= temp29;
    temp24= temp25 + temp26;
    temp24= 4 * temp24;
    tex0.rgb= temp12;
    tex1.rgb= temp18;
    r1.a= temp24;
    // exp.components=3 term=3 term=3
    // line 32: R1= R1*D0 + INVERT(R1)*D1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r1.rgb);
    float3 temp35;
    float3 temp36;
    temp36= saturate(color0.rgb);
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= 1-saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(color1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp33= temp43;
    temp31= temp32 + temp33;
    // exp.components=1 term=1 term=1
    // line 33: R0a= OUT_SCALE_BY_2(SIGNED(T0b) - SIGNED(T1b))
    float temp44;
    float temp45;
    float temp46;
    float temp47;
    temp47= tex0.b;
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= tex1.b;
    float3 temp50;
    temp46= temp49;
    temp44= temp45 - temp46;
    temp44= 2 * temp44;
    r1.rgb= temp31;
    r0.a= temp44;
    // exp.components=1 term=1
    // line 40: R0a= R0a*R0a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(r0.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 42: D0a= R0a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    temp57= temp58;
    // exp.components=1 term=1
    // line 43: R0a= R0a*R0a
    float temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= saturate(r0.a);
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    color0.a= temp57;
    r0.a= temp60;
    // exp.components=1 term=1 term=1
    // line 61: D1= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp66;
    float temp67;
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp67= temp73;
    float temp74;
    temp74= 0.752941;
    float3 temp75;
    temp68= temp74;
    temp66= temp67 - temp68;
    temp66= 4 * temp66;
    // exp.components=1 term=1
    // line 62: T0a= R1a
    float temp76;
    float temp77;
    temp77= saturate(r1.a);
    float3 temp78;
    temp76= temp77;
    color1.rgb= temp66;
    tex0.a= temp76;
    // exp.components=3 term=3
    // line 77: R0= OUT_SCALE_BY_4(D1*C1)
    float3 temp79;
    float3 temp80;
    temp80= saturate(color1.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c2.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    temp79= 4 * temp79;
    r0.rgb= temp79;
    // exp.components=3 term=3
    // line 81: SRCCOLOR= R0*R1
    float3 temp85;
    float3 temp86;
    temp86= saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= saturate(r1.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    // exp.components=1 term=1
    // line 82: SRCALPHA= 0
    float temp91;
    float temp92;
    temp92= 0;
    float3 temp93;
    temp91= temp92;
    r0.rgb= temp85;
    r0.a= temp91;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
