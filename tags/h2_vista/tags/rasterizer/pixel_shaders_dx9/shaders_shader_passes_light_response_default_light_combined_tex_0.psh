; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_light_response_default_light_combined_tex_0.txt
;
#const C1.rgb= $specular_color
#const C2.rgb= $specular_glancing_color
#const C3.rgb= $light_diffuse_color
#const C4.rgb= $light_specular_color
#case $light_diffuse_contrast=0 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp74;
    float temp75;
    temp75= 0;
    float3 temp76;
    temp74= temp75;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp77;
    float temp78;
    temp78= saturate(tex0.a);
    float3 temp79;
    float temp80;
    temp80= saturate(r1.a);
    float3 temp81;
    float temp82;
    temp82= temp78 * temp80;
    temp77= temp82;
    color1.a= temp74;
    tex0.a= temp77;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float temp86;
    temp86= saturate(color1.a);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp83= temp88;
    r1.rgb= temp83;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp89;
    float3 temp90;
    float3 temp91;
    float3 temp92;
    temp92= saturate(r0.rgb);
    float3 temp93;
    float3 temp94;
    temp94= saturate(tex0.rgb);
    float3 temp95;
    float3 temp96;
    temp96= temp92 * temp94;
    temp90= temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(tex0.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp91= temp101;
    temp89= temp90 + temp91;
    r0.rgb= temp89;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp102;
    float3 temp103;
    temp103= saturate(r0.rgb);
    float3 temp104;
    float temp105;
    temp105= 1-saturate(color0.b);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp108;
    float temp109;
    temp109= 0;
    float3 temp110;
    temp108= temp109;
    r0.rgb= temp102;
    r0.a= temp108;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp87;
    float temp88;
    temp88= 0;
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp90;
    float temp91;
    temp91= saturate(tex0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r1.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    color1.a= temp87;
    tex0.a= temp90;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(color1.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    r1.rgb= temp96;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp102;
    float3 temp103;
    float3 temp104;
    float3 temp105;
    temp105= saturate(r0.rgb);
    float3 temp106;
    float3 temp107;
    temp107= saturate(tex0.rgb);
    float3 temp108;
    float3 temp109;
    temp109= temp105 * temp107;
    temp103= temp109;
    float3 temp110;
    temp110= saturate(r1.rgb);
    float3 temp111;
    float temp112;
    temp112= saturate(tex0.a);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp104= temp114;
    temp102= temp103 + temp104;
    r0.rgb= temp102;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp115;
    float3 temp116;
    temp116= saturate(r0.rgb);
    float3 temp117;
    float temp118;
    temp118= 1-saturate(color0.b);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp121;
    float temp122;
    temp122= 0;
    float3 temp123;
    temp121= temp122;
    r0.rgb= temp115;
    r0.a= temp121;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp74;
    float temp75;
    temp75= saturate(r0.a);
    float3 temp76;
    float temp77;
    temp77= saturate(r0.a);
    float3 temp78;
    float temp79;
    temp79= temp75 * temp77;
    temp74= temp79;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp80;
    float temp81;
    temp81= saturate(tex0.a);
    float3 temp82;
    float temp83;
    temp83= saturate(r1.a);
    float3 temp84;
    float temp85;
    temp85= temp81 * temp83;
    temp80= temp85;
    color1.a= temp74;
    tex0.a= temp80;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp86;
    float3 temp87;
    temp87= saturate(r1.rgb);
    float3 temp88;
    float temp89;
    temp89= saturate(color1.a);
    float3 temp90;
    float3 temp91;
    temp91= temp87 * temp89;
    temp86= temp91;
    r1.rgb= temp86;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp92;
    float3 temp93;
    float3 temp94;
    float3 temp95;
    temp95= saturate(r0.rgb);
    float3 temp96;
    float3 temp97;
    temp97= saturate(tex0.rgb);
    float3 temp98;
    float3 temp99;
    temp99= temp95 * temp97;
    temp93= temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(tex0.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp94= temp104;
    temp92= temp93 + temp94;
    r0.rgb= temp92;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp105;
    float3 temp106;
    temp106= saturate(r0.rgb);
    float3 temp107;
    float temp108;
    temp108= 1-saturate(color0.b);
    float3 temp109;
    float3 temp110;
    temp110= temp106 * temp108;
    temp105= temp110;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp111;
    float temp112;
    temp112= 0;
    float3 temp113;
    temp111= temp112;
    r0.rgb= temp105;
    r0.a= temp111;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.a= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp87;
    float temp88;
    temp88= saturate(r0.a);
    float3 temp89;
    float temp90;
    temp90= saturate(r0.a);
    float3 temp91;
    float temp92;
    temp92= temp88 * temp90;
    temp87= temp92;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp87;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.a= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp74;
    float temp75;
    temp75= saturate(color0.a);
    float3 temp76;
    temp74= temp75;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp77;
    float temp78;
    temp78= saturate(tex0.a);
    float3 temp79;
    float temp80;
    temp80= saturate(r1.a);
    float3 temp81;
    float temp82;
    temp82= temp78 * temp80;
    temp77= temp82;
    color1.a= temp74;
    tex0.a= temp77;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float temp86;
    temp86= saturate(color1.a);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp83= temp88;
    r1.rgb= temp83;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp89;
    float3 temp90;
    float3 temp91;
    float3 temp92;
    temp92= saturate(r0.rgb);
    float3 temp93;
    float3 temp94;
    temp94= saturate(tex0.rgb);
    float3 temp95;
    float3 temp96;
    temp96= temp92 * temp94;
    temp90= temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(tex0.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp91= temp101;
    temp89= temp90 + temp91;
    r0.rgb= temp89;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp102;
    float3 temp103;
    temp103= saturate(r0.rgb);
    float3 temp104;
    float temp105;
    temp105= 1-saturate(color0.b);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp108;
    float temp109;
    temp109= 0;
    float3 temp110;
    temp108= temp109;
    r0.rgb= temp102;
    r0.a= temp108;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp87;
    float temp88;
    temp88= saturate(color0.a);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp90;
    float temp91;
    temp91= saturate(tex0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r1.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    color1.a= temp87;
    tex0.a= temp90;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(color1.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    r1.rgb= temp96;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp102;
    float3 temp103;
    float3 temp104;
    float3 temp105;
    temp105= saturate(r0.rgb);
    float3 temp106;
    float3 temp107;
    temp107= saturate(tex0.rgb);
    float3 temp108;
    float3 temp109;
    temp109= temp105 * temp107;
    temp103= temp109;
    float3 temp110;
    temp110= saturate(r1.rgb);
    float3 temp111;
    float temp112;
    temp112= saturate(tex0.a);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp104= temp114;
    temp102= temp103 + temp104;
    r0.rgb= temp102;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp115;
    float3 temp116;
    temp116= saturate(r0.rgb);
    float3 temp117;
    float temp118;
    temp118= 1-saturate(color0.b);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp121;
    float temp122;
    temp122= 0;
    float3 temp123;
    temp121= temp122;
    r0.rgb= temp115;
    r0.a= temp121;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp74;
    float temp75;
    float temp76;
    float temp77;
    temp77= saturate(r0.a);
    float3 temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    float temp81;
    temp81= temp77 * temp79;
    temp75= temp81;
    float temp82;
    temp82= 0.752941;
    float3 temp83;
    temp76= temp82;
    temp74= temp75 - temp76;
    temp74= 4 * temp74;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp84;
    float temp85;
    temp85= saturate(tex0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r1.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color1.a= temp74;
    tex0.a= temp84;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp90;
    float3 temp91;
    temp91= saturate(r1.rgb);
    float3 temp92;
    float temp93;
    temp93= saturate(color1.a);
    float3 temp94;
    float3 temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    r1.rgb= temp90;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp96;
    float3 temp97;
    float3 temp98;
    float3 temp99;
    temp99= saturate(r0.rgb);
    float3 temp100;
    float3 temp101;
    temp101= saturate(tex0.rgb);
    float3 temp102;
    float3 temp103;
    temp103= temp99 * temp101;
    temp97= temp103;
    float3 temp104;
    temp104= saturate(r1.rgb);
    float3 temp105;
    float temp106;
    temp106= saturate(tex0.a);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp98= temp108;
    temp96= temp97 + temp98;
    r0.rgb= temp96;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp109;
    float3 temp110;
    temp110= saturate(r0.rgb);
    float3 temp111;
    float temp112;
    temp112= 1-saturate(color0.b);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp115;
    float temp116;
    temp116= 0;
    float3 temp117;
    temp115= temp116;
    r0.rgb= temp109;
    r0.a= temp115;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.a= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float temp109;
    temp109= saturate(color1.a);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= saturate(r0.a);
    float3 temp91;
    float temp92;
    temp92= saturate(r0.a);
    float3 temp93;
    float temp94;
    temp94= temp90 * temp92;
    temp88= temp94;
    float temp95;
    temp95= 0.752941;
    float3 temp96;
    temp89= temp95;
    temp87= temp88 - temp89;
    temp87= 4 * temp87;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp97;
    float temp98;
    temp98= saturate(tex0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r1.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    color1.a= temp87;
    tex0.a= temp97;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp103;
    float3 temp104;
    temp104= saturate(r1.rgb);
    float3 temp105;
    float temp106;
    temp106= saturate(color1.a);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    r1.rgb= temp103;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp109;
    float3 temp110;
    float3 temp111;
    float3 temp112;
    temp112= saturate(r0.rgb);
    float3 temp113;
    float3 temp114;
    temp114= saturate(tex0.rgb);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp110= temp116;
    float3 temp117;
    temp117= saturate(r1.rgb);
    float3 temp118;
    float temp119;
    temp119= saturate(tex0.a);
    float3 temp120;
    float3 temp121;
    temp121= temp117 * temp119;
    temp111= temp121;
    temp109= temp110 + temp111;
    r0.rgb= temp109;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp122;
    float3 temp123;
    temp123= saturate(r0.rgb);
    float3 temp124;
    float temp125;
    temp125= 1-saturate(color0.b);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp128;
    float temp129;
    temp129= 0;
    float3 temp130;
    temp128= temp129;
    r0.rgb= temp122;
    r0.a= temp128;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.a= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float temp109;
    temp109= saturate(color1.a);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 117: R0= R0*T0 + R1*T0a
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp74;
    float temp75;
    temp75= 0;
    float3 temp76;
    temp74= temp75;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp77;
    float temp78;
    temp78= saturate(tex0.a);
    float3 temp79;
    float temp80;
    temp80= saturate(r1.a);
    float3 temp81;
    float temp82;
    temp82= temp78 * temp80;
    temp77= temp82;
    color1.a= temp74;
    tex0.a= temp77;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float temp86;
    temp86= saturate(color1.a);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp83= temp88;
    r1.rgb= temp83;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp89;
    float3 temp90;
    float3 temp91;
    float3 temp92;
    temp92= saturate(r0.rgb);
    float3 temp93;
    float3 temp94;
    temp94= saturate(tex0.rgb);
    float3 temp95;
    float3 temp96;
    temp96= temp92 * temp94;
    temp90= temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(tex0.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp91= temp101;
    temp89= temp90 + temp91;
    temp89= 2 * temp89;
    r0.rgb= temp89;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp102;
    float3 temp103;
    temp103= saturate(r0.rgb);
    float3 temp104;
    float temp105;
    temp105= 1-saturate(color0.b);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp108;
    float temp109;
    temp109= 0;
    float3 temp110;
    temp108= temp109;
    r0.rgb= temp102;
    r0.a= temp108;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 2 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp87;
    float temp88;
    temp88= 0;
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp90;
    float temp91;
    temp91= saturate(tex0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r1.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    color1.a= temp87;
    tex0.a= temp90;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(color1.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    r1.rgb= temp96;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp102;
    float3 temp103;
    float3 temp104;
    float3 temp105;
    temp105= saturate(r0.rgb);
    float3 temp106;
    float3 temp107;
    temp107= saturate(tex0.rgb);
    float3 temp108;
    float3 temp109;
    temp109= temp105 * temp107;
    temp103= temp109;
    float3 temp110;
    temp110= saturate(r1.rgb);
    float3 temp111;
    float temp112;
    temp112= saturate(tex0.a);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp104= temp114;
    temp102= temp103 + temp104;
    temp102= 2 * temp102;
    r0.rgb= temp102;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp115;
    float3 temp116;
    temp116= saturate(r0.rgb);
    float3 temp117;
    float temp118;
    temp118= 1-saturate(color0.b);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp121;
    float temp122;
    temp122= 0;
    float3 temp123;
    temp121= temp122;
    r0.rgb= temp115;
    r0.a= temp121;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 2 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp74;
    float temp75;
    temp75= saturate(r0.a);
    float3 temp76;
    float temp77;
    temp77= saturate(r0.a);
    float3 temp78;
    float temp79;
    temp79= temp75 * temp77;
    temp74= temp79;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp80;
    float temp81;
    temp81= saturate(tex0.a);
    float3 temp82;
    float temp83;
    temp83= saturate(r1.a);
    float3 temp84;
    float temp85;
    temp85= temp81 * temp83;
    temp80= temp85;
    color1.a= temp74;
    tex0.a= temp80;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp86;
    float3 temp87;
    temp87= saturate(r1.rgb);
    float3 temp88;
    float temp89;
    temp89= saturate(color1.a);
    float3 temp90;
    float3 temp91;
    temp91= temp87 * temp89;
    temp86= temp91;
    r1.rgb= temp86;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp92;
    float3 temp93;
    float3 temp94;
    float3 temp95;
    temp95= saturate(r0.rgb);
    float3 temp96;
    float3 temp97;
    temp97= saturate(tex0.rgb);
    float3 temp98;
    float3 temp99;
    temp99= temp95 * temp97;
    temp93= temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(tex0.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp94= temp104;
    temp92= temp93 + temp94;
    temp92= 2 * temp92;
    r0.rgb= temp92;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp105;
    float3 temp106;
    temp106= saturate(r0.rgb);
    float3 temp107;
    float temp108;
    temp108= 1-saturate(color0.b);
    float3 temp109;
    float3 temp110;
    temp110= temp106 * temp108;
    temp105= temp110;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp111;
    float temp112;
    temp112= 0;
    float3 temp113;
    temp111= temp112;
    r0.rgb= temp105;
    r0.a= temp111;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.a= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    temp108= 2 * temp108;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp87;
    float temp88;
    temp88= saturate(r0.a);
    float3 temp89;
    float temp90;
    temp90= saturate(r0.a);
    float3 temp91;
    float temp92;
    temp92= temp88 * temp90;
    temp87= temp92;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp87;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 2 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.a= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    temp108= 2 * temp108;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp74;
    float temp75;
    temp75= saturate(color0.a);
    float3 temp76;
    temp74= temp75;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp77;
    float temp78;
    temp78= saturate(tex0.a);
    float3 temp79;
    float temp80;
    temp80= saturate(r1.a);
    float3 temp81;
    float temp82;
    temp82= temp78 * temp80;
    temp77= temp82;
    color1.a= temp74;
    tex0.a= temp77;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float temp86;
    temp86= saturate(color1.a);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp83= temp88;
    r1.rgb= temp83;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp89;
    float3 temp90;
    float3 temp91;
    float3 temp92;
    temp92= saturate(r0.rgb);
    float3 temp93;
    float3 temp94;
    temp94= saturate(tex0.rgb);
    float3 temp95;
    float3 temp96;
    temp96= temp92 * temp94;
    temp90= temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(tex0.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp91= temp101;
    temp89= temp90 + temp91;
    temp89= 2 * temp89;
    r0.rgb= temp89;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp102;
    float3 temp103;
    temp103= saturate(r0.rgb);
    float3 temp104;
    float temp105;
    temp105= 1-saturate(color0.b);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp108;
    float temp109;
    temp109= 0;
    float3 temp110;
    temp108= temp109;
    r0.rgb= temp102;
    r0.a= temp108;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 2 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp87;
    float temp88;
    temp88= saturate(color0.a);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp90;
    float temp91;
    temp91= saturate(tex0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r1.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    color1.a= temp87;
    tex0.a= temp90;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(color1.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    r1.rgb= temp96;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp102;
    float3 temp103;
    float3 temp104;
    float3 temp105;
    temp105= saturate(r0.rgb);
    float3 temp106;
    float3 temp107;
    temp107= saturate(tex0.rgb);
    float3 temp108;
    float3 temp109;
    temp109= temp105 * temp107;
    temp103= temp109;
    float3 temp110;
    temp110= saturate(r1.rgb);
    float3 temp111;
    float temp112;
    temp112= saturate(tex0.a);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp104= temp114;
    temp102= temp103 + temp104;
    temp102= 2 * temp102;
    r0.rgb= temp102;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp115;
    float3 temp116;
    temp116= saturate(r0.rgb);
    float3 temp117;
    float temp118;
    temp118= 1-saturate(color0.b);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp121;
    float temp122;
    temp122= 0;
    float3 temp123;
    temp121= temp122;
    r0.rgb= temp115;
    r0.a= temp121;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 2 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp74;
    float temp75;
    float temp76;
    float temp77;
    temp77= saturate(r0.a);
    float3 temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    float temp81;
    temp81= temp77 * temp79;
    temp75= temp81;
    float temp82;
    temp82= 0.752941;
    float3 temp83;
    temp76= temp82;
    temp74= temp75 - temp76;
    temp74= 4 * temp74;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp84;
    float temp85;
    temp85= saturate(tex0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r1.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color1.a= temp74;
    tex0.a= temp84;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp90;
    float3 temp91;
    temp91= saturate(r1.rgb);
    float3 temp92;
    float temp93;
    temp93= saturate(color1.a);
    float3 temp94;
    float3 temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    r1.rgb= temp90;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp96;
    float3 temp97;
    float3 temp98;
    float3 temp99;
    temp99= saturate(r0.rgb);
    float3 temp100;
    float3 temp101;
    temp101= saturate(tex0.rgb);
    float3 temp102;
    float3 temp103;
    temp103= temp99 * temp101;
    temp97= temp103;
    float3 temp104;
    temp104= saturate(r1.rgb);
    float3 temp105;
    float temp106;
    temp106= saturate(tex0.a);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp98= temp108;
    temp96= temp97 + temp98;
    temp96= 2 * temp96;
    r0.rgb= temp96;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp109;
    float3 temp110;
    temp110= saturate(r0.rgb);
    float3 temp111;
    float temp112;
    temp112= 1-saturate(color0.b);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp115;
    float temp116;
    temp116= 0;
    float3 temp117;
    temp115= temp116;
    r0.rgb= temp109;
    r0.a= temp115;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.a= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float temp109;
    temp109= saturate(color1.a);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    temp112= 2 * temp112;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= saturate(r0.a);
    float3 temp91;
    float temp92;
    temp92= saturate(r0.a);
    float3 temp93;
    float temp94;
    temp94= temp90 * temp92;
    temp88= temp94;
    float temp95;
    temp95= 0.752941;
    float3 temp96;
    temp89= temp95;
    temp87= temp88 - temp89;
    temp87= 4 * temp87;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp97;
    float temp98;
    temp98= saturate(tex0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r1.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    color1.a= temp87;
    tex0.a= temp97;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp103;
    float3 temp104;
    temp104= saturate(r1.rgb);
    float3 temp105;
    float temp106;
    temp106= saturate(color1.a);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    r1.rgb= temp103;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp109;
    float3 temp110;
    float3 temp111;
    float3 temp112;
    temp112= saturate(r0.rgb);
    float3 temp113;
    float3 temp114;
    temp114= saturate(tex0.rgb);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp110= temp116;
    float3 temp117;
    temp117= saturate(r1.rgb);
    float3 temp118;
    float temp119;
    temp119= saturate(tex0.a);
    float3 temp120;
    float3 temp121;
    temp121= temp117 * temp119;
    temp111= temp121;
    temp109= temp110 + temp111;
    temp109= 2 * temp109;
    r0.rgb= temp109;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp122;
    float3 temp123;
    temp123= saturate(r0.rgb);
    float3 temp124;
    float temp125;
    temp125= 1-saturate(color0.b);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp128;
    float temp129;
    temp129= 0;
    float3 temp130;
    temp128= temp129;
    r0.rgb= temp122;
    r0.a= temp128;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.a= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float temp109;
    temp109= saturate(color1.a);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 120: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0a)
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    temp112= 2 * temp112;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp74;
    float temp75;
    temp75= 0;
    float3 temp76;
    temp74= temp75;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp77;
    float temp78;
    temp78= saturate(tex0.a);
    float3 temp79;
    float temp80;
    temp80= saturate(r1.a);
    float3 temp81;
    float temp82;
    temp82= temp78 * temp80;
    temp77= temp82;
    color1.a= temp74;
    tex0.a= temp77;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float temp86;
    temp86= saturate(color1.a);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp83= temp88;
    r1.rgb= temp83;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp89;
    float3 temp90;
    float3 temp91;
    float3 temp92;
    temp92= saturate(r0.rgb);
    float3 temp93;
    float3 temp94;
    temp94= saturate(tex0.rgb);
    float3 temp95;
    float3 temp96;
    temp96= temp92 * temp94;
    temp90= temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(tex0.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp91= temp101;
    temp89= temp90 + temp91;
    temp89= 4 * temp89;
    r0.rgb= temp89;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp102;
    float3 temp103;
    temp103= saturate(r0.rgb);
    float3 temp104;
    float temp105;
    temp105= 1-saturate(color0.b);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp108;
    float temp109;
    temp109= 0;
    float3 temp110;
    temp108= temp109;
    r0.rgb= temp102;
    r0.a= temp108;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 4 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp87;
    float temp88;
    temp88= 0;
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp90;
    float temp91;
    temp91= saturate(tex0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r1.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    color1.a= temp87;
    tex0.a= temp90;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(color1.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    r1.rgb= temp96;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp102;
    float3 temp103;
    float3 temp104;
    float3 temp105;
    temp105= saturate(r0.rgb);
    float3 temp106;
    float3 temp107;
    temp107= saturate(tex0.rgb);
    float3 temp108;
    float3 temp109;
    temp109= temp105 * temp107;
    temp103= temp109;
    float3 temp110;
    temp110= saturate(r1.rgb);
    float3 temp111;
    float temp112;
    temp112= saturate(tex0.a);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp104= temp114;
    temp102= temp103 + temp104;
    temp102= 4 * temp102;
    r0.rgb= temp102;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp115;
    float3 temp116;
    temp116= saturate(r0.rgb);
    float3 temp117;
    float temp118;
    temp118= 1-saturate(color0.b);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp121;
    float temp122;
    temp122= 0;
    float3 temp123;
    temp121= temp122;
    r0.rgb= temp115;
    r0.a= temp121;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 94: D1a= 0
    float temp90;
    float temp91;
    temp91= 0;
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 95: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 4 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp74;
    float temp75;
    temp75= saturate(r0.a);
    float3 temp76;
    float temp77;
    temp77= saturate(r0.a);
    float3 temp78;
    float temp79;
    temp79= temp75 * temp77;
    temp74= temp79;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp80;
    float temp81;
    temp81= saturate(tex0.a);
    float3 temp82;
    float temp83;
    temp83= saturate(r1.a);
    float3 temp84;
    float temp85;
    temp85= temp81 * temp83;
    temp80= temp85;
    color1.a= temp74;
    tex0.a= temp80;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp86;
    float3 temp87;
    temp87= saturate(r1.rgb);
    float3 temp88;
    float temp89;
    temp89= saturate(color1.a);
    float3 temp90;
    float3 temp91;
    temp91= temp87 * temp89;
    temp86= temp91;
    r1.rgb= temp86;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp92;
    float3 temp93;
    float3 temp94;
    float3 temp95;
    temp95= saturate(r0.rgb);
    float3 temp96;
    float3 temp97;
    temp97= saturate(tex0.rgb);
    float3 temp98;
    float3 temp99;
    temp99= temp95 * temp97;
    temp93= temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(tex0.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp94= temp104;
    temp92= temp93 + temp94;
    temp92= 4 * temp92;
    r0.rgb= temp92;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp105;
    float3 temp106;
    temp106= saturate(r0.rgb);
    float3 temp107;
    float temp108;
    temp108= 1-saturate(color0.b);
    float3 temp109;
    float3 temp110;
    temp110= temp106 * temp108;
    temp105= temp110;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp111;
    float temp112;
    temp112= 0;
    float3 temp113;
    temp111= temp112;
    r0.rgb= temp105;
    r0.a= temp111;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.a= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    temp108= 4 * temp108;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp87;
    float temp88;
    temp88= saturate(r0.a);
    float3 temp89;
    float temp90;
    temp90= saturate(r0.a);
    float3 temp91;
    float temp92;
    temp92= temp88 * temp90;
    temp87= temp92;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp87;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 4 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 98: D1a= R0a*R0a
    float temp90;
    float temp91;
    temp91= saturate(r0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    // exp.components=1 term=1
    // line 99: T0a= T0a*R1a
    float temp96;
    float temp97;
    temp97= saturate(tex0.a);
    float3 temp98;
    float temp99;
    temp99= saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    color1.a= temp90;
    tex0.a= temp96;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp102;
    float3 temp103;
    temp103= saturate(r1.rgb);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    r1.rgb= temp102;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= saturate(r0.rgb);
    float3 temp112;
    float3 temp113;
    temp113= saturate(tex0.rgb);
    float3 temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r1.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex0.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp110= temp120;
    temp108= temp109 + temp110;
    temp108= 4 * temp108;
    r0.rgb= temp108;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp121;
    float3 temp122;
    temp122= saturate(r0.rgb);
    float3 temp123;
    float temp124;
    temp124= 1-saturate(color0.b);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp127;
    float temp128;
    temp128= 0;
    float3 temp129;
    temp127= temp128;
    r0.rgb= temp121;
    r0.a= temp127;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp74;
    float temp75;
    temp75= saturate(color0.a);
    float3 temp76;
    temp74= temp75;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp77;
    float temp78;
    temp78= saturate(tex0.a);
    float3 temp79;
    float temp80;
    temp80= saturate(r1.a);
    float3 temp81;
    float temp82;
    temp82= temp78 * temp80;
    temp77= temp82;
    color1.a= temp74;
    tex0.a= temp77;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp83;
    float3 temp84;
    temp84= saturate(r1.rgb);
    float3 temp85;
    float temp86;
    temp86= saturate(color1.a);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp83= temp88;
    r1.rgb= temp83;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp89;
    float3 temp90;
    float3 temp91;
    float3 temp92;
    temp92= saturate(r0.rgb);
    float3 temp93;
    float3 temp94;
    temp94= saturate(tex0.rgb);
    float3 temp95;
    float3 temp96;
    temp96= temp92 * temp94;
    temp90= temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(tex0.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp91= temp101;
    temp89= temp90 + temp91;
    temp89= 4 * temp89;
    r0.rgb= temp89;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp102;
    float3 temp103;
    temp103= saturate(r0.rgb);
    float3 temp104;
    float temp105;
    temp105= 1-saturate(color0.b);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp108;
    float temp109;
    temp109= 0;
    float3 temp110;
    temp108= temp109;
    r0.rgb= temp102;
    r0.a= temp108;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 4 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp87;
    float temp88;
    temp88= saturate(color0.a);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp90;
    float temp91;
    temp91= saturate(tex0.a);
    float3 temp92;
    float temp93;
    temp93= saturate(r1.a);
    float3 temp94;
    float temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    color1.a= temp87;
    tex0.a= temp90;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp96;
    float3 temp97;
    temp97= saturate(r1.rgb);
    float3 temp98;
    float temp99;
    temp99= saturate(color1.a);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    r1.rgb= temp96;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp102;
    float3 temp103;
    float3 temp104;
    float3 temp105;
    temp105= saturate(r0.rgb);
    float3 temp106;
    float3 temp107;
    temp107= saturate(tex0.rgb);
    float3 temp108;
    float3 temp109;
    temp109= temp105 * temp107;
    temp103= temp109;
    float3 temp110;
    temp110= saturate(r1.rgb);
    float3 temp111;
    float temp112;
    temp112= saturate(tex0.a);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp104= temp114;
    temp102= temp103 + temp104;
    temp102= 4 * temp102;
    r0.rgb= temp102;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp115;
    float3 temp116;
    temp116= saturate(r0.rgb);
    float3 temp117;
    float temp118;
    temp118= 1-saturate(color0.b);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp121;
    float temp122;
    temp122= 0;
    float3 temp123;
    temp121= temp122;
    r0.rgb= temp115;
    r0.a= temp121;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1
    // line 102: D1a= D0a
    float temp90;
    float temp91;
    temp91= saturate(color0.a);
    float3 temp92;
    temp90= temp91;
    // exp.components=1 term=1
    // line 103: T0a= T0a*R1a
    float temp93;
    float temp94;
    temp94= saturate(tex0.a);
    float3 temp95;
    float temp96;
    temp96= saturate(r1.a);
    float3 temp97;
    float temp98;
    temp98= temp94 * temp96;
    temp93= temp98;
    color1.a= temp90;
    tex0.a= temp93;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp99;
    float3 temp100;
    temp100= saturate(r1.rgb);
    float3 temp101;
    float temp102;
    temp102= saturate(color1.a);
    float3 temp103;
    float3 temp104;
    temp104= temp100 * temp102;
    temp99= temp104;
    r1.rgb= temp99;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp105;
    float3 temp106;
    float3 temp107;
    float3 temp108;
    temp108= saturate(r0.rgb);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp106= temp112;
    float3 temp113;
    temp113= saturate(r1.rgb);
    float3 temp114;
    float temp115;
    temp115= saturate(tex0.a);
    float3 temp116;
    float3 temp117;
    temp117= temp113 * temp115;
    temp107= temp117;
    temp105= temp106 + temp107;
    temp105= 4 * temp105;
    r0.rgb= temp105;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp118;
    float3 temp119;
    temp119= saturate(r0.rgb);
    float3 temp120;
    float temp121;
    temp121= 1-saturate(color0.b);
    float3 temp122;
    float3 temp123;
    temp123= temp119 * temp121;
    temp118= temp123;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp124;
    float temp125;
    temp125= 0;
    float3 temp126;
    temp124= temp125;
    r0.rgb= temp118;
    r0.a= temp124;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 48: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 49: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 51: D0a= R0a
    float temp65;
    float temp66;
    temp66= saturate(r0.a);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 52: R0a= R0a*R0a
    float temp68;
    float temp69;
    temp69= saturate(r0.a);
    float3 temp70;
    float temp71;
    temp71= saturate(r0.a);
    float3 temp72;
    float temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    color0.a= temp65;
    r0.a= temp68;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp74;
    float temp75;
    float temp76;
    float temp77;
    temp77= saturate(r0.a);
    float3 temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    float temp81;
    temp81= temp77 * temp79;
    temp75= temp81;
    float temp82;
    temp82= 0.752941;
    float3 temp83;
    temp76= temp82;
    temp74= temp75 - temp76;
    temp74= 4 * temp74;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp84;
    float temp85;
    temp85= saturate(tex0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r1.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    color1.a= temp74;
    tex0.a= temp84;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp90;
    float3 temp91;
    temp91= saturate(r1.rgb);
    float3 temp92;
    float temp93;
    temp93= saturate(color1.a);
    float3 temp94;
    float3 temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    r1.rgb= temp90;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp96;
    float3 temp97;
    float3 temp98;
    float3 temp99;
    temp99= saturate(r0.rgb);
    float3 temp100;
    float3 temp101;
    temp101= saturate(tex0.rgb);
    float3 temp102;
    float3 temp103;
    temp103= temp99 * temp101;
    temp97= temp103;
    float3 temp104;
    temp104= saturate(r1.rgb);
    float3 temp105;
    float temp106;
    temp106= saturate(tex0.a);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp98= temp108;
    temp96= temp97 + temp98;
    temp96= 4 * temp96;
    r0.rgb= temp96;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp109;
    float3 temp110;
    temp110= saturate(r0.rgb);
    float3 temp111;
    float temp112;
    temp112= 1-saturate(color0.b);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp115;
    float temp116;
    temp116= 0;
    float3 temp117;
    temp115= temp116;
    r0.rgb= temp109;
    r0.a= temp115;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 57: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 58: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 59: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 60: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=3 term=3 term=1
    // line 62: R0= R0 - D0a*D0a
    float3 temp71;
    float3 temp72;
    float temp73;
    float3 temp74;
    temp74= saturate(r0.rgb);
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 63: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 64: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.a= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float temp109;
    temp109= saturate(color1.a);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    temp112= 4 * temp112;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 69: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 70: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 71: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 72: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 74: R0= 1 - D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    temp73= temp76;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 75: D0a= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    // exp.components=1 term=1
    // line 76: R0a= R0a*R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    float temp84;
    temp84= saturate(r0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp71;
    color0.a= temp78;
    r0.a= temp81;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp87;
    float temp88;
    float temp89;
    float temp90;
    temp90= saturate(r0.a);
    float3 temp91;
    float temp92;
    temp92= saturate(r0.a);
    float3 temp93;
    float temp94;
    temp94= temp90 * temp92;
    temp88= temp94;
    float temp95;
    temp95= 0.752941;
    float3 temp96;
    temp89= temp95;
    temp87= temp88 - temp89;
    temp87= 4 * temp87;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp97;
    float temp98;
    temp98= saturate(tex0.a);
    float3 temp99;
    float temp100;
    temp100= saturate(r1.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    color1.a= temp87;
    tex0.a= temp97;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp103;
    float3 temp104;
    temp104= saturate(r1.rgb);
    float3 temp105;
    float temp106;
    temp106= saturate(color1.a);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    r1.rgb= temp103;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp109;
    float3 temp110;
    float3 temp111;
    float3 temp112;
    temp112= saturate(r0.rgb);
    float3 temp113;
    float3 temp114;
    temp114= saturate(tex0.rgb);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp110= temp116;
    float3 temp117;
    temp117= saturate(r1.rgb);
    float3 temp118;
    float temp119;
    temp119= saturate(tex0.a);
    float3 temp120;
    float3 temp121;
    temp121= temp117 * temp119;
    temp111= temp121;
    temp109= temp110 + temp111;
    temp109= 4 * temp109;
    r0.rgb= temp109;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp122;
    float3 temp123;
    temp123= saturate(r0.rgb);
    float3 temp124;
    float temp125;
    temp125= 1-saturate(color0.b);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp122= temp127;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp128;
    float temp129;
    temp129= 0;
    float3 temp130;
    temp128= temp129;
    r0.rgb= temp122;
    r0.a= temp128;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $specular_type=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 27: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: R1= EXPAND(T2).EXPAND(T3)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex3.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 29: T3= EXPAND(T1).EXPAND(T3)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex3.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.rgb= temp0;
    r1.rgb= temp6;
    tex3.rgb= temp12;
    // exp.components=1 term=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(R1b) - 1/2*SIGNED(T3b))
    float temp18;
    float temp19;
    float temp20;
    float temp21;
    temp21= r0.b;
    float3 temp22;
    float temp23;
    temp23= r1.b;
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float temp26;
    temp26= 0.5;
    float3 temp27;
    float temp28;
    temp28= tex3.b;
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 - temp20;
    temp18= 2 * temp18;
    // exp.components=1 term=1
    // line 32: R1a= OUT_SCALE_BY_2(R0b)
    float temp31;
    float temp32;
    temp32= saturate(r0.b);
    float3 temp33;
    temp31= temp32;
    temp31= 2 * temp31;
    r0.a= temp18;
    r1.a= temp31;
    // exp.components=3 term=3 term=3
    // line 36: R1= R1*C0 + INVERT(R1)*C1
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= saturate(r1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= c1.rgb;
    float3 temp40;
    float3 temp41;
    temp41= temp37 * temp39;
    temp35= temp41;
    float3 temp42;
    temp42= 1-saturate(r1.rgb);
    float3 temp43;
    float3 temp44;
    temp44= c2.rgb;
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp36= temp46;
    temp34= temp35 + temp36;
    r1.rgb= temp34;
    // exp.components=3 term=3
    // line 81: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c3.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 82: R1= R1*C1
    float3 temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c4.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1
    // line 83: R0a= R0a*R0a
    float temp59;
    float temp60;
    temp60= saturate(r0.a);
    float3 temp61;
    float temp62;
    temp62= saturate(r0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 84: D0a= INVERT(R0b)*INVERT(R0b)
    float temp65;
    float temp66;
    temp66= 1-saturate(r0.b);
    float3 temp67;
    float temp68;
    temp68= 1-saturate(r0.b);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex0.rgb= temp47;
    r1.rgb= temp53;
    r0.a= temp59;
    color0.a= temp65;
    // exp.components=1 term=1 term=1
    // line 86: R0= 1 - D0a*D0a
    float temp71;
    float temp72;
    float temp73;
    float temp74;
    temp74= 1;
    float3 temp75;
    temp72= temp74;
    float temp76;
    temp76= saturate(color0.a);
    float3 temp77;
    float temp78;
    temp78= saturate(color0.a);
    float3 temp79;
    float temp80;
    temp80= temp76 * temp78;
    temp73= temp80;
    temp71= temp72 - temp73;
    // exp.components=1 term=1
    // line 87: D0a= R0a
    float temp81;
    float temp82;
    temp82= saturate(r0.a);
    float3 temp83;
    temp81= temp82;
    // exp.components=1 term=1
    // line 88: R0a= R0a*R0a
    float temp84;
    float temp85;
    temp85= saturate(r0.a);
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r0.rgb= temp71;
    color0.a= temp81;
    r0.a= temp84;
    // exp.components=1 term=1 term=1
    // line 107: D1a= OUT_SCALE_BY_4(R0a*R0a - C0a)
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= saturate(r0.a);
    float3 temp94;
    float temp95;
    temp95= saturate(r0.a);
    float3 temp96;
    float temp97;
    temp97= temp93 * temp95;
    temp91= temp97;
    float temp98;
    temp98= 0.752941;
    float3 temp99;
    temp92= temp98;
    temp90= temp91 - temp92;
    temp90= 4 * temp90;
    // exp.components=1 term=1
    // line 108: T0a= T0a*R1a
    float temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= saturate(r1.a);
    float3 temp104;
    float temp105;
    temp105= temp101 * temp103;
    temp100= temp105;
    color1.a= temp90;
    tex0.a= temp100;
    // exp.components=3 term=3
    // line 112: R1= R1*D1a
    float3 temp106;
    float3 temp107;
    temp107= saturate(r1.rgb);
    float3 temp108;
    float temp109;
    temp109= saturate(color1.a);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    r1.rgb= temp106;
    // exp.components=3 term=3 term=3
    // line 123: R0= OUT_SCALE_BY_4(R0*T0 + R1*T0a)
    float3 temp112;
    float3 temp113;
    float3 temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float3 temp117;
    temp117= saturate(tex0.rgb);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float3 temp120;
    temp120= saturate(r1.rgb);
    float3 temp121;
    float temp122;
    temp122= saturate(tex0.a);
    float3 temp123;
    float3 temp124;
    temp124= temp120 * temp122;
    temp114= temp124;
    temp112= temp113 + temp114;
    temp112= 4 * temp112;
    r0.rgb= temp112;
    // exp.components=3 term=3
    // line 127: SRCCOLOR= R0*INVERT(D0b)
    float3 temp125;
    float3 temp126;
    temp126= saturate(r0.rgb);
    float3 temp127;
    float temp128;
    temp128= 1-saturate(color0.b);
    float3 temp129;
    float3 temp130;
    temp130= temp126 * temp128;
    temp125= temp130;
    // exp.components=1 term=1
    // line 128: SRCALPHA= 0
    float temp131;
    float temp132;
    temp132= 0;
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp125;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
