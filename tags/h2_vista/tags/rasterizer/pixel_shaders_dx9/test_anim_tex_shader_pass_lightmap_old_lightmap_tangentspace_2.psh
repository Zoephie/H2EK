; compiled from tags\rasterizer\pixel_shaders_dx9\test_anim_tex_shader_pass_lightmap_old_lightmap_tangentspace_2.txt
;
#const C1.rgb= $lightmap_direct_color
#const C2.rgb= $lightmap_indirect_color
#const C4.rgb= $specular_color
#const C5.rgb= $specular_glancing_color
#const C6.rgb= $lightmap_ambient_color
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
    // exp.components=1 term=1
    // line 10: T3= EXPAND(T2).HALF_BIAS(D0)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= saturate(color0.rgb) - 0.5;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 11: T2= EXPAND(T1).EXPAND(T2)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex1.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(tex2.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    tex3.rgb= temp0;
    tex2.rgb= temp6;
    // exp.components=1 term=1
    // line 17: R0= EXPAND(T1).EXPAND_NEGATE(D0)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex1.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 1 - 2 * saturate(color0.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    // exp.components=1 term=1
    // line 18: R1= EXPAND(T1).EXPAND_NEGATE(D1)
    float temp18;
    float3 temp19;
    temp19= 2 * saturate(tex1.rgb) - 1;
    float3 temp20;
    float3 temp21;
    temp21= 1 - 2 * saturate(color1.rgb);
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    r0.rgb= temp12;
    r1.rgb= temp18;
    // exp.components=3 term=3
    // line 25: R0= R0*C0
    float3 temp24;
    float3 temp25;
    temp25= saturate(r0.rgb);
    float3 temp26;
    float3 temp27;
    temp27= c1.rgb;
    float3 temp28;
    float3 temp29;
    temp29= temp25 * temp27;
    temp24= temp29;
    // exp.components=3 term=3
    // line 26: R1= R1*C1
    float3 temp30;
    float3 temp31;
    temp31= saturate(r1.rgb);
    float3 temp32;
    float3 temp33;
    temp33= c2.rgb;
    float3 temp34;
    float3 temp35;
    temp35= temp31 * temp33;
    temp30= temp35;
    // exp.components=1 term=1 term=1
    // line 27: T3a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b)+SIGNED(T3b))
    float temp36;
    float temp37;
    float temp38;
    float temp39;
    temp39= r0.b;
    float3 temp40;
    float temp41;
    temp41= tex2.b;
    float3 temp42;
    float temp43;
    temp43= temp39 * temp41;
    temp37= temp43;
    float temp44;
    temp44= tex3.b;
    float3 temp45;
    temp38= temp44;
    temp36= temp37 + temp38;
    temp36= 2 * temp36;
    r0.rgb= temp24;
    r1.rgb= temp30;
    tex3.a= temp36;
    // exp.components=3 term=3 term=3
    // line 31: R0= R0+R1
    float3 temp46;
    float3 temp47;
    float3 temp48;
    float3 temp49;
    temp49= saturate(r0.rgb);
    float3 temp50;
    temp47= temp49;
    float3 temp51;
    temp51= saturate(r1.rgb);
    float3 temp52;
    temp48= temp51;
    temp46= temp47 + temp48;
    // exp.components=1 term=1
    // line 32: T3a= T3a*T3a
    float temp53;
    float temp54;
    temp54= saturate(tex3.a);
    float3 temp55;
    float temp56;
    temp56= saturate(tex3.a);
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    r0.rgb= temp46;
    tex3.a= temp53;
    // exp.components=1 term=1
    // line 37: T3= OUT_SCALE_BY_2(C1.R0)
    float temp59;
    float3 temp60;
    temp60= float3(0.752941,0.752941,0.752941);
    float3 temp61;
    float3 temp62;
    temp62= saturate(r0.rgb);
    float3 temp63;
    float temp64;
    temp64= dot(temp60, temp62);
    temp59= temp64;
    temp59= 2 * temp59;
    // exp.components=1 term=1
    // line 38: T3a= T3a*T3a
    float temp65;
    float temp66;
    temp66= saturate(tex3.a);
    float3 temp67;
    float temp68;
    temp68= saturate(tex3.a);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    tex3.rgb= temp59;
    tex3.a= temp65;
    // exp.components=1 term=1
    // line 44: T3a= T3a*T3a
    float temp71;
    float temp72;
    temp72= saturate(tex3.a);
    float3 temp73;
    float temp74;
    temp74= saturate(tex3.a);
    float3 temp75;
    float temp76;
    temp76= temp72 * temp74;
    temp71= temp76;
    // exp.components=3 term=3 term=3
    // line 45: T2= T2*C0+INVERT(T2)*C1
    float3 temp77;
    float3 temp78;
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex2.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c4.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp78= temp84;
    float3 temp85;
    temp85= 1-saturate(tex2.rgb);
    float3 temp86;
    float3 temp87;
    temp87= c5.rgb;
    float3 temp88;
    float3 temp89;
    temp89= temp85 * temp87;
    temp79= temp89;
    temp77= temp78 + temp79;
    tex3.a= temp71;
    tex2.rgb= temp77;
    // exp.components=3 term=3 term=3
    // line 50: R0= R0+C0
    float3 temp90;
    float3 temp91;
    float3 temp92;
    float3 temp93;
    temp93= saturate(r0.rgb);
    float3 temp94;
    temp91= temp93;
    float3 temp95;
    temp95= c6.rgb;
    float3 temp96;
    temp92= temp95;
    temp90= temp91 + temp92;
    // exp.components=1 term=1
    // line 51: T3a= OUT_SCALE_BY_2(T3a*T0a)
    float temp97;
    float temp98;
    temp98= saturate(tex3.a);
    float3 temp99;
    float temp100;
    temp100= saturate(tex0.a);
    float3 temp101;
    float temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    temp97= 2 * temp97;
    r0.rgb= temp90;
    tex3.a= temp97;
    // exp.components=3 term=3
    // line 56: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp103;
    float3 temp104;
    temp104= saturate(r0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= saturate(tex0.rgb);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    temp103= 2 * temp103;
    // exp.components=3 term=3
    // line 57: R1= T3a*T2
    float3 temp109;
    float temp110;
    temp110= saturate(tex3.a);
    float3 temp111;
    float3 temp112;
    temp112= saturate(tex2.rgb);
    float3 temp113;
    float3 temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    // exp.components=1 term=1
    // line 58: T0a= T0a*T3b
    float temp115;
    float temp116;
    temp116= saturate(tex0.a);
    float3 temp117;
    float temp118;
    temp118= saturate(tex3.b);
    float3 temp119;
    float temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    r0.rgb= temp103;
    r1.rgb= temp109;
    tex0.a= temp115;
    // exp.components=3 term=3 term=3
    // line 61: SRCCOLOR= R1*C0+R0
    float3 temp121;
    float3 temp122;
    float3 temp123;
    float3 temp124;
    temp124= saturate(r1.rgb);
    float3 temp125;
    float3 temp126;
    temp126= c1.rgb;
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float3 temp129;
    temp129= saturate(r0.rgb);
    float3 temp130;
    temp123= temp129;
    temp121= temp122 + temp123;
    // exp.components=1 term=1
    // line 62: SRCALPHA= T0a
    float temp131;
    float temp132;
    temp132= saturate(tex0.a);
    float3 temp133;
    temp131= temp132;
    r0.rgb= temp121;
    r0.a= temp131;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
