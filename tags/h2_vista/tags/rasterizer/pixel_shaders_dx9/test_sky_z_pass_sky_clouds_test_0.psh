; compiled from tags\rasterizer\pixel_shaders_dx9\test_sky_z_pass_sky_clouds_test_0.txt
;
#const C1.a= $base_value_scale
#const C2.a= $base_value_offset
#const C3.a= $detail_value_scale
#const C4.a= $detail_value_offset
#const C5.a= $secondary_detail_value_scale
#const C6.a= $secondary_detail_value_offset
#const C7.a= $framebuffer_fade
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=3 term=3 term=1
    // line 16: T0= T0*C0a+C1a
    float3 temp0;
    float3 temp1;
    float temp2;
    float3 temp3;
    temp3= saturate(tex0.rgb);
    float3 temp4;
    float temp5;
    temp5= c1.a;
    float3 temp6;
    float3 temp7;
    temp7= temp3 * temp5;
    temp1= temp7;
    float temp8;
    temp8= c2.a;
    float3 temp9;
    temp2= temp8;
    temp0= temp1 + temp2;
    tex0.rgb= temp0;
    // exp.components=3 term=3 term=1
    // line 20: T1= T1*C0a+C1a
    float3 temp10;
    float3 temp11;
    float temp12;
    float3 temp13;
    temp13= saturate(tex1.rgb);
    float3 temp14;
    float temp15;
    temp15= c3.a;
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp11= temp17;
    float temp18;
    temp18= c4.a;
    float3 temp19;
    temp12= temp18;
    temp10= temp11 + temp12;
    tex1.rgb= temp10;
    // exp.components=3 term=3 term=1
    // line 24: T2= T2*C0a+C1a
    float3 temp20;
    float3 temp21;
    float temp22;
    float3 temp23;
    temp23= saturate(tex2.rgb);
    float3 temp24;
    float temp25;
    temp25= c5.a;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp21= temp27;
    float temp28;
    temp28= c6.a;
    float3 temp29;
    temp22= temp28;
    temp20= temp21 + temp22;
    tex2.rgb= temp20;
    // exp.components=3 term=3
    // line 27: R0= T0*T1
    float3 temp30;
    float3 temp31;
    temp31= saturate(tex0.rgb);
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex1.rgb);
    float3 temp34;
    float3 temp35;
    temp35= temp31 * temp33;
    temp30= temp35;
    // exp.components=1 term=1
    // line 28: R0a= T0a*T1a
    float temp36;
    float temp37;
    temp37= saturate(tex0.a);
    float3 temp38;
    float temp39;
    temp39= saturate(tex1.a);
    float3 temp40;
    float temp41;
    temp41= temp37 * temp39;
    temp36= temp41;
    // exp.components=1 term=1
    // line 29: R1a= C0a
    float temp42;
    float temp43;
    temp43= c7.a;
    float3 temp44;
    temp42= temp43;
    r0.rgb= temp30;
    r0.a= temp36;
    r1.a= temp42;
    // exp.components=3 term=3
    // line 31: R0= R0*T2
    float3 temp45;
    float3 temp46;
    temp46= saturate(r0.rgb);
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex2.rgb);
    float3 temp49;
    float3 temp50;
    temp50= temp46 * temp48;
    temp45= temp50;
    // exp.components=1 term=1
    // line 32: R0a= R0a*T2a
    float temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float temp54;
    temp54= saturate(tex2.a);
    float3 temp55;
    float temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    r0.rgb= temp45;
    r0.a= temp51;
    // exp.components=1 term=1
    // line 34: R0a= R0a*R1a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    float temp60;
    temp60= saturate(r1.a);
    float3 temp61;
    float temp62;
    temp62= temp58 * temp60;
    temp57= temp62;
    r0.a= temp57;
    // exp.components=3 term=3
    // line 36: SRCCOLOR= R0
    float3 temp63;
    float3 temp64;
    temp64= saturate(r0.rgb);
    float3 temp65;
    temp63= temp64;
    // exp.components=1 term=1
    // line 37: SRCALPHA= R0a
    float temp66;
    float temp67;
    temp67= saturate(r0.a);
    float3 temp68;
    temp66= temp67;
    r0.rgb= temp63;
    r0.a= temp66;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
