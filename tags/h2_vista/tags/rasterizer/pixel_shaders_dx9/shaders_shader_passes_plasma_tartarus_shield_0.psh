; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_plasma_tartarus_shield_0.txt
;
#const C2.rgb= $color_wide
#const C3.rgb= $color_sharp
#const C4.rgb= $center_line
sampler3D s0 : register(S0);
sampler3D s1 : register(S1);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 1 dot 0 input-stage 0
    float4 tex0= tex3Dproj(s0, tc0);
// texture stage 1 mode 1 dot 0 input-stage 0
    float4 tex1= tex3Dproj(s1, tc1);
    // exp.components=1 term=1 term=1
    // line 10: R0a= T0a - T1a
    float temp0;
    float temp1;
    float temp2;
    float temp3;
    temp3= saturate(tex0.a);
    float3 temp4;
    temp1= temp3;
    float temp5;
    temp5= saturate(tex1.a);
    float3 temp6;
    temp2= temp5;
    temp0= temp1 - temp2;
    // exp.components=1 term=1 term=1
    // line 11: R0= T1a - T0a
    float temp7;
    float temp8;
    float temp9;
    float temp10;
    temp10= saturate(tex1.a);
    float3 temp11;
    temp8= temp10;
    float temp12;
    temp12= saturate(tex0.a);
    float3 temp13;
    temp9= temp12;
    temp7= temp8 - temp9;
    r0.a= temp0;
    r0.rgb= temp7;
    // exp.components=3 term=3 term=1
    // line 14: R0= SIGNED(R0) + C0a
    float3 temp14;
    float3 temp15;
    float temp16;
    float3 temp17;
    temp17= r0.rgb;
    float3 temp18;
    temp15= temp17;
    float temp19;
    temp19= 0.501961;
    float3 temp20;
    temp16= temp19;
    temp14= temp15 + temp16;
    // exp.components=1 term=1 term=1
    // line 15: R0a= SIGNED(R0a) + C0a
    float temp21;
    float temp22;
    float temp23;
    float temp24;
    temp24= r0.a;
    float3 temp25;
    temp22= temp24;
    float temp26;
    temp26= 0.501961;
    float3 temp27;
    temp23= temp26;
    temp21= temp22 + temp23;
    r0.rgb= temp14;
    r0.a= temp21;
    // exp.components=1 term=1 term=1
    // line 17: R0a= OUT_SCALE_BY_4(R0a*R0a mux R0b*R0b)
    float temp28;
    float temp29;
    float temp30;
    float temp31;
    temp31= saturate(r0.a);
    float3 temp32;
    float temp33;
    temp33= saturate(r0.a);
    float3 temp34;
    float temp35;
    temp35= temp31 * temp33;
    temp29= temp35;
    float temp36;
    temp36= saturate(r0.b);
    float3 temp37;
    float temp38;
    temp38= saturate(r0.b);
    float3 temp39;
    float temp40;
    temp40= temp36 * temp38;
    temp30= temp40;
    temp28= lerp(temp29,temp30,round(r0.a));
    temp28= 4 * temp28;
    r0.a= temp28;
    // exp.components=1 term=1 term=1
    // line 19: R1a= 0 mux EXPAND(R0a)*EXPAND(R0a)
    float temp41;
    float temp42;
    float temp43;
    float temp44;
    temp44= 0;
    float3 temp45;
    temp42= temp44;
    float temp46;
    temp46= 2 * saturate(r0.a) - 1;
    float3 temp47;
    float temp48;
    temp48= 2 * saturate(r0.a) - 1;
    float3 temp49;
    float temp50;
    temp50= temp46 * temp48;
    temp43= temp50;
    temp41= lerp(temp42,temp43,round(r0.a));
    r1.a= temp41;
    // exp.components=3 term=3
    // line 23: R0= R0a*C0
    float3 temp51;
    float temp52;
    temp52= saturate(r0.a);
    float3 temp53;
    float3 temp54;
    temp54= c2.rgb;
    float3 temp55;
    float3 temp56;
    temp56= temp52 * temp54;
    temp51= temp56;
    // exp.components=3 term=3
    // line 24: R1= R1a*C1
    float3 temp57;
    float temp58;
    temp58= saturate(r1.a);
    float3 temp59;
    float3 temp60;
    temp60= c3.rgb;
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp57= temp62;
    // exp.components=1 term=1
    // line 25: R1a= R1a*R1a
    float temp63;
    float temp64;
    temp64= saturate(r1.a);
    float3 temp65;
    float temp66;
    temp66= saturate(r1.a);
    float3 temp67;
    float temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    r0.rgb= temp51;
    r1.rgb= temp57;
    r1.a= temp63;
    // exp.components=3 term=3 term=3
    // line 27: R0= R0*D0+R1*D0
    float3 temp69;
    float3 temp70;
    float3 temp71;
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= saturate(color0.rgb);
    float3 temp75;
    float3 temp76;
    temp76= temp72 * temp74;
    temp70= temp76;
    float3 temp77;
    temp77= saturate(r1.rgb);
    float3 temp78;
    float3 temp79;
    temp79= saturate(color0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= temp77 * temp79;
    temp71= temp81;
    temp69= temp70 + temp71;
    r0.rgb= temp69;
    // exp.components=3 term=3
    // line 30: R1= R1a*C0
    float3 temp82;
    float temp83;
    temp83= saturate(r1.a);
    float3 temp84;
    float3 temp85;
    temp85= c4.rgb;
    float3 temp86;
    float3 temp87;
    temp87= temp83 * temp85;
    temp82= temp87;
    r1.rgb= temp82;
    // exp.components=3 term=3
    // line 32: E= R1
    float3 temp88;
    temp88= saturate(r1.rgb);
    float3 temp89;
    e= temp88;
    // exp.components=3 term=3
    // line 33: F= D0
    float3 temp90;
    temp90= saturate(color0.rgb);
    float3 temp91;
    f= temp90;
    // exp.components=3 term=3 term=3
    // line 34: SRCCOLOR= EF+R0
    float3 temp92;
    float3 temp93;
    float3 temp94;
    float3 temp95;
    float3 temp96;
    temp96= e.rgb*f.rgb;
    temp95= temp96;
    temp93= temp95;
    float3 temp97;
    temp97= saturate(r0.rgb);
    float3 temp98;
    temp94= temp97;
    temp92= temp93 + temp94;
    // exp.components=1 term=1
    // line 35: SRCALPHA= 1
    float temp99;
    float temp100;
    temp100= 1;
    float3 temp101;
    temp99= temp100;
    r0.rgb= temp92;
    r0.a= temp99;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
