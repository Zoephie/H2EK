; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_texture_mapping_default_texture_zwrite_scale_offset_0.txt
;
#const C1.a= $value_scale
#const C2.a= $value_offset
#const C3.rgb= $diffuse_color
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
    // exp.components=3 term=3 term=1
    // line 13: R0= T0*C0a+C1a
    float3 temp0;
    float3 temp1;
    float temp2;
    float3 temp3;
    temp3= saturate(tex0.rgb);
    float3 temp4;
    float temp5;
    temp5= c1.a;
    float3 temp6;
    float3 temp7;
    temp7= temp3 * temp5;
    temp1= temp7;
    float temp8;
    temp8= c2.a;
    float3 temp9;
    temp2= temp8;
    temp0= temp1 + temp2;
    r0.rgb= temp0;
    // exp.components=3 term=3
    // line 15: R0= OUT_SCALE_BY_2(R0*T1)
    float3 temp10;
    float3 temp11;
    temp11= saturate(r0.rgb);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex1.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp10= temp15;
    temp10= 2 * temp10;
    // exp.components=1 term=1
    // line 16: R0a= T0a*T1a
    float temp16;
    float temp17;
    temp17= saturate(tex0.a);
    float3 temp18;
    float temp19;
    temp19= saturate(tex1.a);
    float3 temp20;
    float temp21;
    temp21= temp17 * temp19;
    temp16= temp21;
    r0.rgb= temp10;
    r0.a= temp16;
    // exp.components=3 term=3
    // line 19: SRCCOLOR= R0*C0
    float3 temp22;
    float3 temp23;
    temp23= saturate(r0.rgb);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp22= temp27;
    // exp.components=1 term=1
    // line 20: SRCALPHA= R0a
    float temp28;
    float temp29;
    temp29= saturate(r0.a);
    float3 temp30;
    temp28= temp29;
    r0.rgb= temp22;
    r0.a= temp28;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
