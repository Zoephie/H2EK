; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_texture_mapping_detail_mask_texture_zwrite_0.txt
;
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
    // exp.components=1 term=1
    // line 12: R0a= T2b
    float temp0;
    float temp1;
    temp1= saturate(tex2.b);
    float3 temp2;
    temp0= temp1;
    r0.a= temp0;
    // exp.components=3 term=1 term=3
    // line 14: R0= 1/2*R0a + INVERT(R0a)*T1
    float3 temp3;
    float temp4;
    float3 temp5;
    float temp6;
    temp6= 0.5;
    float3 temp7;
    float temp8;
    temp8= saturate(r0.a);
    float3 temp9;
    float temp10;
    temp10= temp6 * temp8;
    temp4= temp10;
    float temp11;
    temp11= 1-saturate(r0.a);
    float3 temp12;
    float3 temp13;
    temp13= saturate(tex1.rgb);
    float3 temp14;
    float3 temp15;
    temp15= temp11 * temp13;
    temp5= temp15;
    temp3= temp4 + temp5;
    r0.rgb= temp3;
    // exp.components=3 term=3
    // line 16: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp16;
    float3 temp17;
    temp17= saturate(r0.rgb);
    float3 temp18;
    float3 temp19;
    temp19= saturate(tex0.rgb);
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp16= temp21;
    temp16= 2 * temp16;
    r0.rgb= temp16;
    // exp.components=3 term=3
    // line 18: SRCCOLOR= R0
    float3 temp22;
    float3 temp23;
    temp23= saturate(r0.rgb);
    float3 temp24;
    temp22= temp23;
    // exp.components=1 term=1
    // line 19: SRCALPHA= T0a
    float temp25;
    float temp26;
    temp26= saturate(tex0.a);
    float3 temp27;
    temp25= temp26;
    r0.rgb= temp22;
    r0.a= temp25;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
