; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_environment_mapping_default_environment_map_tangent_space_fast_masked_0.txt
;
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
samplerCUBE s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 2 dot 0 input-stage 0
    float4 tex2= texCUBE(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 14: R0= EXPAND(T2).EXPAND(T0)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex0.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=3 term=3
    // line 15: R1= T3*T3
    float3 temp6;
    float3 temp7;
    temp7= saturate(tex3.rgb);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float3 temp11;
    temp11= temp7 * temp9;
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=3 term=3 term=3
    // line 17: R0= INVERT(R0)*D1 + R0*D0
    float3 temp12;
    float3 temp13;
    float3 temp14;
    float3 temp15;
    temp15= 1-saturate(r0.rgb);
    float3 temp16;
    float3 temp17;
    temp17= saturate(color1.rgb);
    float3 temp18;
    float3 temp19;
    temp19= temp15 * temp17;
    temp13= temp19;
    float3 temp20;
    temp20= saturate(r0.rgb);
    float3 temp21;
    float3 temp22;
    temp22= saturate(color0.rgb);
    float3 temp23;
    float3 temp24;
    temp24= temp20 * temp22;
    temp14= temp24;
    temp12= temp13 + temp14;
    // exp.components=1 term=1 term=1
    // line 18: R0a= INVERT(R0b)*D1a + R0b*D0a
    float temp25;
    float temp26;
    float temp27;
    float temp28;
    temp28= 1-saturate(r0.b);
    float3 temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= temp28 * temp30;
    temp26= temp32;
    float temp33;
    temp33= saturate(r0.b);
    float3 temp34;
    float temp35;
    temp35= saturate(color0.a);
    float3 temp36;
    float temp37;
    temp37= temp33 * temp35;
    temp27= temp37;
    temp25= temp26 + temp27;
    r0.rgb= temp12;
    r0.a= temp25;
    // exp.components=3 term=3
    // line 20: R1= R1*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r1.rgb= temp38;
    // exp.components=3 term=3 term=3
    // line 22: T3= T3*T1 + R1*INVERT(T1)
    float3 temp44;
    float3 temp45;
    float3 temp46;
    float3 temp47;
    temp47= saturate(tex3.rgb);
    float3 temp48;
    float3 temp49;
    temp49= saturate(tex1.rgb);
    float3 temp50;
    float3 temp51;
    temp51= temp47 * temp49;
    temp45= temp51;
    float3 temp52;
    temp52= saturate(r1.rgb);
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(tex1.rgb);
    float3 temp55;
    float3 temp56;
    temp56= temp52 * temp54;
    temp46= temp56;
    temp44= temp45 + temp46;
    // exp.components=1 term=1
    // line 23: R0a= R0a*T1a
    float temp57;
    float temp58;
    temp58= saturate(r0.a);
    float3 temp59;
    float temp60;
    temp60= saturate(tex1.a);
    float3 temp61;
    float temp62;
    temp62= temp58 * temp60;
    temp57= temp62;
    tex3.rgb= temp44;
    r0.a= temp57;
    // exp.components=3 term=3
    // line 25: E= T3
    float3 temp63;
    temp63= saturate(tex3.rgb);
    float3 temp64;
    e= temp63;
    // exp.components=1 term=1
    // line 26: F= R0a
    float temp65;
    temp65= saturate(r0.a);
    float3 temp66;
    f= temp65;
    // exp.components=3 term=3
    // line 27: SRCCOLOR= R0*EF
    float3 temp67;
    float3 temp68;
    temp68= saturate(r0.rgb);
    float3 temp69;
    float3 temp70;
    float3 temp71;
    temp71= e.rgb*f.rgb;
    temp70= temp71;
    float3 temp72;
    temp72= temp68 * temp70;
    temp67= temp72;
    r0.rgb= temp67;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
