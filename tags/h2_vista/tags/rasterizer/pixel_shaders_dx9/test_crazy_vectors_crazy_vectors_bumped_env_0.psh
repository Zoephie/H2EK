; compiled from tags\rasterizer\pixel_shaders_dx9\test_crazy_vectors_crazy_vectors_bumped_env_0.txt
;
#const C1.rgb= $bumped_env_color
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 10 dot 1 input-stage 0
    float4 tex1;
// texture stage 2 mode 10 dot 1 input-stage 0
    float4 tex2;
// texture stage 3 mode 16 dot 1 input-stage 0
    tex0.xy -= float2(0.5f, 0.5f);
    tex0.xy *= 2.0f;
    float3 tc_normal;
    tc_normal.r= dot(tc1.rgb, tex0.rgb);
    tc_normal.g= dot(tc2.rgb, tex0.rgb);
    tc_normal.b= dot(tc3.rgb, tex0.rgb);
    float3 tc_eye;
    tc_eye.r= tc1.a;
    tc_eye.g= tc2.a;
    tc_eye.b= tc3.a;
    float3 tc_eye_reflected;
    tc_eye_reflected= 2 * (dot(tc_eye, tc_normal) / dot(tc_normal, tc_normal)) * tc_normal - tc_eye;
    float4 tex3= texCUBE(s3, tc_eye_reflected);
    // exp.components=3 term=3
    // line 12: R0= T3
    float3 temp0;
    float3 temp1;
    temp1= saturate(tex3.rgb);
    float3 temp2;
    temp0= temp1;
    r0.rgb= temp0;
    // exp.components=3 term=3
    // line 15: SRCCOLOR= R0*C0
    float3 temp3;
    float3 temp4;
    temp4= saturate(r0.rgb);
    float3 temp5;
    float3 temp6;
    temp6= c1.rgb;
    float3 temp7;
    float3 temp8;
    temp8= temp4 * temp6;
    temp3= temp8;
    // exp.components=1 term=1
    // line 16: SRCALPHA= 0
    float temp9;
    float temp10;
    temp10= 0;
    float3 temp11;
    temp9= temp10;
    r0.rgb= temp3;
    r0.a= temp9;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
