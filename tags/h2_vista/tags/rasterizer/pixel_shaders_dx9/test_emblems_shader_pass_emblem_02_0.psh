; compiled from tags\rasterizer\pixel_shaders_dx9\test_emblems_shader_pass_emblem_02_0.txt
;
#const C3.rgb= $background_color_a
#const C4.rgb= $background_color_b
#const C5.rgb= $foreground_color_a
#const C6.rgb= $foreground_color_b
#const C7.a= $toggle_a
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
    // exp.components=1 term=1
    // line 14: R0= C0.T0
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex0.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 15: R1= C1.T0
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex0.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 16: R0a= T0b
    float temp12;
    float temp13;
    temp13= saturate(tex0.b);
    float3 temp14;
    temp12= temp13;
    r0.rgb= temp0;
    r1.rgb= temp6;
    r0.a= temp12;
    // exp.components=3 term=3
    // line 20: R0= R0*C0
    float3 temp15;
    float3 temp16;
    temp16= saturate(r0.rgb);
    float3 temp17;
    float3 temp18;
    temp18= c3.rgb;
    float3 temp19;
    float3 temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    // exp.components=3 term=3
    // line 21: R1= R0a*C1
    float3 temp21;
    float temp22;
    temp22= saturate(r0.a);
    float3 temp23;
    float3 temp24;
    temp24= c4.rgb;
    float3 temp25;
    float3 temp26;
    temp26= temp22 * temp24;
    temp21= temp26;
    // exp.components=1 term=1
    // line 22: R1a= R1b
    float temp27;
    float temp28;
    temp28= saturate(r1.b);
    float3 temp29;
    temp27= temp28;
    r0.rgb= temp15;
    r1.rgb= temp21;
    r1.a= temp27;
    // exp.components=3 term=3 term=3
    // line 24: T0= R0+R1
    float3 temp30;
    float3 temp31;
    float3 temp32;
    float3 temp33;
    temp33= saturate(r0.rgb);
    float3 temp34;
    temp31= temp33;
    float3 temp35;
    temp35= saturate(r1.rgb);
    float3 temp36;
    temp32= temp35;
    temp30= temp31 + temp32;
    // exp.components=1 term=1 term=1
    // line 25: T0a= T0a+R1a
    float temp37;
    float temp38;
    float temp39;
    float temp40;
    temp40= saturate(tex0.a);
    float3 temp41;
    temp38= temp40;
    float temp42;
    temp42= saturate(r1.a);
    float3 temp43;
    temp39= temp42;
    temp37= temp38 + temp39;
    tex0.rgb= temp30;
    tex0.a= temp37;
    // exp.components=1 term=1
    // line 29: R0= C0.T1
    float temp44;
    float3 temp45;
    temp45= float3(1.000000,0.000000,0.000000);
    float3 temp46;
    float3 temp47;
    temp47= saturate(tex1.rgb);
    float3 temp48;
    float temp49;
    temp49= dot(temp45, temp47);
    temp44= temp49;
    // exp.components=1 term=1
    // line 30: R1= C1.T1
    float temp50;
    float3 temp51;
    temp51= float3(0.000000,1.000000,0.000000);
    float3 temp52;
    float3 temp53;
    temp53= saturate(tex1.rgb);
    float3 temp54;
    float temp55;
    temp55= dot(temp51, temp53);
    temp50= temp55;
    // exp.components=1 term=1
    // line 31: R1a= T1b
    float temp56;
    float temp57;
    temp57= saturate(tex1.b);
    float3 temp58;
    temp56= temp57;
    r0.rgb= temp44;
    r1.rgb= temp50;
    r1.a= temp56;
    // exp.components=3 term=3
    // line 35: R0= R0*C0
    float3 temp59;
    float3 temp60;
    temp60= saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= c5.rgb;
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=3 term=3
    // line 36: R1= R1a*C1
    float3 temp65;
    float temp66;
    temp66= saturate(r1.a);
    float3 temp67;
    float3 temp68;
    temp68= c6.rgb;
    float3 temp69;
    float3 temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    // exp.components=1 term=1
    // line 37: R1a= R1b
    float temp71;
    float temp72;
    temp72= saturate(r1.b);
    float3 temp73;
    temp71= temp72;
    r0.rgb= temp59;
    r1.rgb= temp65;
    r1.a= temp71;
    // exp.components=3 term=3
    // line 40: T1= C0a*R0
    float3 temp74;
    float temp75;
    temp75= c7.a;
    float3 temp76;
    float3 temp77;
    temp77= saturate(r0.rgb);
    float3 temp78;
    float3 temp79;
    temp79= temp75 * temp77;
    temp74= temp79;
    // exp.components=1 term=1
    // line 41: R1a= C0a*R1a
    float temp80;
    float temp81;
    temp81= c7.a;
    float3 temp82;
    float temp83;
    temp83= saturate(r1.a);
    float3 temp84;
    float temp85;
    temp85= temp81 * temp83;
    temp80= temp85;
    tex1.rgb= temp74;
    r1.a= temp80;
    // exp.components=3 term=3 term=3
    // line 43: T1= INVERT(R1a)*R1+T1
    float3 temp86;
    float3 temp87;
    float3 temp88;
    float temp89;
    temp89= 1-saturate(r1.a);
    float3 temp90;
    float3 temp91;
    temp91= saturate(r1.rgb);
    float3 temp92;
    float3 temp93;
    temp93= temp89 * temp91;
    temp87= temp93;
    float3 temp94;
    temp94= saturate(tex1.rgb);
    float3 temp95;
    temp88= temp94;
    temp86= temp87 + temp88;
    // exp.components=1 term=1 term=1
    // line 44: T1a= INVERT(R1a)*T1a+R1a
    float temp96;
    float temp97;
    float temp98;
    float temp99;
    temp99= 1-saturate(r1.a);
    float3 temp100;
    float temp101;
    temp101= saturate(tex1.a);
    float3 temp102;
    float temp103;
    temp103= temp99 * temp101;
    temp97= temp103;
    float temp104;
    temp104= saturate(r1.a);
    float3 temp105;
    temp98= temp104;
    temp96= temp97 + temp98;
    tex1.rgb= temp86;
    tex1.a= temp96;
    // exp.components=3 term=3
    // line 46: T0= INVERT(T1a)*T0
    float3 temp106;
    float temp107;
    temp107= 1-saturate(tex1.a);
    float3 temp108;
    float3 temp109;
    temp109= saturate(tex0.rgb);
    float3 temp110;
    float3 temp111;
    temp111= temp107 * temp109;
    temp106= temp111;
    // exp.components=1 term=1 term=1
    // line 47: T0a= INVERT(T1a)*T0a+T1a
    float temp112;
    float temp113;
    float temp114;
    float temp115;
    temp115= 1-saturate(tex1.a);
    float3 temp116;
    float temp117;
    temp117= saturate(tex0.a);
    float3 temp118;
    float temp119;
    temp119= temp115 * temp117;
    temp113= temp119;
    float temp120;
    temp120= saturate(tex1.a);
    float3 temp121;
    temp114= temp120;
    temp112= temp113 + temp114;
    tex0.rgb= temp106;
    tex0.a= temp112;
    // exp.components=3 term=3 term=3
    // line 49: SRCCOLOR= T0+T1
    float3 temp122;
    float3 temp123;
    float3 temp124;
    float3 temp125;
    temp125= saturate(tex0.rgb);
    float3 temp126;
    temp123= temp125;
    float3 temp127;
    temp127= saturate(tex1.rgb);
    float3 temp128;
    temp124= temp127;
    temp122= temp123 + temp124;
    // exp.components=1 term=1
    // line 50: SRCALPHA= T0a
    float temp129;
    float temp130;
    temp130= saturate(tex0.a);
    float3 temp131;
    temp129= temp130;
    r0.rgb= temp122;
    r0.a= temp129;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
