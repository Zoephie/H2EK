; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_light_response_default_light_combined_tex_two_change_color_2.txt
;
#const C3.rgb= $change_color_primary
#const C4.rgb= $change_color_secondary
#const C5.rgb= $light_diffuse_color
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 54: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 81: R0= R0*T0
    float3 temp53;
    float3 temp54;
    temp54= saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= saturate(tex0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    r0.rgb= temp53;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp59;
    temp59= saturate(r0.rgb);
    float3 temp60;
    e= temp59;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp61;
    temp61= 1;
    float3 temp62;
    f= temp61;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp63;
    float3 temp64;
    float3 temp65;
    temp65= e.rgb*f.rgb;
    temp64= temp65;
    float temp66;
    temp66= 1-saturate(color0.b);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp69;
    float temp70;
    temp70= 0;
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp63;
    r0.a= temp69;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 58: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 59: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=3 term=3
    // line 61: R0= R0 - D1*D1
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(r0.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float3 temp66;
    temp66= saturate(color1.rgb);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 81: R0= R0*T0
    float3 temp69;
    float3 temp70;
    temp70= saturate(r0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(tex0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    r0.rgb= temp69;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp75;
    temp75= saturate(r0.rgb);
    float3 temp76;
    e= temp75;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp77;
    temp77= 1;
    float3 temp78;
    f= temp77;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp79;
    float3 temp80;
    float3 temp81;
    temp81= e.rgb*f.rgb;
    temp80= temp81;
    float temp82;
    temp82= 1-saturate(color0.b);
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp85;
    float temp86;
    temp86= 0;
    float3 temp87;
    temp85= temp86;
    r0.rgb= temp79;
    r0.a= temp85;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 65: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 66: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=1 term=3
    // line 68: R0= 1 - D1
    float3 temp59;
    float temp60;
    float3 temp61;
    float temp62;
    temp62= 1;
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    temp61= temp64;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 81: R0= R0*T0
    float3 temp66;
    float3 temp67;
    temp67= saturate(r0.rgb);
    float3 temp68;
    float3 temp69;
    temp69= saturate(tex0.rgb);
    float3 temp70;
    float3 temp71;
    temp71= temp67 * temp69;
    temp66= temp71;
    r0.rgb= temp66;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    e= temp72;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp74;
    temp74= 1;
    float3 temp75;
    f= temp74;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp76;
    float3 temp77;
    float3 temp78;
    temp78= e.rgb*f.rgb;
    temp77= temp78;
    float temp79;
    temp79= 1-saturate(color0.b);
    float3 temp80;
    float3 temp81;
    temp81= temp77 * temp79;
    temp76= temp81;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp82;
    float temp83;
    temp83= 0;
    float3 temp84;
    temp82= temp83;
    r0.rgb= temp76;
    r0.a= temp82;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 72: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 73: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=1 term=3
    // line 75: R0= 1 - D1*D1
    float3 temp59;
    float temp60;
    float3 temp61;
    float temp62;
    temp62= 1;
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float3 temp66;
    temp66= saturate(color1.rgb);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 81: R0= R0*T0
    float3 temp69;
    float3 temp70;
    temp70= saturate(r0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(tex0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    r0.rgb= temp69;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp75;
    temp75= saturate(r0.rgb);
    float3 temp76;
    e= temp75;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp77;
    temp77= 1;
    float3 temp78;
    f= temp77;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp79;
    float3 temp80;
    float3 temp81;
    temp81= e.rgb*f.rgb;
    temp80= temp81;
    float temp82;
    temp82= 1-saturate(color0.b);
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp85;
    float temp86;
    temp86= 0;
    float3 temp87;
    temp85= temp86;
    r0.rgb= temp79;
    r0.a= temp85;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 54: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 84: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp53;
    float3 temp54;
    temp54= saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= saturate(tex0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    temp53= 2 * temp53;
    r0.rgb= temp53;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp59;
    temp59= saturate(r0.rgb);
    float3 temp60;
    e= temp59;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp61;
    temp61= 1;
    float3 temp62;
    f= temp61;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp63;
    float3 temp64;
    float3 temp65;
    temp65= e.rgb*f.rgb;
    temp64= temp65;
    float temp66;
    temp66= 1-saturate(color0.b);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp69;
    float temp70;
    temp70= 0;
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp63;
    r0.a= temp69;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 58: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 59: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=3 term=3
    // line 61: R0= R0 - D1*D1
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(r0.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float3 temp66;
    temp66= saturate(color1.rgb);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 84: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp69;
    float3 temp70;
    temp70= saturate(r0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(tex0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    temp69= 2 * temp69;
    r0.rgb= temp69;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp75;
    temp75= saturate(r0.rgb);
    float3 temp76;
    e= temp75;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp77;
    temp77= 1;
    float3 temp78;
    f= temp77;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp79;
    float3 temp80;
    float3 temp81;
    temp81= e.rgb*f.rgb;
    temp80= temp81;
    float temp82;
    temp82= 1-saturate(color0.b);
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp85;
    float temp86;
    temp86= 0;
    float3 temp87;
    temp85= temp86;
    r0.rgb= temp79;
    r0.a= temp85;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 65: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 66: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=1 term=3
    // line 68: R0= 1 - D1
    float3 temp59;
    float temp60;
    float3 temp61;
    float temp62;
    temp62= 1;
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    temp61= temp64;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 84: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp66;
    float3 temp67;
    temp67= saturate(r0.rgb);
    float3 temp68;
    float3 temp69;
    temp69= saturate(tex0.rgb);
    float3 temp70;
    float3 temp71;
    temp71= temp67 * temp69;
    temp66= temp71;
    temp66= 2 * temp66;
    r0.rgb= temp66;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    e= temp72;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp74;
    temp74= 1;
    float3 temp75;
    f= temp74;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp76;
    float3 temp77;
    float3 temp78;
    temp78= e.rgb*f.rgb;
    temp77= temp78;
    float temp79;
    temp79= 1-saturate(color0.b);
    float3 temp80;
    float3 temp81;
    temp81= temp77 * temp79;
    temp76= temp81;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp82;
    float temp83;
    temp83= 0;
    float3 temp84;
    temp82= temp83;
    r0.rgb= temp76;
    r0.a= temp82;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 72: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 73: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=1 term=3
    // line 75: R0= 1 - D1*D1
    float3 temp59;
    float temp60;
    float3 temp61;
    float temp62;
    temp62= 1;
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float3 temp66;
    temp66= saturate(color1.rgb);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 84: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp69;
    float3 temp70;
    temp70= saturate(r0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(tex0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    temp69= 2 * temp69;
    r0.rgb= temp69;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp75;
    temp75= saturate(r0.rgb);
    float3 temp76;
    e= temp75;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp77;
    temp77= 1;
    float3 temp78;
    f= temp77;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp79;
    float3 temp80;
    float3 temp81;
    temp81= e.rgb*f.rgb;
    temp80= temp81;
    float temp82;
    temp82= 1-saturate(color0.b);
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp85;
    float temp86;
    temp86= 0;
    float3 temp87;
    temp85= temp86;
    r0.rgb= temp79;
    r0.a= temp85;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 54: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 87: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp53;
    float3 temp54;
    temp54= saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= saturate(tex0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    temp53= 4 * temp53;
    r0.rgb= temp53;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp59;
    temp59= saturate(r0.rgb);
    float3 temp60;
    e= temp59;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp61;
    temp61= 1;
    float3 temp62;
    f= temp61;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp63;
    float3 temp64;
    float3 temp65;
    temp65= e.rgb*f.rgb;
    temp64= temp65;
    float temp66;
    temp66= 1-saturate(color0.b);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp63= temp68;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp69;
    float temp70;
    temp70= 0;
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp63;
    r0.a= temp69;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 58: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 59: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=3 term=3
    // line 61: R0= R0 - D1*D1
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(r0.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float3 temp66;
    temp66= saturate(color1.rgb);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 87: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp69;
    float3 temp70;
    temp70= saturate(r0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(tex0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    temp69= 4 * temp69;
    r0.rgb= temp69;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp75;
    temp75= saturate(r0.rgb);
    float3 temp76;
    e= temp75;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp77;
    temp77= 1;
    float3 temp78;
    f= temp77;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp79;
    float3 temp80;
    float3 temp81;
    temp81= e.rgb*f.rgb;
    temp80= temp81;
    float temp82;
    temp82= 1-saturate(color0.b);
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp85;
    float temp86;
    temp86= 0;
    float3 temp87;
    temp85= temp86;
    r0.rgb= temp79;
    r0.a= temp85;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 65: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 66: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=1 term=3
    // line 68: R0= 1 - D1
    float3 temp59;
    float temp60;
    float3 temp61;
    float temp62;
    temp62= 1;
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    temp61= temp64;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 87: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp66;
    float3 temp67;
    temp67= saturate(r0.rgb);
    float3 temp68;
    float3 temp69;
    temp69= saturate(tex0.rgb);
    float3 temp70;
    float3 temp71;
    temp71= temp67 * temp69;
    temp66= temp71;
    temp66= 4 * temp66;
    r0.rgb= temp66;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    e= temp72;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp74;
    temp74= 1;
    float3 temp75;
    f= temp74;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp76;
    float3 temp77;
    float3 temp78;
    temp78= e.rgb*f.rgb;
    temp77= temp78;
    float temp79;
    temp79= 1-saturate(color0.b);
    float3 temp80;
    float3 temp81;
    temp81= temp77 * temp79;
    temp76= temp81;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp82;
    float temp83;
    temp83= 0;
    float3 temp84;
    temp82= temp83;
    r0.rgb= temp76;
    r0.a= temp82;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: T0= T0*R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(tex0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp43 * temp44;
    temp38= temp46;
    tex0.rgb= temp38;
    // exp.components=3 term=3
    // line 72: T0= T0*C0
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= c5.rgb;
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    // exp.components=3 term=3
    // line 73: D1= INVERT(R0)*INVERT(R0)
    float3 temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= 1-saturate(r0.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp47;
    color1.rgb= temp53;
    // exp.components=3 term=1 term=3
    // line 75: R0= 1 - D1*D1
    float3 temp59;
    float temp60;
    float3 temp61;
    float temp62;
    temp62= 1;
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float3 temp66;
    temp66= saturate(color1.rgb);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 - temp61;
    r0.rgb= temp59;
    // exp.components=3 term=3
    // line 87: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp69;
    float3 temp70;
    temp70= saturate(r0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(tex0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp69= temp74;
    temp69= 4 * temp69;
    r0.rgb= temp69;
    // exp.components=3 term=3
    // line 91: E= R0
    float3 temp75;
    temp75= saturate(r0.rgb);
    float3 temp76;
    e= temp75;
    // exp.components=1 term=1
    // line 92: F= 1
    float temp77;
    temp77= 1;
    float3 temp78;
    f= temp77;
    // exp.components=3 term=3
    // line 93: SRCCOLOR= EF*INVERT(D0b)
    float3 temp79;
    float3 temp80;
    float3 temp81;
    temp81= e.rgb*f.rgb;
    temp80= temp81;
    float temp82;
    temp82= 1-saturate(color0.b);
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=1 term=1
    // line 94: SRCALPHA= 0
    float temp85;
    float temp86;
    temp86= 0;
    float3 temp87;
    temp85= temp86;
    r0.rgb= temp79;
    r0.a= temp85;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
