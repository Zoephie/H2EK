; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_transparent_meter_0.txt
;
#const C1.a= $meter_value
#const C3.rgb= $meter_on_color
#const C3.a= $meter_on_opacity
#const C4.rgb= $meter_off_color
#const C4.a= $meter_off_opacity
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
    // exp.components=1 term=1 term=1
    // line 14: R0a= T1a - C0a
    float temp0;
    float temp1;
    float temp2;
    float temp3;
    temp3= saturate(tex1.a);
    float3 temp4;
    temp1= temp3;
    float temp5;
    temp5= c1.a;
    float3 temp6;
    temp2= temp5;
    temp0= temp1 - temp2;
    r0.a= temp0;
    // exp.components=1 term=1 term=1
    // line 17: R0a= SIGNED(R0a) + C0a
    float temp7;
    float temp8;
    float temp9;
    float temp10;
    temp10= r0.a;
    float3 temp11;
    temp8= temp10;
    float temp12;
    temp12= 0.501961;
    float3 temp13;
    temp9= temp12;
    temp7= temp8 + temp9;
    r0.a= temp7;
    // exp.components=3 term=3 term=3
    // line 23: R0= C0*T1 mux C1*T1
    float3 temp14;
    float3 temp15;
    float3 temp16;
    float3 temp17;
    temp17= c3.rgb;
    float3 temp18;
    float3 temp19;
    temp19= saturate(tex1.rgb);
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp15= temp21;
    float3 temp22;
    temp22= c4.rgb;
    float3 temp23;
    float3 temp24;
    temp24= saturate(tex1.rgb);
    float3 temp25;
    float3 temp26;
    temp26= temp22 * temp24;
    temp16= temp26;
    temp14= lerp(temp15,temp16,round(r0.a));
    // exp.components=1 term=1 term=1
    // line 24: R0a= C0a*T2a mux C1a*T2a
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= c3.a;
    float3 temp31;
    float temp32;
    temp32= saturate(tex2.a);
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= c4.a;
    float3 temp36;
    float temp37;
    temp37= saturate(tex2.a);
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= lerp(temp28,temp29,round(r0.a));
    r0.rgb= temp14;
    r0.a= temp27;
    // exp.components=3 term=3
    // line 26: SRCCOLOR= R0
    float3 temp40;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    temp40= temp41;
    // exp.components=1 term=1
    // line 27: SRCALPHA= R0a
    float temp43;
    float temp44;
    temp44= saturate(r0.a);
    float3 temp45;
    temp43= temp44;
    r0.rgb= temp40;
    r0.a= temp43;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
