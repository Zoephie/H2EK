; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_detail_alpha_test_detail_3.txt
;
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=3 term=3
    // line 24: R0= OUT_SCALE_BY_2(T0*T1)
    float3 temp0;
    float3 temp1;
    temp1= saturate(tex0.rgb);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex1.rgb);
    float3 temp4;
    float3 temp5;
    temp5= temp1 * temp3;
    temp0= temp5;
    temp0= 2 * temp0;
    // exp.components=1 term=1
    // line 25: R0a= T0a*T4a
    float temp6;
    float temp7;
    temp7= saturate(tex0.a);
    float3 temp8;
    float temp9;
    temp9= saturate(tex4.a);
    float3 temp10;
    float temp11;
    temp11= temp7 * temp9;
    temp6= temp11;
    r0.rgb= temp0;
    r0.a= temp6;
    // exp.components=3 term=3
    // line 27: T0= OUT_SCALE_BY_2(R0*T4)
    float3 temp12;
    float3 temp13;
    temp13= saturate(r0.rgb);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex4.rgb);
    float3 temp16;
    float3 temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    temp12= 2 * temp12;
    // exp.components=1 term=1
    // line 28: R0a= R0a*T1a
    float temp18;
    float temp19;
    temp19= saturate(r0.a);
    float3 temp20;
    float temp21;
    temp21= saturate(tex1.a);
    float3 temp22;
    float temp23;
    temp23= temp19 * temp21;
    temp18= temp23;
    tex0.rgb= temp12;
    r0.a= temp18;
    // exp.components=1 term=1
    // line 30: R0= EXPAND(T2).EXPAND(T3)
    float temp24;
    float3 temp25;
    temp25= 2 * saturate(tex2.rgb) - 1;
    float3 temp26;
    float3 temp27;
    temp27= 2 * saturate(tex3.rgb) - 1;
    float3 temp28;
    float temp29;
    temp29= dot(temp25, temp27);
    temp24= temp29;
    // exp.components=1 term=1
    // line 31: R1= EXPAND(T2).EXPAND(D1)
    float temp30;
    float3 temp31;
    temp31= 2 * saturate(tex2.rgb) - 1;
    float3 temp32;
    float3 temp33;
    temp33= 2 * saturate(color1.rgb) - 1;
    float3 temp34;
    float temp35;
    temp35= dot(temp31, temp33);
    temp30= temp35;
    r0.rgb= temp24;
    r1.rgb= temp30;
    // exp.components=3 term=3 term=3
    // line 35: R0= R0*C0 + R1*C1
    float3 temp36;
    float3 temp37;
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= float3(0.501961,0.490196,0.470588);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp37= temp43;
    float3 temp44;
    temp44= saturate(r1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= float3(0.372549,0.352941,0.333333);
    float3 temp47;
    float3 temp48;
    temp48= temp44 * temp46;
    temp38= temp48;
    temp36= temp37 + temp38;
    r0.rgb= temp36;
    // exp.components=1 term=1
    // line 38: R1= R0.C1a
    float temp49;
    float3 temp50;
    temp50= saturate(r0.rgb);
    float3 temp51;
    float temp52;
    temp52= 0.752941;
    float3 temp53;
    float temp54;
    temp54= dot(temp50, temp52);
    temp49= temp54;
    r1.rgb= temp49;
    // exp.components=3 term=3 term=3
    // line 41: R0= OUT_SCALE_BY_2(R0*T0 + C0*T0)
    float3 temp55;
    float3 temp56;
    float3 temp57;
    float3 temp58;
    temp58= saturate(r0.rgb);
    float3 temp59;
    float3 temp60;
    temp60= saturate(tex0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp56= temp62;
    float3 temp63;
    temp63= float3(0.062745,0.062745,0.062745);
    float3 temp64;
    float3 temp65;
    temp65= saturate(tex0.rgb);
    float3 temp66;
    float3 temp67;
    temp67= temp63 * temp65;
    temp57= temp67;
    temp55= temp56 + temp57;
    temp55= 2 * temp55;
    // exp.components=1 term=1 term=1
    // line 42: R0a=0 mux 1
    float temp68;
    float temp69;
    float temp70;
    float temp71;
    temp71= 0;
    float3 temp72;
    temp69= temp71;
    float temp73;
    temp73= 1;
    float3 temp74;
    temp70= temp73;
    temp68= lerp(temp69,temp70,round(r0.a));
    r0.rgb= temp55;
    r0.a= temp68;
    // exp.components=3 term=3
    // line 44: SRCCOLOR= R0
    float3 temp75;
    float3 temp76;
    temp76= saturate(r0.rgb);
    float3 temp77;
    temp75= temp76;
    // exp.components=1 term=1
    // line 45: SRCALPHA= R0a
    float temp78;
    float temp79;
    temp79= saturate(r0.a);
    float3 temp80;
    temp78= temp79;
    r0.rgb= temp75;
    r0.a= temp78;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
