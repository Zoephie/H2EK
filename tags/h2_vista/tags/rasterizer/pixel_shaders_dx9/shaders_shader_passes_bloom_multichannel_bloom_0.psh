; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_bloom_multichannel_bloom_0.txt
;
#const C1.r= $channel_a_bloom
#const C2.g= $channel_b_bloom
#const C3.a= $channel_c_bloom
sampler2D s1 : register(S1);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
    // exp.components=1 term=1
    // line 13: R0= C0.T1
    float temp0;
    float3 temp1;
    temp1= float3(c1.r,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex1.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 14: R1= C1.T1
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,c2.g,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex1.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=1 term=1 term=1
    // line 16: R0a= R0b + R1b
    float temp12;
    float temp13;
    float temp14;
    float temp15;
    temp15= saturate(r0.b);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r1.b);
    float3 temp18;
    temp14= temp17;
    temp12= temp13 + temp14;
    r0.a= temp12;
    // exp.components=1 term=1
    // line 19: R0= C0.T1
    float temp19;
    float3 temp20;
    temp20= float3(0.000000,0.000000,0.000000);
    float3 temp21;
    float3 temp22;
    temp22= saturate(tex1.rgb);
    float3 temp23;
    float temp24;
    temp24= dot(temp20, temp22);
    temp19= temp24;
    r0.rgb= temp19;
    // exp.components=1 term=1 term=1
    // line 21: R0a= R0a + R0b
    float temp25;
    float temp26;
    float temp27;
    float temp28;
    temp28= saturate(r0.a);
    float3 temp29;
    temp26= temp28;
    float temp30;
    temp30= saturate(r0.b);
    float3 temp31;
    temp27= temp30;
    temp25= temp26 + temp27;
    r0.a= temp25;
    // exp.components=1 term=1
    // line 23: SRCCOLOR= 0
    float temp32;
    float temp33;
    temp33= 0;
    float3 temp34;
    temp32= temp33;
    // exp.components=1 term=1
    // line 24: SRCALPHA= R0a
    float temp35;
    float temp36;
    temp36= saturate(r0.a);
    float3 temp37;
    temp35= temp36;
    r0.rgb= temp32;
    r0.a= temp35;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
