; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_hud_ammo_meter_0.txt
;
#const C2.a= $meter_amount
#const C4.rgb= $meter_gradient_min
#const C5.rgb= $meter_gradient_max
#const C6.rgb= $meter_empty_color
#const C8.a= $global_alpha
sampler2D s0 : register(S0);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 c8 : register(C8);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
    // exp.components=1 term=1
    // line 26: T2= C0.T0
    float temp0;
    float3 temp1;
    temp1= float3(0.000000,1.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex0.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 27: R1a= T0b
    float temp6;
    float temp7;
    temp7= saturate(tex0.b);
    float3 temp8;
    temp6= temp7;
    tex2.rgb= temp0;
    r1.a= temp6;
    // exp.components=1 term=1 term=1
    // line 31: R0a= C0a - T0b
    float temp9;
    float temp10;
    float temp11;
    float temp12;
    temp12= c2.a;
    float3 temp13;
    temp10= temp12;
    float temp14;
    temp14= saturate(tex0.b);
    float3 temp15;
    temp11= temp14;
    temp9= temp10 - temp11;
    r0.a= temp9;
    // exp.components=1 term=1 term=1
    // line 34: R0a= SIGNED(R0a) + C0a
    float temp16;
    float temp17;
    float temp18;
    float temp19;
    temp19= r0.a;
    float3 temp20;
    temp17= temp19;
    float temp21;
    temp21= 0.501961;
    float3 temp22;
    temp18= temp21;
    temp16= temp17 + temp18;
    r0.a= temp16;
    // exp.components=3 term=3 term=3
    // line 39: R0= C1*R1a + C0*INVERT(R1a)
    float3 temp23;
    float3 temp24;
    float3 temp25;
    float3 temp26;
    temp26= c5.rgb;
    float3 temp27;
    float temp28;
    temp28= saturate(r1.a);
    float3 temp29;
    float3 temp30;
    temp30= temp26 * temp28;
    temp24= temp30;
    float3 temp31;
    temp31= c4.rgb;
    float3 temp32;
    float temp33;
    temp33= 1-saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= temp31 * temp33;
    temp25= temp35;
    temp23= temp24 + temp25;
    r0.rgb= temp23;
    // exp.components=3 term=3 term=3
    // line 45: T1= C0 mux R0
    float3 temp36;
    float3 temp37;
    float3 temp38;
    float3 temp39;
    temp39= c6.rgb;
    float3 temp40;
    temp37= temp39;
    float3 temp41;
    temp41= saturate(r0.rgb);
    float3 temp42;
    temp38= temp41;
    temp36= lerp(temp37,temp38,round(r0.a));
    // exp.components=1 term=1 term=1
    // line 46: T1a= C0a mux C1a
    float temp43;
    float temp44;
    float temp45;
    float temp46;
    temp46= 0.000000;
    float3 temp47;
    temp44= temp46;
    float temp48;
    temp48= 1.000000;
    float3 temp49;
    temp45= temp48;
    temp43= lerp(temp44,temp45,round(r0.a));
    tex1.rgb= temp36;
    tex1.a= temp43;
    // exp.components=1 term=1 term=1
    // line 48: T0a= T0a + T1a*T2b
    float temp50;
    float temp51;
    float temp52;
    float temp53;
    temp53= saturate(tex0.a);
    float3 temp54;
    temp51= temp53;
    float temp55;
    temp55= saturate(tex1.a);
    float3 temp56;
    float temp57;
    temp57= saturate(tex2.b);
    float3 temp58;
    float temp59;
    temp59= temp55 * temp57;
    temp52= temp59;
    temp50= temp51 + temp52;
    tex0.a= temp50;
    // exp.components=1 term=1
    // line 51: T0a= T0a*C0a
    float temp60;
    float temp61;
    temp61= saturate(tex0.a);
    float3 temp62;
    float temp63;
    temp63= c8.a;
    float3 temp64;
    float temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    tex0.a= temp60;
    // exp.components=3 term=3
    // line 53: SRCCOLOR= T1
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex1.rgb);
    float3 temp68;
    temp66= temp67;
    // exp.components=1 term=1
    // line 54: SRCALPHA= T0a
    float temp69;
    float temp70;
    temp70= saturate(tex0.a);
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp66;
    r0.a= temp69;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
