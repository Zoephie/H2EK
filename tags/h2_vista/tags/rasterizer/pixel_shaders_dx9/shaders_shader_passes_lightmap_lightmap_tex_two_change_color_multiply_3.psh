; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_two_change_color_multiply_3.txt
;
#const C3.rgb= $change_color_primary
#const C4.rgb= $change_color_secondary
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
sampler2D s5 : register(S5);
sampler2D s6 : register(S6);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 c8 : register(C8);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
#ifdef CENTROID5
    float4 tc5 : TEXCOORD5_centroid,
#else
    float4 tc5 : TEXCOORD5,
#endif
#ifdef CENTROID6
    float4 tc6 : TEXCOORD6_centroid,
#else
    float4 tc6 : TEXCOORD6,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
// texture stage 5 mode 0 dot 0 input-stage 0
    float4 tex5= tex2Dproj(s5, tc5);
// texture stage 6 mode 0 dot 0 input-stage 0
    float4 tex6= tex2Dproj(s6, tc6);
    // exp.components=3 term=3
    // line 27: T0= T0*T5
    float3 temp0;
    float3 temp1;
    temp1= saturate(tex0.rgb);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex5.rgb);
    float3 temp4;
    float3 temp5;
    temp5= temp1 * temp3;
    temp0= temp5;
    // exp.components=1 term=1
    // line 28: T0a= T0a*T5a
    float temp6;
    float temp7;
    temp7= saturate(tex0.a);
    float3 temp8;
    float temp9;
    temp9= saturate(tex5.a);
    float3 temp10;
    float temp11;
    temp11= temp7 * temp9;
    temp6= temp11;
    tex0.rgb= temp0;
    tex0.a= temp6;
    // exp.components=1 term=1
    // line 32: R0= C0.T6
    float temp12;
    float3 temp13;
    temp13= float3(1.000000,0.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex6.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    // exp.components=1 term=1
    // line 33: R1= C1.T6
    float temp18;
    float3 temp19;
    temp19= float3(0.000000,1.000000,0.000000);
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex6.rgb);
    float3 temp22;
    float temp23;
    temp23= dot(temp19, temp21);
    temp18= temp23;
    r0.rgb= temp12;
    r1.rgb= temp18;
    // exp.components=3 term=3 term=3
    // line 36: T5= INVERT(R0) + R0*C0
    float3 temp24;
    float3 temp25;
    float3 temp26;
    float3 temp27;
    temp27= 1-saturate(r0.rgb);
    float3 temp28;
    temp25= temp27;
    float3 temp29;
    temp29= saturate(r0.rgb);
    float3 temp30;
    float3 temp31;
    temp31= c3.rgb;
    float3 temp32;
    float3 temp33;
    temp33= temp29 * temp31;
    temp26= temp33;
    temp24= temp25 + temp26;
    tex5.rgb= temp24;
    // exp.components=3 term=3 term=3
    // line 39: T6= INVERT(R1) + R1*C0
    float3 temp34;
    float3 temp35;
    float3 temp36;
    float3 temp37;
    temp37= 1-saturate(r1.rgb);
    float3 temp38;
    temp35= temp37;
    float3 temp39;
    temp39= saturate(r1.rgb);
    float3 temp40;
    float3 temp41;
    temp41= c4.rgb;
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp36= temp43;
    temp34= temp35 + temp36;
    tex6.rgb= temp34;
    // exp.components=3 term=3
    // line 41: R0= OUT_SCALE_BY_2(T0*T4)
    float3 temp44;
    float3 temp45;
    temp45= saturate(tex0.rgb);
    float3 temp46;
    float3 temp47;
    temp47= saturate(tex4.rgb);
    float3 temp48;
    float3 temp49;
    temp49= temp45 * temp47;
    temp44= temp49;
    temp44= 2 * temp44;
    // exp.components=1 term=1
    // line 42: R0a= T0a*T4a
    float temp50;
    float temp51;
    temp51= saturate(tex0.a);
    float3 temp52;
    float temp53;
    temp53= saturate(tex4.a);
    float3 temp54;
    float temp55;
    temp55= temp51 * temp53;
    temp50= temp55;
    r0.rgb= temp44;
    r0.a= temp50;
    // exp.components=3 term=3
    // line 44: E= T5
    float3 temp56;
    temp56= saturate(tex5.rgb);
    float3 temp57;
    e= temp56;
    // exp.components=3 term=3
    // line 45: F= T6
    float3 temp58;
    temp58= saturate(tex6.rgb);
    float3 temp59;
    f= temp58;
    // exp.components=3 term=3
    // line 46: T0= R0*EF
    float3 temp60;
    float3 temp61;
    temp61= saturate(r0.rgb);
    float3 temp62;
    float3 temp63;
    float3 temp64;
    temp64= e.rgb*f.rgb;
    temp63= temp64;
    float3 temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    // exp.components=1 term=1
    // line 47: T0a= R0a
    float temp66;
    float temp67;
    temp67= saturate(r0.a);
    float3 temp68;
    temp66= temp67;
    tex0.rgb= temp60;
    tex0.a= temp66;
    // exp.components=1 term=1
    // line 49: R0= EXPAND(T2).EXPAND_NEGATE(T3)
    float temp69;
    float3 temp70;
    temp70= 2 * saturate(tex2.rgb) - 1;
    float3 temp71;
    float3 temp72;
    temp72= 1 - 2 * saturate(tex3.rgb);
    float3 temp73;
    float temp74;
    temp74= dot(temp70, temp72);
    temp69= temp74;
    // exp.components=1 term=1
    // line 50: R1= EXPAND(T2).EXPAND(D1)
    float temp75;
    float3 temp76;
    temp76= 2 * saturate(tex2.rgb) - 1;
    float3 temp77;
    float3 temp78;
    temp78= 2 * saturate(color1.rgb) - 1;
    float3 temp79;
    float temp80;
    temp80= dot(temp76, temp78);
    temp75= temp80;
    r0.rgb= temp69;
    r1.rgb= temp75;
    // exp.components=3 term=3 term=3
    // line 55: R0= R0*C0 + R1*C1
    float3 temp81;
    float3 temp82;
    float3 temp83;
    float3 temp84;
    temp84= saturate(r0.rgb);
    float3 temp85;
    float3 temp86;
    temp86= float3(0.501961,0.490196,0.470588);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp82= temp88;
    float3 temp89;
    temp89= saturate(r1.rgb);
    float3 temp90;
    float3 temp91;
    temp91= float3(0.372549,0.352941,0.333333);
    float3 temp92;
    float3 temp93;
    temp93= temp89 * temp91;
    temp83= temp93;
    temp81= temp82 + temp83;
    r0.rgb= temp81;
    // exp.components=1 term=1
    // line 59: R1= R0.C1a
    float temp94;
    float3 temp95;
    temp95= saturate(r0.rgb);
    float3 temp96;
    float temp97;
    temp97= 0.752941;
    float3 temp98;
    float temp99;
    temp99= dot(temp95, temp97);
    temp94= temp99;
    r1.rgb= temp94;
    // exp.components=3 term=3 term=3
    // line 63: R0= OUT_SCALE_BY_2(R0*T0 + C0*T0)
    float3 temp100;
    float3 temp101;
    float3 temp102;
    float3 temp103;
    temp103= saturate(r0.rgb);
    float3 temp104;
    float3 temp105;
    temp105= saturate(tex0.rgb);
    float3 temp106;
    float3 temp107;
    temp107= temp103 * temp105;
    temp101= temp107;
    float3 temp108;
    temp108= float3(0.062745,0.062745,0.062745);
    float3 temp109;
    float3 temp110;
    temp110= saturate(tex0.rgb);
    float3 temp111;
    float3 temp112;
    temp112= temp108 * temp110;
    temp102= temp112;
    temp100= temp101 + temp102;
    temp100= 2 * temp100;
    // exp.components=1 term=1
    // line 64: D0a= OUT_SCALE_BY_2(R1b*T0a)
    float temp113;
    float temp114;
    temp114= saturate(r1.b);
    float3 temp115;
    float temp116;
    temp116= saturate(tex0.a);
    float3 temp117;
    float temp118;
    temp118= temp114 * temp116;
    temp113= temp118;
    temp113= 2 * temp113;
    r0.rgb= temp100;
    color0.a= temp113;
    // exp.components=3 term=3
    // line 67: SRCCOLOR= R0
    float3 temp119;
    float3 temp120;
    temp120= saturate(r0.rgb);
    float3 temp121;
    temp119= temp120;
    // exp.components=1 term=1
    // line 68: SRCALPHA= D0a
    float temp122;
    float temp123;
    temp123= saturate(color0.a);
    float3 temp124;
    temp122= temp123;
    r0.rgb= temp119;
    r0.a= temp122;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
