; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_self_illumination_self_illumination_single_pass_3_channel_plasma_0.txt
;
#const C1.a= $time
#const C5.rgb= $channel_b_color
#const C7.rgb= $channel_c_color
#const C8.rgb= $channel_a_color
sampler2D s0 : register(S0);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 c8 : register(C8);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
    // exp.components=1 term=1 term=1
    // line 8: R0= T0a - C0a
    float temp0;
    float temp1;
    float temp2;
    float temp3;
    temp3= saturate(tex0.a);
    float3 temp4;
    temp1= temp3;
    float temp5;
    temp5= c1.a;
    float3 temp6;
    temp2= temp5;
    temp0= temp1 - temp2;
    // exp.components=1 term=1 term=1
    // line 9: R0a= C0a - T0a
    float temp7;
    float temp8;
    float temp9;
    float temp10;
    temp10= c1.a;
    float3 temp11;
    temp8= temp10;
    float temp12;
    temp12= saturate(tex0.a);
    float3 temp13;
    temp9= temp12;
    temp7= temp8 - temp9;
    r0.rgb= temp0;
    r0.a= temp7;
    // exp.components=3 term=3 term=1
    // line 12: R0= SIGNED(R0) + C0a
    float3 temp14;
    float3 temp15;
    float temp16;
    float3 temp17;
    temp17= r0.rgb;
    float3 temp18;
    temp15= temp17;
    float temp19;
    temp19= 0.501961;
    float3 temp20;
    temp16= temp19;
    temp14= temp15 + temp16;
    // exp.components=1 term=1 term=1
    // line 13: R0a= SIGNED(R0a) + C0a
    float temp21;
    float temp22;
    float temp23;
    float temp24;
    temp24= r0.a;
    float3 temp25;
    temp22= temp24;
    float temp26;
    temp26= 0.501961;
    float3 temp27;
    temp23= temp26;
    temp21= temp22 + temp23;
    r0.rgb= temp14;
    r0.a= temp21;
    // exp.components=1 term=1
    // line 17: T2= T0.C0
    float temp28;
    float3 temp29;
    temp29= saturate(tex0.rgb);
    float3 temp30;
    float3 temp31;
    temp31= float3(1.000000,0.000000,0.000000);
    float3 temp32;
    float temp33;
    temp33= dot(temp29, temp31);
    temp28= temp33;
    // exp.components=1 term=1
    // line 18: T3= T0.C1
    float temp34;
    float3 temp35;
    temp35= saturate(tex0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= float3(0.000000,1.000000,0.000000);
    float3 temp38;
    float temp39;
    temp39= dot(temp35, temp37);
    temp34= temp39;
    // exp.components=1 term=1 term=1
    // line 19: R0a= OUT_SCALE_BY_4(SIGNED(R0a)*SIGNED(R0a) mux SIGNED(R0b)*SIGNED(R0b))
    float temp40;
    float temp41;
    float temp42;
    float temp43;
    temp43= r0.a;
    float3 temp44;
    float temp45;
    temp45= r0.a;
    float3 temp46;
    float temp47;
    temp47= temp43 * temp45;
    temp41= temp47;
    float temp48;
    temp48= r0.b;
    float3 temp49;
    float temp50;
    temp50= r0.b;
    float3 temp51;
    float temp52;
    temp52= temp48 * temp50;
    temp42= temp52;
    temp40= lerp(temp41,temp42,round(r0.a));
    temp40= 4 * temp40;
    tex2.rgb= temp28;
    tex3.rgb= temp34;
    r0.a= temp40;
    // exp.components=3 term=3
    // line 22: T3= T3*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex3.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=1 term=1 term=1
    // line 23: R0a= 0 mux EXPAND(R0a)*EXPAND(R0a)
    float temp59;
    float temp60;
    float temp61;
    float temp62;
    temp62= 0;
    float3 temp63;
    temp60= temp62;
    float temp64;
    temp64= 2 * saturate(r0.a) - 1;
    float3 temp65;
    float temp66;
    temp66= 2 * saturate(r0.a) - 1;
    float3 temp67;
    float temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= lerp(temp60,temp61,round(r0.a));
    tex3.rgb= temp53;
    r0.a= temp59;
    // exp.components=1 term=1
    // line 26: R1= T0.C0
    float temp69;
    float3 temp70;
    temp70= saturate(tex0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= float3(0.000000,0.000000,1.000000);
    float3 temp73;
    float temp74;
    temp74= dot(temp70, temp72);
    temp69= temp74;
    // exp.components=1 term=1 term=1
    // line 27: R0a= 0 mux EXPAND(R0a)*EXPAND(R0a)
    float temp75;
    float temp76;
    float temp77;
    float temp78;
    temp78= 0;
    float3 temp79;
    temp76= temp78;
    float temp80;
    temp80= 2 * saturate(r0.a) - 1;
    float3 temp81;
    float temp82;
    temp82= 2 * saturate(r0.a) - 1;
    float3 temp83;
    float temp84;
    temp84= temp80 * temp82;
    temp77= temp84;
    temp75= lerp(temp76,temp77,round(r0.a));
    r1.rgb= temp69;
    r0.a= temp75;
    // exp.components=3 term=3 term=3
    // line 30: R1= R1*C1+T3
    float3 temp85;
    float3 temp86;
    float3 temp87;
    float3 temp88;
    temp88= saturate(r1.rgb);
    float3 temp89;
    float3 temp90;
    temp90= c7.rgb;
    float3 temp91;
    float3 temp92;
    temp92= temp88 * temp90;
    temp86= temp92;
    float3 temp93;
    temp93= saturate(tex3.rgb);
    float3 temp94;
    temp87= temp93;
    temp85= temp86 + temp87;
    r1.rgb= temp85;
    // exp.components=3 term=3
    // line 33: R0= R0a*C0
    float3 temp95;
    float temp96;
    temp96= saturate(r0.a);
    float3 temp97;
    float3 temp98;
    temp98= c8.rgb;
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp95= temp100;
    r0.rgb= temp95;
    // exp.components=3 term=3 term=3
    // line 35: R0= R0*T2+R1
    float3 temp101;
    float3 temp102;
    float3 temp103;
    float3 temp104;
    temp104= saturate(r0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= saturate(tex2.rgb);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp102= temp108;
    float3 temp109;
    temp109= saturate(r1.rgb);
    float3 temp110;
    temp103= temp109;
    temp101= temp102 + temp103;
    r0.rgb= temp101;
    // exp.components=1 term=1
    // line 37: R1= R0.R0
    float temp111;
    float3 temp112;
    temp112= saturate(r0.rgb);
    float3 temp113;
    float3 temp114;
    temp114= saturate(r0.rgb);
    float3 temp115;
    float temp116;
    temp116= dot(temp112, temp114);
    temp111= temp116;
    // exp.components=3 term=3
    // line 38: D0= D0*D0a
    float3 temp117;
    float3 temp118;
    temp118= saturate(color0.rgb);
    float3 temp119;
    float temp120;
    temp120= saturate(color0.a);
    float3 temp121;
    float3 temp122;
    temp122= temp118 * temp120;
    temp117= temp122;
    r1.rgb= temp111;
    color0.rgb= temp117;
    // exp.components=3 term=3
    // line 40: SRCCOLOR= R0*D0
    float3 temp123;
    float3 temp124;
    temp124= saturate(r0.rgb);
    float3 temp125;
    float3 temp126;
    temp126= saturate(color0.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp123= temp128;
    // exp.components=1 term=1
    // line 41: SRCALPHA= R1b
    float temp129;
    float temp130;
    temp130= saturate(r1.b);
    float3 temp131;
    temp129= temp130;
    r0.rgb= temp123;
    r0.a= temp129;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
