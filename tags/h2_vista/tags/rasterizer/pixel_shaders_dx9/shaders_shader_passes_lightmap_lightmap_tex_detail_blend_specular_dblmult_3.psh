; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_detail_blend_specular_dblmult_3.txt
;
#const C1.rgb= $diffuse_color
#const C2.rgb= $diffuse_color_offset
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
sampler2D s5 : register(S5);
sampler2D s6 : register(S6);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
#ifdef CENTROID5
    float4 tc5 : TEXCOORD5_centroid,
#else
    float4 tc5 : TEXCOORD5,
#endif
#ifdef CENTROID6
    float4 tc6 : TEXCOORD6_centroid,
#else
    float4 tc6 : TEXCOORD6,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
// texture stage 5 mode 0 dot 0 input-stage 0
    float4 tex5= tex2Dproj(s5, tc5);
// texture stage 6 mode 0 dot 0 input-stage 0
    float4 tex6= tex2Dproj(s6, tc6);
    // exp.components=3 term=3 term=3
    // line 27: R0= INVERT(T0a)*T4 + T0a*T5
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float temp3;
    temp3= 1-saturate(tex0.a);
    float3 temp4;
    float3 temp5;
    temp5= saturate(tex4.rgb);
    float3 temp6;
    float3 temp7;
    temp7= temp3 * temp5;
    temp1= temp7;
    float temp8;
    temp8= saturate(tex0.a);
    float3 temp9;
    float3 temp10;
    temp10= saturate(tex5.rgb);
    float3 temp11;
    float3 temp12;
    temp12= temp8 * temp10;
    temp2= temp12;
    temp0= temp1 + temp2;
    // exp.components=1 term=1
    // line 28: R0a= OUT_SCALE_BY_2(T6a*T4a)
    float temp13;
    float temp14;
    temp14= saturate(tex6.a);
    float3 temp15;
    float temp16;
    temp16= saturate(tex4.a);
    float3 temp17;
    float temp18;
    temp18= temp14 * temp16;
    temp13= temp18;
    temp13= 2 * temp13;
    r0.rgb= temp0;
    r0.a= temp13;
    // exp.components=3 term=3
    // line 30: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp19;
    float3 temp20;
    temp20= saturate(r0.rgb);
    float3 temp21;
    float3 temp22;
    temp22= saturate(tex0.rgb);
    float3 temp23;
    float3 temp24;
    temp24= temp20 * temp22;
    temp19= temp24;
    temp19= 2 * temp19;
    // exp.components=1 term=1
    // line 31: R0a= OUT_SCALE_BY_2(R0a*T5a)
    float temp25;
    float temp26;
    temp26= saturate(r0.a);
    float3 temp27;
    float temp28;
    temp28= saturate(tex5.a);
    float3 temp29;
    float temp30;
    temp30= temp26 * temp28;
    temp25= temp30;
    temp25= 2 * temp25;
    r0.rgb= temp19;
    r0.a= temp25;
    // exp.components=3 term=3 term=3
    // line 35: T0= R0*C0 + C1
    float3 temp31;
    float3 temp32;
    float3 temp33;
    float3 temp34;
    temp34= saturate(r0.rgb);
    float3 temp35;
    float3 temp36;
    temp36= c1.rgb;
    float3 temp37;
    float3 temp38;
    temp38= temp34 * temp36;
    temp32= temp38;
    float3 temp39;
    temp39= c2.rgb;
    float3 temp40;
    temp33= temp39;
    temp31= temp32 + temp33;
    // exp.components=1 term=1
    // line 36: T0a= R0a
    float temp41;
    float temp42;
    temp42= saturate(r0.a);
    float3 temp43;
    temp41= temp42;
    tex0.rgb= temp31;
    tex0.a= temp41;
    // exp.components=1 term=1
    // line 38: R0= EXPAND(T2).EXPAND_NEGATE(T3)
    float temp44;
    float3 temp45;
    temp45= 2 * saturate(tex2.rgb) - 1;
    float3 temp46;
    float3 temp47;
    temp47= 1 - 2 * saturate(tex3.rgb);
    float3 temp48;
    float temp49;
    temp49= dot(temp45, temp47);
    temp44= temp49;
    // exp.components=1 term=1
    // line 39: R1= EXPAND(T2).EXPAND(D1)
    float temp50;
    float3 temp51;
    temp51= 2 * saturate(tex2.rgb) - 1;
    float3 temp52;
    float3 temp53;
    temp53= 2 * saturate(color1.rgb) - 1;
    float3 temp54;
    float temp55;
    temp55= dot(temp51, temp53);
    temp50= temp55;
    r0.rgb= temp44;
    r1.rgb= temp50;
    // exp.components=3 term=3 term=3
    // line 44: R0= R0*C0 + R1*C1
    float3 temp56;
    float3 temp57;
    float3 temp58;
    float3 temp59;
    temp59= saturate(r0.rgb);
    float3 temp60;
    float3 temp61;
    temp61= float3(0.501961,0.490196,0.470588);
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp57= temp63;
    float3 temp64;
    temp64= saturate(r1.rgb);
    float3 temp65;
    float3 temp66;
    temp66= float3(0.372549,0.352941,0.333333);
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp58= temp68;
    temp56= temp57 + temp58;
    r0.rgb= temp56;
    // exp.components=1 term=1
    // line 48: R1= R0.C1a
    float temp69;
    float3 temp70;
    temp70= saturate(r0.rgb);
    float3 temp71;
    float temp72;
    temp72= 0.752941;
    float3 temp73;
    float temp74;
    temp74= dot(temp70, temp72);
    temp69= temp74;
    r1.rgb= temp69;
    // exp.components=3 term=3 term=3
    // line 52: R0= OUT_SCALE_BY_2(R0*T0 + C0*T0)
    float3 temp75;
    float3 temp76;
    float3 temp77;
    float3 temp78;
    temp78= saturate(r0.rgb);
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= temp78 * temp80;
    temp76= temp82;
    float3 temp83;
    temp83= float3(0.062745,0.062745,0.062745);
    float3 temp84;
    float3 temp85;
    temp85= saturate(tex0.rgb);
    float3 temp86;
    float3 temp87;
    temp87= temp83 * temp85;
    temp77= temp87;
    temp75= temp76 + temp77;
    temp75= 2 * temp75;
    // exp.components=1 term=1
    // line 53: D0a= OUT_SCALE_BY_2(R1b*T0a)
    float temp88;
    float temp89;
    temp89= saturate(r1.b);
    float3 temp90;
    float temp91;
    temp91= saturate(tex0.a);
    float3 temp92;
    float temp93;
    temp93= temp89 * temp91;
    temp88= temp93;
    temp88= 2 * temp88;
    r0.rgb= temp75;
    color0.a= temp88;
    // exp.components=3 term=3
    // line 56: SRCCOLOR= R0
    float3 temp94;
    float3 temp95;
    temp95= saturate(r0.rgb);
    float3 temp96;
    temp94= temp95;
    // exp.components=1 term=1
    // line 57: SRCALPHA= D0a
    float temp97;
    float temp98;
    temp98= saturate(color0.a);
    float3 temp99;
    temp97= temp98;
    r0.rgb= temp94;
    r0.a= temp97;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
