; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_self_illumination_multichannel_self_illumination_0.txt
;
#const C1.r= $channel_a_brightness
#const C2.g= $channel_b_brightness
#const C3.rgb= $channel_a_color
#const C4.rgb= $channel_b_color
#const C5.rgb= $channel_c_color
#const C5.a= $channel_c_brightness
sampler2D s0 : register(S0);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
    // exp.components=1 term=1
    // line 11: R0= C0.T0
    float temp0;
    float3 temp1;
    temp1= float3(c1.r,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex0.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 12: R1= C1.T0
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,c2.g,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex0.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 13: R0a= T0b
    float temp12;
    float temp13;
    temp13= saturate(tex0.b);
    float3 temp14;
    temp12= temp13;
    r0.rgb= temp0;
    r1.rgb= temp6;
    r0.a= temp12;
    // exp.components=3 term=3 term=3
    // line 17: R0= R0*C0 + R1*C1
    float3 temp15;
    float3 temp16;
    float3 temp17;
    float3 temp18;
    temp18= saturate(r0.rgb);
    float3 temp19;
    float3 temp20;
    temp20= c3.rgb;
    float3 temp21;
    float3 temp22;
    temp22= temp18 * temp20;
    temp16= temp22;
    float3 temp23;
    temp23= saturate(r1.rgb);
    float3 temp24;
    float3 temp25;
    temp25= c4.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp17= temp27;
    temp15= temp16 + temp17;
    r0.rgb= temp15;
    // exp.components=3 term=3
    // line 21: E= C0
    float3 temp28;
    temp28= c5.rgb;
    float3 temp29;
    e= temp28;
    // exp.components=1 term=1
    // line 22: F= C0a
    float temp30;
    temp30= c5.a;
    float3 temp31;
    f= temp30;
    // exp.components=3 term=3 term=3
    // line 23: SRCCOLOR= R0a*EF + R0
    float3 temp32;
    float3 temp33;
    float3 temp34;
    float temp35;
    temp35= saturate(r0.a);
    float3 temp36;
    float3 temp37;
    float3 temp38;
    temp38= e.rgb*f.rgb;
    temp37= temp38;
    float3 temp39;
    temp39= temp35 * temp37;
    temp33= temp39;
    float3 temp40;
    temp40= saturate(r0.rgb);
    float3 temp41;
    temp34= temp40;
    temp32= temp33 + temp34;
    // exp.components=1 term=1
    // line 24: SRCALPHA= 1
    float temp42;
    float temp43;
    temp43= 1;
    float3 temp44;
    temp42= temp43;
    r0.rgb= temp32;
    r0.a= temp42;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
