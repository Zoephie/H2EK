; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_detail_no_specular_2.txt
;
#const C1.rgb= $lightmap_ambient_color
#const C2.rgb= $lightmap_direct_color
#const C3.rgb= $lightmap_indirect_color
#const C4.a= $lightmap_object_env_brightness
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=3 term=3
    // line 23: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp0;
    float3 temp1;
    temp1= saturate(tex0.rgb);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex1.rgb);
    float3 temp4;
    float3 temp5;
    temp5= temp1 * temp3;
    temp0= temp5;
    temp0= 2 * temp0;
    // exp.components=1 term=1
    // line 24: R1a= T2b
    float temp6;
    float temp7;
    temp7= saturate(tex2.b);
    float3 temp8;
    temp6= temp7;
    tex0.rgb= temp0;
    r1.a= temp6;
    // exp.components=3 term=3
    // line 28: R1= T0*C0
    float3 temp9;
    float3 temp10;
    temp10= saturate(tex0.rgb);
    float3 temp11;
    float3 temp12;
    temp12= c1.rgb;
    float3 temp13;
    float3 temp14;
    temp14= temp10 * temp12;
    temp9= temp14;
    r1.rgb= temp9;
    // exp.components=1 term=1
    // line 31: T2= EXPAND(T2).EXPAND(T3)
    float temp15;
    float3 temp16;
    temp16= 2 * saturate(tex2.rgb) - 1;
    float3 temp17;
    float3 temp18;
    temp18= 2 * saturate(tex3.rgb) - 1;
    float3 temp19;
    float temp20;
    temp20= dot(temp16, temp18);
    temp15= temp20;
    // exp.components=1 term=1
    // line 32: T3= EXPAND(T2).EXPAND(D1)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(tex2.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color1.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1
    // line 33: T0a= T0a*T1a
    float temp27;
    float temp28;
    temp28= saturate(tex0.a);
    float3 temp29;
    float temp30;
    temp30= saturate(tex1.a);
    float3 temp31;
    float temp32;
    temp32= temp28 * temp30;
    temp27= temp32;
    tex2.rgb= temp15;
    tex3.rgb= temp21;
    tex0.a= temp27;
    // exp.components=3 term=3 term=3
    // line 38: R0= T2*C0 + T3*C1
    float3 temp33;
    float3 temp34;
    float3 temp35;
    float3 temp36;
    temp36= saturate(tex2.rgb);
    float3 temp37;
    float3 temp38;
    temp38= c2.rgb;
    float3 temp39;
    float3 temp40;
    temp40= temp36 * temp38;
    temp34= temp40;
    float3 temp41;
    temp41= saturate(tex3.rgb);
    float3 temp42;
    float3 temp43;
    temp43= c3.rgb;
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp35= temp45;
    temp33= temp34 + temp35;
    r0.rgb= temp33;
    // exp.components=3 term=3 term=3
    // line 42: R0= OUT_SCALE_BY_2(R0*T0 + R1*R1a)
    float3 temp46;
    float3 temp47;
    float3 temp48;
    float3 temp49;
    temp49= saturate(r0.rgb);
    float3 temp50;
    float3 temp51;
    temp51= saturate(tex0.rgb);
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float3 temp54;
    temp54= saturate(r1.rgb);
    float3 temp55;
    float temp56;
    temp56= saturate(r1.a);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 + temp48;
    temp46= 2 * temp46;
    // exp.components=1 term=1
    // line 43: D0a= OUT_SCALE_BY_2(C1a*T0a)
    float temp59;
    float temp60;
    temp60= c4.a;
    float3 temp61;
    float temp62;
    temp62= saturate(tex0.a);
    float3 temp63;
    float temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    temp59= 2 * temp59;
    r0.rgb= temp46;
    color0.a= temp59;
    // exp.components=3 term=3
    // line 46: SRCCOLOR= R0
    float3 temp65;
    float3 temp66;
    temp66= saturate(r0.rgb);
    float3 temp67;
    temp65= temp66;
    // exp.components=1 term=1
    // line 47: SRCALPHA= 0
    float temp68;
    float temp69;
    temp69= 0;
    float3 temp70;
    temp68= temp69;
    r0.rgb= temp65;
    r0.a= temp68;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
