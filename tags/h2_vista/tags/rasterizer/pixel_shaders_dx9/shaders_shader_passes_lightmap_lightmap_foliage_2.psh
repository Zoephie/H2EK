; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_foliage_2.txt
;
#const C1.rgb= $foliage_see_through_color
#const C2.rgb= $foliage_see_through_glancing_color
#const C3.rgb= $lightmap_direct_color
#const C4.rgb= $lightmap_indirect_color
#const C5.rgb= $lightmap_ambient_color
#const C6.a= $lightmap_object_env_brightness
#const C7.rgb= $foliage_sheen_glancing_color
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
    // exp.components=1 term=1
    // line 22: R0= EXPAND(T2).EXPAND(T3)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex3.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 23: R1= EXPAND(T2).EXPAND(D1)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color1.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.rgb= temp0;
    r1.rgb= temp6;
    // exp.components=1 term=1
    // line 25: D0= EXPAND(T2).EXPAND(T1)
    float temp12;
    float3 temp13;
    temp13= 2 * saturate(tex2.rgb) - 1;
    float3 temp14;
    float3 temp15;
    temp15= 2 * saturate(tex1.rgb) - 1;
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    color0.rgb= temp12;
    // exp.components=3 term=3 term=3
    // line 29: D0= D0*C0 + INVERT(D0)*C1
    float3 temp18;
    float3 temp19;
    float3 temp20;
    float3 temp21;
    temp21= saturate(color0.rgb);
    float3 temp22;
    float3 temp23;
    temp23= c1.rgb;
    float3 temp24;
    float3 temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float3 temp26;
    temp26= 1-saturate(color0.rgb);
    float3 temp27;
    float3 temp28;
    temp28= c2.rgb;
    float3 temp29;
    float3 temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 + temp20;
    // exp.components=1 term=1
    // line 30: D0a= INVERT(D0b)*INVERT(D0b)
    float temp31;
    float temp32;
    temp32= 1-saturate(color0.b);
    float3 temp33;
    float temp34;
    temp34= 1-saturate(color0.b);
    float3 temp35;
    float temp36;
    temp36= temp32 * temp34;
    temp31= temp36;
    color0.rgb= temp18;
    color0.a= temp31;
    // exp.components=3 term=3 term=3
    // line 32: R0= R0 - SIGNED(R0)*D1
    float3 temp37;
    float3 temp38;
    float3 temp39;
    float3 temp40;
    temp40= saturate(r0.rgb);
    float3 temp41;
    temp38= temp40;
    float3 temp42;
    temp42= r0.rgb;
    float3 temp43;
    float3 temp44;
    temp44= saturate(color1.rgb);
    float3 temp45;
    float3 temp46;
    temp46= temp42 * temp44;
    temp39= temp46;
    temp37= temp38 - temp39;
    // exp.components=1 term=1
    // line 33: D0a= D0a*D0a
    float temp47;
    float temp48;
    temp48= saturate(color0.a);
    float3 temp49;
    float temp50;
    temp50= saturate(color0.a);
    float3 temp51;
    float temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp37;
    color0.a= temp47;
    // exp.components=3 term=3 term=3
    // line 35: R1= R1 - SIGNED(R1)*D1
    float3 temp53;
    float3 temp54;
    float3 temp55;
    float3 temp56;
    temp56= saturate(r1.rgb);
    float3 temp57;
    temp54= temp56;
    float3 temp58;
    temp58= r1.rgb;
    float3 temp59;
    float3 temp60;
    temp60= saturate(color1.rgb);
    float3 temp61;
    float3 temp62;
    temp62= temp58 * temp60;
    temp55= temp62;
    temp53= temp54 - temp55;
    r1.rgb= temp53;
    // exp.components=3 term=3 term=3
    // line 39: R0= R0*C0 + R1*C1
    float3 temp63;
    float3 temp64;
    float3 temp65;
    float3 temp66;
    temp66= saturate(r0.rgb);
    float3 temp67;
    float3 temp68;
    temp68= c3.rgb;
    float3 temp69;
    float3 temp70;
    temp70= temp66 * temp68;
    temp64= temp70;
    float3 temp71;
    temp71= saturate(r1.rgb);
    float3 temp72;
    float3 temp73;
    temp73= c4.rgb;
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    temp65= temp75;
    temp63= temp64 + temp65;
    // exp.components=1 term=1
    // line 40: R0a= EXPAND(T2b)
    float temp76;
    float temp77;
    temp77= 2 * saturate(tex2.b) - 1;
    float3 temp78;
    temp76= temp77;
    r0.rgb= temp63;
    r0.a= temp76;
    // exp.components=3 term=3
    // line 43: R1= R0a*C0
    float3 temp79;
    float temp80;
    temp80= saturate(r0.a);
    float3 temp81;
    float3 temp82;
    temp82= c5.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    r1.rgb= temp79;
    // exp.components=3 term=3 term=3
    // line 46: R0= OUT_SCALE_BY_2(R0*T0 + R1*T0)
    float3 temp85;
    float3 temp86;
    float3 temp87;
    float3 temp88;
    temp88= saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= saturate(tex0.rgb);
    float3 temp91;
    float3 temp92;
    temp92= temp88 * temp90;
    temp86= temp92;
    float3 temp93;
    temp93= saturate(r1.rgb);
    float3 temp94;
    float3 temp95;
    temp95= saturate(tex0.rgb);
    float3 temp96;
    float3 temp97;
    temp97= temp93 * temp95;
    temp87= temp97;
    temp85= temp86 + temp87;
    temp85= 2 * temp85;
    // exp.components=1 term=1
    // line 47: R0a= OUT_SCALE_BY_2(C0a*T0a)
    float temp98;
    float temp99;
    temp99= c6.a;
    float3 temp100;
    float temp101;
    temp101= saturate(tex0.a);
    float3 temp102;
    float temp103;
    temp103= temp99 * temp101;
    temp98= temp103;
    temp98= 2 * temp98;
    r0.rgb= temp85;
    r0.a= temp98;
    // exp.components=1 term=1
    // line 50: E= INVERT(D0a)
    float temp104;
    temp104= 1-saturate(color0.a);
    float3 temp105;
    e= temp104;
    // exp.components=1 term=1
    // line 51: F= R0a
    float temp106;
    temp106= saturate(r0.a);
    float3 temp107;
    f= temp106;
    // exp.components=3 term=3 term=3
    // line 52: SRCCOLOR= C0*EF + R0
    float3 temp108;
    float3 temp109;
    float3 temp110;
    float3 temp111;
    temp111= c7.rgb;
    float3 temp112;
    float3 temp113;
    float3 temp114;
    temp114= e.rgb*f.rgb;
    temp113= temp114;
    float3 temp115;
    temp115= temp111 * temp113;
    temp109= temp115;
    float3 temp116;
    temp116= saturate(r0.rgb);
    float3 temp117;
    temp110= temp116;
    temp108= temp109 + temp110;
    // exp.components=1 term=1
    // line 53: SRCALPHA= R0a
    float temp118;
    float temp119;
    temp119= saturate(r0.a);
    float3 temp120;
    temp118= temp119;
    r0.rgb= temp108;
    r0.a= temp118;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
