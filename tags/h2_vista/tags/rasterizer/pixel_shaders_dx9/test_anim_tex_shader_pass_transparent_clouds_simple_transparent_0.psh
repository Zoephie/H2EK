; compiled from tags\rasterizer\pixel_shaders_dx9\test_anim_tex_shader_pass_transparent_clouds_simple_transparent_0.txt
;
#const C1.a= $alpha
sampler2D s2 : register(S2);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex0;
    float4 tex1;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
    // exp.components=1 term=1
    // line 13: R0= 1
    float temp0;
    float temp1;
    temp1= 1;
    float3 temp2;
    temp0= temp1;
    r0.rgb= temp0;
    // exp.components=3 term=3
    // line 16: SRCCOLOR= T2
    float3 temp3;
    float3 temp4;
    temp4= saturate(tex2.rgb);
    float3 temp5;
    temp3= temp4;
    // exp.components=1 term=1
    // line 17: SRCALPHA= C0a
    float temp6;
    float temp7;
    temp7= c1.a;
    float3 temp8;
    temp6= temp7;
    r0.rgb= temp3;
    r0.a= temp6;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
