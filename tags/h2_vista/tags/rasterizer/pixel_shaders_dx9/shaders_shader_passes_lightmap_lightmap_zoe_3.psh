; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_zoe_3.txt
;
#const C1.a= $primary_terrain_alpha_min
#const C2.a= $primary_terrain_alpha_max
#const C3.a= $secondary_terrain_alpha_min
#const C4.a= $secondary_terrain_alpha_max
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
sampler2D s5 : register(S5);
sampler2D s6 : register(S6);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 c8 : register(C8);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
#ifdef CENTROID5
    float4 tc5 : TEXCOORD5_centroid,
#else
    float4 tc5 : TEXCOORD5,
#endif
#ifdef CENTROID6
    float4 tc6 : TEXCOORD6_centroid,
#else
    float4 tc6 : TEXCOORD6,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
// texture stage 5 mode 0 dot 0 input-stage 0
    float4 tex5= tex2Dproj(s5, tc5);
// texture stage 6 mode 0 dot 0 input-stage 0
    float4 tex6= tex2Dproj(s6, tc6);
    // exp.components=3 term=3
    // line 27: T4= OUT_SCALE_BY_2(T4*T5)
    float3 temp0;
    float3 temp1;
    temp1= saturate(tex4.rgb);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex5.rgb);
    float3 temp4;
    float3 temp5;
    temp5= temp1 * temp3;
    temp0= temp5;
    temp0= 2 * temp0;
    // exp.components=1 term=1 term=1
    // line 28: R0a= OUT_SCALE_BY_4(T0a - T4a)
    float temp6;
    float temp7;
    float temp8;
    float temp9;
    temp9= saturate(tex0.a);
    float3 temp10;
    temp7= temp9;
    float temp11;
    temp11= saturate(tex4.a);
    float3 temp12;
    temp8= temp11;
    temp6= temp7 - temp8;
    temp6= 4 * temp6;
    tex4.rgb= temp0;
    r0.a= temp6;
    // exp.components=1 term=1 term=1
    // line 32: R0= SIGNED(R0a) + 1/2
    float temp13;
    float temp14;
    float temp15;
    float temp16;
    temp16= r0.a;
    float3 temp17;
    temp14= temp16;
    float temp18;
    temp18= 0.5;
    float3 temp19;
    temp15= temp18;
    temp13= temp14 + temp15;
    // exp.components=1 term=1 term=1
    // line 33: T5a= INVERT(T5a)*C0a + T5a*C1a
    float temp20;
    float temp21;
    float temp22;
    float temp23;
    temp23= 1-saturate(tex5.a);
    float3 temp24;
    float temp25;
    temp25= c1.a;
    float3 temp26;
    float temp27;
    temp27= temp23 * temp25;
    temp21= temp27;
    float temp28;
    temp28= saturate(tex5.a);
    float3 temp29;
    float temp30;
    temp30= c2.a;
    float3 temp31;
    float temp32;
    temp32= temp28 * temp30;
    temp22= temp32;
    temp20= temp21 + temp22;
    r0.rgb= temp13;
    tex5.a= temp20;
    // exp.components=1 term=1 term=1
    // line 37: T6a= INVERT(T6a)*C0a + T6a*C1a
    float temp33;
    float temp34;
    float temp35;
    float temp36;
    temp36= 1-saturate(tex6.a);
    float3 temp37;
    float temp38;
    temp38= c3.a;
    float3 temp39;
    float temp40;
    temp40= temp36 * temp38;
    temp34= temp40;
    float temp41;
    temp41= saturate(tex6.a);
    float3 temp42;
    float temp43;
    temp43= c4.a;
    float3 temp44;
    float temp45;
    temp45= temp41 * temp43;
    temp35= temp45;
    temp33= temp34 + temp35;
    tex6.a= temp33;
    // exp.components=3 term=3 term=3
    // line 39: R0= R0*T6 + INVERT(R0)*T4
    float3 temp46;
    float3 temp47;
    float3 temp48;
    float3 temp49;
    temp49= saturate(r0.rgb);
    float3 temp50;
    float3 temp51;
    temp51= saturate(tex6.rgb);
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float3 temp54;
    temp54= 1-saturate(r0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= saturate(tex4.rgb);
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 + temp48;
    // exp.components=1 term=1 term=1
    // line 40: R0a= R0b*T6a + INVERT(R0b)*T5a
    float temp59;
    float temp60;
    float temp61;
    float temp62;
    temp62= saturate(r0.b);
    float3 temp63;
    float temp64;
    temp64= saturate(tex6.a);
    float3 temp65;
    float temp66;
    temp66= temp62 * temp64;
    temp60= temp66;
    float temp67;
    temp67= 1-saturate(r0.b);
    float3 temp68;
    float temp69;
    temp69= saturate(tex5.a);
    float3 temp70;
    float temp71;
    temp71= temp67 * temp69;
    temp61= temp71;
    temp59= temp60 + temp61;
    r0.rgb= temp46;
    r0.a= temp59;
    // exp.components=3 term=3
    // line 42: E= R0
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    e= temp72;
    // exp.components=3 term=3
    // line 43: F= T0
    float3 temp74;
    temp74= saturate(tex0.rgb);
    float3 temp75;
    f= temp74;
    // exp.components=3 term=3 term=3
    // line 44: T0= R0*T0 + EF
    float3 temp76;
    float3 temp77;
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(tex0.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp77= temp83;
    float3 temp84;
    float3 temp85;
    temp85= e.rgb*f.rgb;
    temp84= temp85;
    temp78= temp84;
    temp76= temp77 + temp78;
    // exp.components=1 term=1
    // line 45: T0a= R0a
    float temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    temp86= temp87;
    tex0.rgb= temp76;
    tex0.a= temp86;
    // exp.components=1 term=1
    // line 47: R0= EXPAND(T2).EXPAND_NEGATE(T3)
    float temp89;
    float3 temp90;
    temp90= 2 * saturate(tex2.rgb) - 1;
    float3 temp91;
    float3 temp92;
    temp92= 1 - 2 * saturate(tex3.rgb);
    float3 temp93;
    float temp94;
    temp94= dot(temp90, temp92);
    temp89= temp94;
    // exp.components=1 term=1
    // line 48: R1= EXPAND(T2).EXPAND(D1)
    float temp95;
    float3 temp96;
    temp96= 2 * saturate(tex2.rgb) - 1;
    float3 temp97;
    float3 temp98;
    temp98= 2 * saturate(color1.rgb) - 1;
    float3 temp99;
    float temp100;
    temp100= dot(temp96, temp98);
    temp95= temp100;
    r0.rgb= temp89;
    r1.rgb= temp95;
    // exp.components=3 term=3 term=3
    // line 53: R0= R0*C0 + R1*C1
    float3 temp101;
    float3 temp102;
    float3 temp103;
    float3 temp104;
    temp104= saturate(r0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= float3(0.501961,0.490196,0.470588);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp102= temp108;
    float3 temp109;
    temp109= saturate(r1.rgb);
    float3 temp110;
    float3 temp111;
    temp111= float3(0.372549,0.352941,0.333333);
    float3 temp112;
    float3 temp113;
    temp113= temp109 * temp111;
    temp103= temp113;
    temp101= temp102 + temp103;
    r0.rgb= temp101;
    // exp.components=1 term=1
    // line 57: R1= R0.C1a
    float temp114;
    float3 temp115;
    temp115= saturate(r0.rgb);
    float3 temp116;
    float temp117;
    temp117= 0.752941;
    float3 temp118;
    float temp119;
    temp119= dot(temp115, temp117);
    temp114= temp119;
    r1.rgb= temp114;
    // exp.components=3 term=3 term=3
    // line 61: R0= OUT_SCALE_BY_2(R0*T0 + C0*T0)
    float3 temp120;
    float3 temp121;
    float3 temp122;
    float3 temp123;
    temp123= saturate(r0.rgb);
    float3 temp124;
    float3 temp125;
    temp125= saturate(tex0.rgb);
    float3 temp126;
    float3 temp127;
    temp127= temp123 * temp125;
    temp121= temp127;
    float3 temp128;
    temp128= float3(0.062745,0.062745,0.062745);
    float3 temp129;
    float3 temp130;
    temp130= saturate(tex0.rgb);
    float3 temp131;
    float3 temp132;
    temp132= temp128 * temp130;
    temp122= temp132;
    temp120= temp121 + temp122;
    temp120= 2 * temp120;
    // exp.components=1 term=1
    // line 62: D0a= OUT_SCALE_BY_2(R1b*T0a)
    float temp133;
    float temp134;
    temp134= saturate(r1.b);
    float3 temp135;
    float temp136;
    temp136= saturate(tex0.a);
    float3 temp137;
    float temp138;
    temp138= temp134 * temp136;
    temp133= temp138;
    temp133= 2 * temp133;
    r0.rgb= temp120;
    color0.a= temp133;
    // exp.components=3 term=3
    // line 65: SRCCOLOR= R0
    float3 temp139;
    float3 temp140;
    temp140= saturate(r0.rgb);
    float3 temp141;
    temp139= temp140;
    // exp.components=1 term=1
    // line 66: SRCALPHA= D0a
    float temp142;
    float temp143;
    temp143= saturate(color0.a);
    float3 temp144;
    temp142= temp143;
    r0.rgb= temp139;
    r0.a= temp142;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
