; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_detail_blend_specular_3.txt
;
#const C1.rgb= $diffuse_color
#const C2.rgb= $diffuse_color_offset
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
samplerCUBE s3 : register(S3);
sampler2D s4 : register(S4);
sampler2D s5 : register(S5);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
#ifdef CENTROID5
    float4 tc5 : TEXCOORD5_centroid,
#else
    float4 tc5 : TEXCOORD5,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 2 dot 0 input-stage 0
    float4 tex3= texCUBE(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
// texture stage 5 mode 0 dot 0 input-stage 0
    float4 tex5= tex2Dproj(s5, tc5);
    // exp.components=3 term=3 term=3
    // line 26: R0= INVERT(T0a)*T1 + T0a*T4
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float temp3;
    temp3= 1-saturate(tex0.a);
    float3 temp4;
    float3 temp5;
    temp5= saturate(tex1.rgb);
    float3 temp6;
    float3 temp7;
    temp7= temp3 * temp5;
    temp1= temp7;
    float temp8;
    temp8= saturate(tex0.a);
    float3 temp9;
    float3 temp10;
    temp10= saturate(tex4.rgb);
    float3 temp11;
    float3 temp12;
    temp12= temp8 * temp10;
    temp2= temp12;
    temp0= temp1 + temp2;
    // exp.components=1 term=1 term=1
    // line 27: R0a= INVERT(T0a)*T1a + T0a*T4a
    float temp13;
    float temp14;
    float temp15;
    float temp16;
    temp16= 1-saturate(tex0.a);
    float3 temp17;
    float temp18;
    temp18= saturate(tex1.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp14= temp20;
    float temp21;
    temp21= saturate(tex0.a);
    float3 temp22;
    float temp23;
    temp23= saturate(tex4.a);
    float3 temp24;
    float temp25;
    temp25= temp21 * temp23;
    temp15= temp25;
    temp13= temp14 + temp15;
    r0.rgb= temp0;
    r0.a= temp13;
    // exp.components=3 term=3
    // line 29: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp26;
    float3 temp27;
    temp27= saturate(r0.rgb);
    float3 temp28;
    float3 temp29;
    temp29= saturate(tex0.rgb);
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp26= temp31;
    temp26= 2 * temp26;
    r0.rgb= temp26;
    // exp.components=3 term=3 term=3
    // line 33: T0= R0*C0 + C1
    float3 temp32;
    float3 temp33;
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= c1.rgb;
    float3 temp38;
    float3 temp39;
    temp39= temp35 * temp37;
    temp33= temp39;
    float3 temp40;
    temp40= c2.rgb;
    float3 temp41;
    temp34= temp40;
    temp32= temp33 + temp34;
    // exp.components=1 term=1
    // line 34: T0a= T5a
    float temp42;
    float temp43;
    temp43= saturate(tex5.a);
    float3 temp44;
    temp42= temp43;
    tex0.rgb= temp32;
    tex0.a= temp42;
    // exp.components=1 term=1
    // line 36: R0= EXPAND(T2).EXPAND(T3)
    float temp45;
    float3 temp46;
    temp46= 2 * saturate(tex2.rgb) - 1;
    float3 temp47;
    float3 temp48;
    temp48= 2 * saturate(tex3.rgb) - 1;
    float3 temp49;
    float temp50;
    temp50= dot(temp46, temp48);
    temp45= temp50;
    // exp.components=1 term=1
    // line 37: R1= EXPAND(T2).EXPAND(D1)
    float temp51;
    float3 temp52;
    temp52= 2 * saturate(tex2.rgb) - 1;
    float3 temp53;
    float3 temp54;
    temp54= 2 * saturate(color1.rgb) - 1;
    float3 temp55;
    float temp56;
    temp56= dot(temp52, temp54);
    temp51= temp56;
    r0.rgb= temp45;
    r1.rgb= temp51;
    // exp.components=3 term=3 term=3
    // line 41: R0= R0*C0 + R1*C1
    float3 temp57;
    float3 temp58;
    float3 temp59;
    float3 temp60;
    temp60= saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= float3(0.501961,0.490196,0.470588);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp58= temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= float3(0.372549,0.352941,0.333333);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp59= temp69;
    temp57= temp58 + temp59;
    r0.rgb= temp57;
    // exp.components=1 term=1
    // line 44: R1= R0.C1a
    float temp70;
    float3 temp71;
    temp71= saturate(r0.rgb);
    float3 temp72;
    float temp73;
    temp73= 0.752941;
    float3 temp74;
    float temp75;
    temp75= dot(temp71, temp73);
    temp70= temp75;
    r1.rgb= temp70;
    // exp.components=3 term=3 term=3
    // line 47: R0= OUT_SCALE_BY_2(R0*T0 + C0*T0)
    float3 temp76;
    float3 temp77;
    float3 temp78;
    float3 temp79;
    temp79= saturate(r0.rgb);
    float3 temp80;
    float3 temp81;
    temp81= saturate(tex0.rgb);
    float3 temp82;
    float3 temp83;
    temp83= temp79 * temp81;
    temp77= temp83;
    float3 temp84;
    temp84= float3(0.062745,0.062745,0.062745);
    float3 temp85;
    float3 temp86;
    temp86= saturate(tex0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= temp84 * temp86;
    temp78= temp88;
    temp76= temp77 + temp78;
    temp76= 2 * temp76;
    // exp.components=1 term=1
    // line 48: D0a= OUT_SCALE_BY_2(R1b*T0a)
    float temp89;
    float temp90;
    temp90= saturate(r1.b);
    float3 temp91;
    float temp92;
    temp92= saturate(tex0.a);
    float3 temp93;
    float temp94;
    temp94= temp90 * temp92;
    temp89= temp94;
    temp89= 2 * temp89;
    r0.rgb= temp76;
    color0.a= temp89;
    // exp.components=3 term=3
    // line 50: SRCCOLOR= R0
    float3 temp95;
    float3 temp96;
    temp96= saturate(r0.rgb);
    float3 temp97;
    temp95= temp96;
    // exp.components=1 term=1
    // line 51: SRCALPHA= D0a
    float temp98;
    float temp99;
    temp99= saturate(color0.a);
    float3 temp100;
    temp98= temp99;
    r0.rgb= temp95;
    r0.a= temp98;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
