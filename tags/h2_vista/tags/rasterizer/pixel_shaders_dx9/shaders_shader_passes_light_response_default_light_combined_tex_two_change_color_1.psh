; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_light_response_default_light_combined_tex_two_change_color_1.txt
;
#const C3.rgb= $change_color_primary
#const C4.rgb= $change_color_secondary
#const C5.rgb= $light_diffuse_color
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp53;
    // exp.components=3 term=3
    // line 74: R0= R0*T0
    float3 temp59;
    float3 temp60;
    temp60= saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= saturate(tex0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    // exp.components=1 term=1
    // line 75: R1a= T3a*T0a
    float temp65;
    float temp66;
    temp66= saturate(tex3.a);
    float3 temp67;
    float temp68;
    temp68= saturate(tex0.a);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    r0.rgb= temp59;
    r1.a= temp65;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp71;
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    temp71= temp72;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp74;
    float temp75;
    temp75= saturate(r1.a);
    float3 temp76;
    temp74= temp75;
    r0.rgb= temp71;
    r0.a= temp74;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 51: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 52: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=3 term=3
    // line 54: R0= R0 - D0*D0
    float3 temp65;
    float3 temp66;
    float3 temp67;
    float3 temp68;
    temp68= saturate(r0.rgb);
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(color0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp67= temp74;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 74: R0= R0*T0
    float3 temp75;
    float3 temp76;
    temp76= saturate(r0.rgb);
    float3 temp77;
    float3 temp78;
    temp78= saturate(tex0.rgb);
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 75: R1a= T3a*T0a
    float temp81;
    float temp82;
    temp82= saturate(tex3.a);
    float3 temp83;
    float temp84;
    temp84= saturate(tex0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp75;
    r1.a= temp81;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp87;
    float3 temp88;
    temp88= saturate(r0.rgb);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp90;
    float temp91;
    temp91= saturate(r1.a);
    float3 temp92;
    temp90= temp91;
    r0.rgb= temp87;
    r0.a= temp90;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 58: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 59: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=1 term=3
    // line 61: R0= 1 - D0
    float3 temp65;
    float temp66;
    float3 temp67;
    float temp68;
    temp68= 1;
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    temp67= temp70;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 74: R0= R0*T0
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= saturate(tex0.rgb);
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    // exp.components=1 term=1
    // line 75: R1a= T3a*T0a
    float temp78;
    float temp79;
    temp79= saturate(tex3.a);
    float3 temp80;
    float temp81;
    temp81= saturate(tex0.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    r0.rgb= temp72;
    r1.a= temp78;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp84;
    float3 temp85;
    temp85= saturate(r0.rgb);
    float3 temp86;
    temp84= temp85;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp87;
    float temp88;
    temp88= saturate(r1.a);
    float3 temp89;
    temp87= temp88;
    r0.rgb= temp84;
    r0.a= temp87;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 65: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 66: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=1 term=3
    // line 68: R0= 1 - D0*D0
    float3 temp65;
    float temp66;
    float3 temp67;
    float temp68;
    temp68= 1;
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(color0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp67= temp74;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 74: R0= R0*T0
    float3 temp75;
    float3 temp76;
    temp76= saturate(r0.rgb);
    float3 temp77;
    float3 temp78;
    temp78= saturate(tex0.rgb);
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    // exp.components=1 term=1
    // line 75: R1a= T3a*T0a
    float temp81;
    float temp82;
    temp82= saturate(tex3.a);
    float3 temp83;
    float temp84;
    temp84= saturate(tex0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp75;
    r1.a= temp81;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp87;
    float3 temp88;
    temp88= saturate(r0.rgb);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp90;
    float temp91;
    temp91= saturate(r1.a);
    float3 temp92;
    temp90= temp91;
    r0.rgb= temp87;
    r0.a= temp90;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp53;
    // exp.components=3 term=3
    // line 78: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp59;
    float3 temp60;
    temp60= saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= saturate(tex0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    temp59= 2 * temp59;
    // exp.components=1 term=1
    // line 79: R1a= T3a*T0a
    float temp65;
    float temp66;
    temp66= saturate(tex3.a);
    float3 temp67;
    float temp68;
    temp68= saturate(tex0.a);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    r0.rgb= temp59;
    r1.a= temp65;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp71;
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    temp71= temp72;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp74;
    float temp75;
    temp75= saturate(r1.a);
    float3 temp76;
    temp74= temp75;
    r0.rgb= temp71;
    r0.a= temp74;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 51: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 52: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=3 term=3
    // line 54: R0= R0 - D0*D0
    float3 temp65;
    float3 temp66;
    float3 temp67;
    float3 temp68;
    temp68= saturate(r0.rgb);
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(color0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp67= temp74;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 78: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp75;
    float3 temp76;
    temp76= saturate(r0.rgb);
    float3 temp77;
    float3 temp78;
    temp78= saturate(tex0.rgb);
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    temp75= 2 * temp75;
    // exp.components=1 term=1
    // line 79: R1a= T3a*T0a
    float temp81;
    float temp82;
    temp82= saturate(tex3.a);
    float3 temp83;
    float temp84;
    temp84= saturate(tex0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp75;
    r1.a= temp81;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp87;
    float3 temp88;
    temp88= saturate(r0.rgb);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp90;
    float temp91;
    temp91= saturate(r1.a);
    float3 temp92;
    temp90= temp91;
    r0.rgb= temp87;
    r0.a= temp90;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 58: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 59: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=1 term=3
    // line 61: R0= 1 - D0
    float3 temp65;
    float temp66;
    float3 temp67;
    float temp68;
    temp68= 1;
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    temp67= temp70;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 78: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= saturate(tex0.rgb);
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    temp72= 2 * temp72;
    // exp.components=1 term=1
    // line 79: R1a= T3a*T0a
    float temp78;
    float temp79;
    temp79= saturate(tex3.a);
    float3 temp80;
    float temp81;
    temp81= saturate(tex0.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    r0.rgb= temp72;
    r1.a= temp78;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp84;
    float3 temp85;
    temp85= saturate(r0.rgb);
    float3 temp86;
    temp84= temp85;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp87;
    float temp88;
    temp88= saturate(r1.a);
    float3 temp89;
    temp87= temp88;
    r0.rgb= temp84;
    r0.a= temp87;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 65: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 66: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=1 term=3
    // line 68: R0= 1 - D0*D0
    float3 temp65;
    float temp66;
    float3 temp67;
    float temp68;
    temp68= 1;
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(color0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp67= temp74;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 78: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp75;
    float3 temp76;
    temp76= saturate(r0.rgb);
    float3 temp77;
    float3 temp78;
    temp78= saturate(tex0.rgb);
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    temp75= 2 * temp75;
    // exp.components=1 term=1
    // line 79: R1a= T3a*T0a
    float temp81;
    float temp82;
    temp82= saturate(tex3.a);
    float3 temp83;
    float temp84;
    temp84= saturate(tex0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp75;
    r1.a= temp81;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp87;
    float3 temp88;
    temp88= saturate(r0.rgb);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp90;
    float temp91;
    temp91= saturate(r1.a);
    float3 temp92;
    temp90= temp91;
    r0.rgb= temp87;
    r0.a= temp90;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 47: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    tex0.rgb= temp53;
    // exp.components=3 term=3
    // line 82: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp59;
    float3 temp60;
    temp60= saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= saturate(tex0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    temp59= 4 * temp59;
    // exp.components=1 term=1
    // line 83: R1a= T3a*T0a
    float temp65;
    float temp66;
    temp66= saturate(tex3.a);
    float3 temp67;
    float temp68;
    temp68= saturate(tex0.a);
    float3 temp69;
    float temp70;
    temp70= temp66 * temp68;
    temp65= temp70;
    r0.rgb= temp59;
    r1.a= temp65;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp71;
    float3 temp72;
    temp72= saturate(r0.rgb);
    float3 temp73;
    temp71= temp72;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp74;
    float temp75;
    temp75= saturate(r1.a);
    float3 temp76;
    temp74= temp75;
    r0.rgb= temp71;
    r0.a= temp74;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 51: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 52: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=3 term=3
    // line 54: R0= R0 - D0*D0
    float3 temp65;
    float3 temp66;
    float3 temp67;
    float3 temp68;
    temp68= saturate(r0.rgb);
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(color0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp67= temp74;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 82: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp75;
    float3 temp76;
    temp76= saturate(r0.rgb);
    float3 temp77;
    float3 temp78;
    temp78= saturate(tex0.rgb);
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    temp75= 4 * temp75;
    // exp.components=1 term=1
    // line 83: R1a= T3a*T0a
    float temp81;
    float temp82;
    temp82= saturate(tex3.a);
    float3 temp83;
    float temp84;
    temp84= saturate(tex0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp75;
    r1.a= temp81;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp87;
    float3 temp88;
    temp88= saturate(r0.rgb);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp90;
    float temp91;
    temp91= saturate(r1.a);
    float3 temp92;
    temp90= temp91;
    r0.rgb= temp87;
    r0.a= temp90;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 58: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 59: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=1 term=3
    // line 61: R0= 1 - D0
    float3 temp65;
    float temp66;
    float3 temp67;
    float temp68;
    temp68= 1;
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    temp67= temp70;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 82: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= saturate(tex0.rgb);
    float3 temp76;
    float3 temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    temp72= 4 * temp72;
    // exp.components=1 term=1
    // line 83: R1a= T3a*T0a
    float temp78;
    float temp79;
    temp79= saturate(tex3.a);
    float3 temp80;
    float temp81;
    temp81= saturate(tex0.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    r0.rgb= temp72;
    r1.a= temp78;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp84;
    float3 temp85;
    temp85= saturate(r0.rgb);
    float3 temp86;
    temp84= temp85;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp87;
    float temp88;
    temp88= saturate(r1.a);
    float3 temp89;
    temp87= temp88;
    r0.rgb= temp84;
    r0.a= temp87;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler3D s3 : register(S3);
sampler2D s4 : register(S4);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
#ifdef CENTROID4
    float4 tc4 : TEXCOORD4_centroid,
#else
    float4 tc4 : TEXCOORD4,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 1 dot 0 input-stage 0
    float4 tex3= tex3Dproj(s3, tc3);
// texture stage 4 mode 0 dot 0 input-stage 0
    float4 tex4= tex2Dproj(s4, tc4);
    // exp.components=1 term=1
    // line 28: R0a= C0.T4
    float temp0;
    float3 temp1;
    temp1= float3(1.000000,0.000000,0.000000);
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex4.rgb);
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 29: R1a= C1.T4
    float temp6;
    float3 temp7;
    temp7= float3(0.000000,1.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex4.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    r0.a= temp0;
    r1.a= temp6;
    // exp.components=3 term=1 term=3
    // line 32: R0= INVERT(R0a) + R0a*C0
    float3 temp12;
    float temp13;
    float3 temp14;
    float temp15;
    temp15= 1-saturate(r0.a);
    float3 temp16;
    temp13= temp15;
    float temp17;
    temp17= saturate(r0.a);
    float3 temp18;
    float3 temp19;
    temp19= c3.rgb;
    float3 temp20;
    float3 temp21;
    temp21= temp17 * temp19;
    temp14= temp21;
    temp12= temp13 + temp14;
    r0.rgb= temp12;
    // exp.components=3 term=1 term=3
    // line 35: R1= INVERT(R1a) + R1a*C0
    float3 temp22;
    float temp23;
    float3 temp24;
    float temp25;
    temp25= 1-saturate(r1.a);
    float3 temp26;
    temp23= temp25;
    float temp27;
    temp27= saturate(r1.a);
    float3 temp28;
    float3 temp29;
    temp29= c4.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp24= temp31;
    temp22= temp23 + temp24;
    r1.rgb= temp22;
    // exp.components=3 term=3
    // line 37: T0= T0*R0*R1
    float3 temp32;
    float3 temp33;
    temp33= saturate(tex0.rgb);
    float3 temp34;
    float3 temp35;
    temp35= saturate(r0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    float3 temp38;
    temp38= saturate(r1.rgb);
    float3 temp39;
    float3 temp40;
    temp40= temp37 * temp38;
    temp32= temp40;
    tex0.rgb= temp32;
    // exp.components=1 term=1
    // line 40: R0= EXPAND(T2).EXPAND(T1)
    float temp41;
    float3 temp42;
    temp42= 2 * saturate(tex2.rgb) - 1;
    float3 temp43;
    float3 temp44;
    temp44= 2 * saturate(tex1.rgb) - 1;
    float3 temp45;
    float temp46;
    temp46= dot(temp42, temp44);
    temp41= temp46;
    // exp.components=3 term=3
    // line 41: T0= T0*T3
    float3 temp47;
    float3 temp48;
    temp48= saturate(tex0.rgb);
    float3 temp49;
    float3 temp50;
    temp50= saturate(tex3.rgb);
    float3 temp51;
    float3 temp52;
    temp52= temp48 * temp50;
    temp47= temp52;
    r0.rgb= temp41;
    tex0.rgb= temp47;
    // exp.components=3 term=3
    // line 65: T0= T0*C0
    float3 temp53;
    float3 temp54;
    temp54= saturate(tex0.rgb);
    float3 temp55;
    float3 temp56;
    temp56= c5.rgb;
    float3 temp57;
    float3 temp58;
    temp58= temp54 * temp56;
    temp53= temp58;
    // exp.components=3 term=3
    // line 66: D0= INVERT(R0)*INVERT(R0)
    float3 temp59;
    float3 temp60;
    temp60= 1-saturate(r0.rgb);
    float3 temp61;
    float3 temp62;
    temp62= 1-saturate(r0.rgb);
    float3 temp63;
    float3 temp64;
    temp64= temp60 * temp62;
    temp59= temp64;
    tex0.rgb= temp53;
    color0.rgb= temp59;
    // exp.components=3 term=1 term=3
    // line 68: R0= 1 - D0*D0
    float3 temp65;
    float temp66;
    float3 temp67;
    float temp68;
    temp68= 1;
    float3 temp69;
    temp66= temp68;
    float3 temp70;
    temp70= saturate(color0.rgb);
    float3 temp71;
    float3 temp72;
    temp72= saturate(color0.rgb);
    float3 temp73;
    float3 temp74;
    temp74= temp70 * temp72;
    temp67= temp74;
    temp65= temp66 - temp67;
    r0.rgb= temp65;
    // exp.components=3 term=3
    // line 82: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp75;
    float3 temp76;
    temp76= saturate(r0.rgb);
    float3 temp77;
    float3 temp78;
    temp78= saturate(tex0.rgb);
    float3 temp79;
    float3 temp80;
    temp80= temp76 * temp78;
    temp75= temp80;
    temp75= 4 * temp75;
    // exp.components=1 term=1
    // line 83: R1a= T3a*T0a
    float temp81;
    float temp82;
    temp82= saturate(tex3.a);
    float3 temp83;
    float temp84;
    temp84= saturate(tex0.a);
    float3 temp85;
    float temp86;
    temp86= temp82 * temp84;
    temp81= temp86;
    r0.rgb= temp75;
    r1.a= temp81;
    // exp.components=3 term=3
    // line 87: SRCCOLOR= R0
    float3 temp87;
    float3 temp88;
    temp88= saturate(r0.rgb);
    float3 temp89;
    temp87= temp88;
    // exp.components=1 term=1
    // line 88: SRCALPHA= R1a
    float temp90;
    float temp91;
    temp91= saturate(r1.a);
    float3 temp92;
    temp90= temp91;
    r0.rgb= temp87;
    r0.a= temp90;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
