; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_hud_text_flash_0.txt
;
#const C1.rgb= $text_color_normal
#const C1.a= $flash_amount
#const C2.rgb= $text_color_flash
#const C2.a= $global_alpha
#const C3.rgb= $shadow_color_normal
#const C3.a= $flash_amount
#const C4.rgb= $shadow_color_flash
#const C5.a= $text_alpha
#const C6.a= $shadow_alpha
sampler2D s0 : register(S0);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
    // exp.components=3 term=3 term=3
    // line 16: T1= C0a*C1 + INVERT(C0a)*C0
    float3 temp0;
    float3 temp1;
    float3 temp2;
    float temp3;
    temp3= c1.a;
    float3 temp4;
    float3 temp5;
    temp5= c2.rgb;
    float3 temp6;
    float3 temp7;
    temp7= temp3 * temp5;
    temp1= temp7;
    float temp8;
    temp8= 1-c1.a;
    float3 temp9;
    float3 temp10;
    temp10= c1.rgb;
    float3 temp11;
    float3 temp12;
    temp12= temp8 * temp10;
    temp2= temp12;
    temp0= temp1 + temp2;
    // exp.components=1 term=1
    // line 17: T0a= T0a*C1a
    float temp13;
    float temp14;
    temp14= saturate(tex0.a);
    float3 temp15;
    float temp16;
    temp16= c2.a;
    float3 temp17;
    float temp18;
    temp18= temp14 * temp16;
    temp13= temp18;
    tex1.rgb= temp0;
    tex0.a= temp13;
    // exp.components=3 term=3 term=3
    // line 23: T2= C0a*C1 + INVERT(C0a)*C0
    float3 temp19;
    float3 temp20;
    float3 temp21;
    float temp22;
    temp22= c3.a;
    float3 temp23;
    float3 temp24;
    temp24= c4.rgb;
    float3 temp25;
    float3 temp26;
    temp26= temp22 * temp24;
    temp20= temp26;
    float temp27;
    temp27= 1-c3.a;
    float3 temp28;
    float3 temp29;
    temp29= c3.rgb;
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp21= temp31;
    temp19= temp20 + temp21;
    tex2.rgb= temp19;
    // exp.components=3 term=3 term=3
    // line 29: R0= D0*T1 + INVERT(D0)*T2
    float3 temp32;
    float3 temp33;
    float3 temp34;
    float3 temp35;
    temp35= saturate(color0.rgb);
    float3 temp36;
    float3 temp37;
    temp37= saturate(tex1.rgb);
    float3 temp38;
    float3 temp39;
    temp39= temp35 * temp37;
    temp33= temp39;
    float3 temp40;
    temp40= 1-saturate(color0.rgb);
    float3 temp41;
    float3 temp42;
    temp42= saturate(tex2.rgb);
    float3 temp43;
    float3 temp44;
    temp44= temp40 * temp42;
    temp34= temp44;
    temp32= temp33 + temp34;
    // exp.components=1 term=1 term=1
    // line 30: R0a= D0b*C0a + INVERT(D0b)*C1a
    float temp45;
    float temp46;
    float temp47;
    float temp48;
    temp48= saturate(color0.b);
    float3 temp49;
    float temp50;
    temp50= c5.a;
    float3 temp51;
    float temp52;
    temp52= temp48 * temp50;
    temp46= temp52;
    float temp53;
    temp53= 1-saturate(color0.b);
    float3 temp54;
    float temp55;
    temp55= c6.a;
    float3 temp56;
    float temp57;
    temp57= temp53 * temp55;
    temp47= temp57;
    temp45= temp46 + temp47;
    r0.rgb= temp32;
    r0.a= temp45;
    // exp.components=1 term=1
    // line 33: T0a= T0a*R0a
    float temp58;
    float temp59;
    temp59= saturate(tex0.a);
    float3 temp60;
    float temp61;
    temp61= saturate(r0.a);
    float3 temp62;
    float temp63;
    temp63= temp59 * temp61;
    temp58= temp63;
    tex0.a= temp58;
    // exp.components=3 term=3
    // line 35: SRCCOLOR= T0*R0
    float3 temp64;
    float3 temp65;
    temp65= saturate(tex0.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(r0.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    // exp.components=1 term=1
    // line 36: SRCALPHA= T0a
    float temp70;
    float temp71;
    temp71= saturate(tex0.a);
    float3 temp72;
    temp70= temp71;
    r0.rgb= temp64;
    r0.a= temp70;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
