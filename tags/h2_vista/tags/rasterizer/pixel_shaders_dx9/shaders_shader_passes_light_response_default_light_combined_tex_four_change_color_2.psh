; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_light_response_default_light_combined_tex_four_change_color_2.txt
;
#const C3.rgb= $change_color_primary
#const C4.rgb= $change_color_secondary
#const C5.rgb= $change_color_tertiary
#const C6.rgb= $change_color_quaternary
#const C7.rgb= $light_diffuse_color
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    tex0.rgb= temp79;
    // exp.components=3 term=3
    // line 94: R0= R0*T0
    float3 temp85;
    float3 temp86;
    temp86= saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= saturate(tex0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    r0.rgb= temp85;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp91;
    temp91= saturate(r0.rgb);
    float3 temp92;
    e= temp91;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp93;
    temp93= 1;
    float3 temp94;
    f= temp93;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp95;
    float3 temp96;
    float3 temp97;
    temp97= e.rgb*f.rgb;
    temp96= temp97;
    float temp98;
    temp98= 1-saturate(color0.b);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp95= temp100;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp101;
    float temp102;
    temp102= 0;
    float3 temp103;
    temp101= temp102;
    r0.rgb= temp95;
    r0.a= temp101;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 71: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 72: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=3 term=3
    // line 74: R0= R0 - D1*D1
    float3 temp91;
    float3 temp92;
    float3 temp93;
    float3 temp94;
    temp94= saturate(r0.rgb);
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    float3 temp98;
    temp98= saturate(color1.rgb);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp93= temp100;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 94: R0= R0*T0
    float3 temp101;
    float3 temp102;
    temp102= saturate(r0.rgb);
    float3 temp103;
    float3 temp104;
    temp104= saturate(tex0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= temp102 * temp104;
    temp101= temp106;
    r0.rgb= temp101;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp107;
    temp107= saturate(r0.rgb);
    float3 temp108;
    e= temp107;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp109;
    temp109= 1;
    float3 temp110;
    f= temp109;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp111;
    float3 temp112;
    float3 temp113;
    temp113= e.rgb*f.rgb;
    temp112= temp113;
    float temp114;
    temp114= 1-saturate(color0.b);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp111= temp116;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp117;
    float temp118;
    temp118= 0;
    float3 temp119;
    temp117= temp118;
    r0.rgb= temp111;
    r0.a= temp117;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 78: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 79: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=1 term=3
    // line 81: R0= 1 - D1
    float3 temp91;
    float temp92;
    float3 temp93;
    float temp94;
    temp94= 1;
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    temp93= temp96;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 94: R0= R0*T0
    float3 temp98;
    float3 temp99;
    temp99= saturate(r0.rgb);
    float3 temp100;
    float3 temp101;
    temp101= saturate(tex0.rgb);
    float3 temp102;
    float3 temp103;
    temp103= temp99 * temp101;
    temp98= temp103;
    r0.rgb= temp98;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp104;
    temp104= saturate(r0.rgb);
    float3 temp105;
    e= temp104;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp106;
    temp106= 1;
    float3 temp107;
    f= temp106;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    temp110= e.rgb*f.rgb;
    temp109= temp110;
    float temp111;
    temp111= 1-saturate(color0.b);
    float3 temp112;
    float3 temp113;
    temp113= temp109 * temp111;
    temp108= temp113;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp114;
    float temp115;
    temp115= 0;
    float3 temp116;
    temp114= temp115;
    r0.rgb= temp108;
    r0.a= temp114;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=0
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 85: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 86: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=1 term=3
    // line 88: R0= 1 - D1*D1
    float3 temp91;
    float temp92;
    float3 temp93;
    float temp94;
    temp94= 1;
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    float3 temp98;
    temp98= saturate(color1.rgb);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp93= temp100;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 94: R0= R0*T0
    float3 temp101;
    float3 temp102;
    temp102= saturate(r0.rgb);
    float3 temp103;
    float3 temp104;
    temp104= saturate(tex0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= temp102 * temp104;
    temp101= temp106;
    r0.rgb= temp101;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp107;
    temp107= saturate(r0.rgb);
    float3 temp108;
    e= temp107;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp109;
    temp109= 1;
    float3 temp110;
    f= temp109;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp111;
    float3 temp112;
    float3 temp113;
    temp113= e.rgb*f.rgb;
    temp112= temp113;
    float temp114;
    temp114= 1-saturate(color0.b);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp111= temp116;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp117;
    float temp118;
    temp118= 0;
    float3 temp119;
    temp117= temp118;
    r0.rgb= temp111;
    r0.a= temp117;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    tex0.rgb= temp79;
    // exp.components=3 term=3
    // line 97: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp85;
    float3 temp86;
    temp86= saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= saturate(tex0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    temp85= 2 * temp85;
    r0.rgb= temp85;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp91;
    temp91= saturate(r0.rgb);
    float3 temp92;
    e= temp91;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp93;
    temp93= 1;
    float3 temp94;
    f= temp93;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp95;
    float3 temp96;
    float3 temp97;
    temp97= e.rgb*f.rgb;
    temp96= temp97;
    float temp98;
    temp98= 1-saturate(color0.b);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp95= temp100;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp101;
    float temp102;
    temp102= 0;
    float3 temp103;
    temp101= temp102;
    r0.rgb= temp95;
    r0.a= temp101;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 71: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 72: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=3 term=3
    // line 74: R0= R0 - D1*D1
    float3 temp91;
    float3 temp92;
    float3 temp93;
    float3 temp94;
    temp94= saturate(r0.rgb);
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    float3 temp98;
    temp98= saturate(color1.rgb);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp93= temp100;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 97: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp101;
    float3 temp102;
    temp102= saturate(r0.rgb);
    float3 temp103;
    float3 temp104;
    temp104= saturate(tex0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= temp102 * temp104;
    temp101= temp106;
    temp101= 2 * temp101;
    r0.rgb= temp101;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp107;
    temp107= saturate(r0.rgb);
    float3 temp108;
    e= temp107;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp109;
    temp109= 1;
    float3 temp110;
    f= temp109;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp111;
    float3 temp112;
    float3 temp113;
    temp113= e.rgb*f.rgb;
    temp112= temp113;
    float temp114;
    temp114= 1-saturate(color0.b);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp111= temp116;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp117;
    float temp118;
    temp118= 0;
    float3 temp119;
    temp117= temp118;
    r0.rgb= temp111;
    r0.a= temp117;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 78: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 79: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=1 term=3
    // line 81: R0= 1 - D1
    float3 temp91;
    float temp92;
    float3 temp93;
    float temp94;
    temp94= 1;
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    temp93= temp96;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 97: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp98;
    float3 temp99;
    temp99= saturate(r0.rgb);
    float3 temp100;
    float3 temp101;
    temp101= saturate(tex0.rgb);
    float3 temp102;
    float3 temp103;
    temp103= temp99 * temp101;
    temp98= temp103;
    temp98= 2 * temp98;
    r0.rgb= temp98;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp104;
    temp104= saturate(r0.rgb);
    float3 temp105;
    e= temp104;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp106;
    temp106= 1;
    float3 temp107;
    f= temp106;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    temp110= e.rgb*f.rgb;
    temp109= temp110;
    float temp111;
    temp111= 1-saturate(color0.b);
    float3 temp112;
    float3 temp113;
    temp113= temp109 * temp111;
    temp108= temp113;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp114;
    float temp115;
    temp115= 0;
    float3 temp116;
    temp114= temp115;
    r0.rgb= temp108;
    r0.a= temp114;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=1
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 85: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 86: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=1 term=3
    // line 88: R0= 1 - D1*D1
    float3 temp91;
    float temp92;
    float3 temp93;
    float temp94;
    temp94= 1;
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    float3 temp98;
    temp98= saturate(color1.rgb);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp93= temp100;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 97: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp101;
    float3 temp102;
    temp102= saturate(r0.rgb);
    float3 temp103;
    float3 temp104;
    temp104= saturate(tex0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= temp102 * temp104;
    temp101= temp106;
    temp101= 2 * temp101;
    r0.rgb= temp101;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp107;
    temp107= saturate(r0.rgb);
    float3 temp108;
    e= temp107;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp109;
    temp109= 1;
    float3 temp110;
    f= temp109;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp111;
    float3 temp112;
    float3 temp113;
    temp113= e.rgb*f.rgb;
    temp112= temp113;
    float temp114;
    temp114= 1-saturate(color0.b);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp111= temp116;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp117;
    float temp118;
    temp118= 0;
    float3 temp119;
    temp117= temp118;
    r0.rgb= temp111;
    r0.a= temp117;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=0 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 67: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    tex0.rgb= temp79;
    // exp.components=3 term=3
    // line 100: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp85;
    float3 temp86;
    temp86= saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= saturate(tex0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    temp85= 4 * temp85;
    r0.rgb= temp85;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp91;
    temp91= saturate(r0.rgb);
    float3 temp92;
    e= temp91;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp93;
    temp93= 1;
    float3 temp94;
    f= temp93;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp95;
    float3 temp96;
    float3 temp97;
    temp97= e.rgb*f.rgb;
    temp96= temp97;
    float temp98;
    temp98= 1-saturate(color0.b);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp95= temp100;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp101;
    float temp102;
    temp102= 0;
    float3 temp103;
    temp101= temp102;
    r0.rgb= temp95;
    r0.a= temp101;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=1 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 71: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 72: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=3 term=3
    // line 74: R0= R0 - D1*D1
    float3 temp91;
    float3 temp92;
    float3 temp93;
    float3 temp94;
    temp94= saturate(r0.rgb);
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    float3 temp98;
    temp98= saturate(color1.rgb);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp93= temp100;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 100: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp101;
    float3 temp102;
    temp102= saturate(r0.rgb);
    float3 temp103;
    float3 temp104;
    temp104= saturate(tex0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= temp102 * temp104;
    temp101= temp106;
    temp101= 4 * temp101;
    r0.rgb= temp101;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp107;
    temp107= saturate(r0.rgb);
    float3 temp108;
    e= temp107;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp109;
    temp109= 1;
    float3 temp110;
    f= temp109;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp111;
    float3 temp112;
    float3 temp113;
    temp113= e.rgb*f.rgb;
    temp112= temp113;
    float temp114;
    temp114= 1-saturate(color0.b);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp111= temp116;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp117;
    float temp118;
    temp118= 0;
    float3 temp119;
    temp117= temp118;
    r0.rgb= temp111;
    r0.a= temp117;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=2 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 78: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 79: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=1 term=3
    // line 81: R0= 1 - D1
    float3 temp91;
    float temp92;
    float3 temp93;
    float temp94;
    temp94= 1;
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    temp93= temp96;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 100: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp98;
    float3 temp99;
    temp99= saturate(r0.rgb);
    float3 temp100;
    float3 temp101;
    temp101= saturate(tex0.rgb);
    float3 temp102;
    float3 temp103;
    temp103= temp99 * temp101;
    temp98= temp103;
    temp98= 4 * temp98;
    r0.rgb= temp98;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp104;
    temp104= saturate(r0.rgb);
    float3 temp105;
    e= temp104;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp106;
    temp106= 1;
    float3 temp107;
    f= temp106;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp108;
    float3 temp109;
    float3 temp110;
    temp110= e.rgb*f.rgb;
    temp109= temp110;
    float temp111;
    temp111= 1-saturate(color0.b);
    float3 temp112;
    float3 temp113;
    temp113= temp109 * temp111;
    temp108= temp113;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp114;
    float temp115;
    temp115= 0;
    float3 temp116;
    temp114= temp115;
    r0.rgb= temp108;
    r0.a= temp114;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $light_diffuse_contrast=3 $light_diffuse_overbrightness=2
sampler2D s0 : register(S0);
samplerCUBE s1 : register(S1);
sampler2D s2 : register(S2);
sampler2D s3 : register(S3);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 2 dot 0 input-stage 0
    float4 tex1= texCUBE(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
// texture stage 3 mode 0 dot 0 input-stage 0
    float4 tex3= tex2Dproj(s3, tc3);
    // exp.components=1 term=1
    // line 28: R0= EXPAND(T2).EXPAND(T1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    r0.rgb= temp0;
    // exp.components=1 term=1
    // line 39: R0a= C0.T3
    float temp6;
    float3 temp7;
    temp7= float3(1.000000,0.000000,0.000000);
    float3 temp8;
    float3 temp9;
    temp9= saturate(tex3.rgb);
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 40: R1a= C1.T3
    float temp12;
    float3 temp13;
    temp13= float3(0.000000,1.000000,0.000000);
    float3 temp14;
    float3 temp15;
    temp15= saturate(tex3.rgb);
    float3 temp16;
    float temp17;
    temp17= dot(temp13, temp15);
    temp12= temp17;
    r0.a= temp6;
    r1.a= temp12;
    // exp.components=3 term=1 term=3
    // line 43: R0= INVERT(R0a) + R0a*C0
    float3 temp18;
    float temp19;
    float3 temp20;
    float temp21;
    temp21= 1-saturate(r0.a);
    float3 temp22;
    temp19= temp21;
    float temp23;
    temp23= saturate(r0.a);
    float3 temp24;
    float3 temp25;
    temp25= c3.rgb;
    float3 temp26;
    float3 temp27;
    temp27= temp23 * temp25;
    temp20= temp27;
    temp18= temp19 + temp20;
    r0.rgb= temp18;
    // exp.components=3 term=1 term=3
    // line 46: R1= INVERT(R1a) + R1a*C0
    float3 temp28;
    float temp29;
    float3 temp30;
    float temp31;
    temp31= 1-saturate(r1.a);
    float3 temp32;
    temp29= temp31;
    float temp33;
    temp33= saturate(r1.a);
    float3 temp34;
    float3 temp35;
    temp35= c4.rgb;
    float3 temp36;
    float3 temp37;
    temp37= temp33 * temp35;
    temp30= temp37;
    temp28= temp29 + temp30;
    r1.rgb= temp28;
    // exp.components=3 term=3
    // line 48: R0=R0*R1
    float3 temp38;
    float3 temp39;
    temp39= saturate(r0.rgb);
    float3 temp40;
    float3 temp41;
    temp41= saturate(r1.rgb);
    float3 temp42;
    float3 temp43;
    temp43= temp39 * temp41;
    temp38= temp43;
    r0.rgb= temp38;
    // exp.components=3 term=1 term=3
    // line 51: R1= INVERT(T3b) + T3b*C0
    float3 temp44;
    float temp45;
    float3 temp46;
    float temp47;
    temp47= 1-saturate(tex3.b);
    float3 temp48;
    temp45= temp47;
    float temp49;
    temp49= saturate(tex3.b);
    float3 temp50;
    float3 temp51;
    temp51= c5.rgb;
    float3 temp52;
    float3 temp53;
    temp53= temp49 * temp51;
    temp46= temp53;
    temp44= temp45 + temp46;
    r1.rgb= temp44;
    // exp.components=3 term=1 term=3
    // line 54: T3= INVERT(T3a) + T3a*C0
    float3 temp54;
    float temp55;
    float3 temp56;
    float temp57;
    temp57= 1-saturate(tex3.a);
    float3 temp58;
    temp55= temp57;
    float temp59;
    temp59= saturate(tex3.a);
    float3 temp60;
    float3 temp61;
    temp61= c6.rgb;
    float3 temp62;
    float3 temp63;
    temp63= temp59 * temp61;
    temp56= temp63;
    temp54= temp55 + temp56;
    tex3.rgb= temp54;
    // exp.components=3 term=3
    // line 56: R1= R1*T3
    float3 temp64;
    float3 temp65;
    temp65= saturate(r1.rgb);
    float3 temp66;
    float3 temp67;
    temp67= saturate(tex3.rgb);
    float3 temp68;
    float3 temp69;
    temp69= temp65 * temp67;
    temp64= temp69;
    r1.rgb= temp64;
    // exp.components=3 term=3
    // line 58: T0= T0*R0*R1
    float3 temp70;
    float3 temp71;
    temp71= saturate(tex0.rgb);
    float3 temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float3 temp75;
    temp75= temp71 * temp73;
    float3 temp76;
    temp76= saturate(r1.rgb);
    float3 temp77;
    float3 temp78;
    temp78= temp75 * temp76;
    temp70= temp78;
    tex0.rgb= temp70;
    // exp.components=3 term=3
    // line 85: T0= T0*C0
    float3 temp79;
    float3 temp80;
    temp80= saturate(tex0.rgb);
    float3 temp81;
    float3 temp82;
    temp82= c7.rgb;
    float3 temp83;
    float3 temp84;
    temp84= temp80 * temp82;
    temp79= temp84;
    // exp.components=3 term=3
    // line 86: D1= INVERT(R0)*INVERT(R0)
    float3 temp85;
    float3 temp86;
    temp86= 1-saturate(r0.rgb);
    float3 temp87;
    float3 temp88;
    temp88= 1-saturate(r0.rgb);
    float3 temp89;
    float3 temp90;
    temp90= temp86 * temp88;
    temp85= temp90;
    tex0.rgb= temp79;
    color1.rgb= temp85;
    // exp.components=3 term=1 term=3
    // line 88: R0= 1 - D1*D1
    float3 temp91;
    float temp92;
    float3 temp93;
    float temp94;
    temp94= 1;
    float3 temp95;
    temp92= temp94;
    float3 temp96;
    temp96= saturate(color1.rgb);
    float3 temp97;
    float3 temp98;
    temp98= saturate(color1.rgb);
    float3 temp99;
    float3 temp100;
    temp100= temp96 * temp98;
    temp93= temp100;
    temp91= temp92 - temp93;
    r0.rgb= temp91;
    // exp.components=3 term=3
    // line 100: R0= OUT_SCALE_BY_4(R0*T0)
    float3 temp101;
    float3 temp102;
    temp102= saturate(r0.rgb);
    float3 temp103;
    float3 temp104;
    temp104= saturate(tex0.rgb);
    float3 temp105;
    float3 temp106;
    temp106= temp102 * temp104;
    temp101= temp106;
    temp101= 4 * temp101;
    r0.rgb= temp101;
    // exp.components=3 term=3
    // line 104: E= R0
    float3 temp107;
    temp107= saturate(r0.rgb);
    float3 temp108;
    e= temp107;
    // exp.components=1 term=1
    // line 105: F= 1
    float temp109;
    temp109= 1;
    float3 temp110;
    f= temp109;
    // exp.components=3 term=3
    // line 106: SRCCOLOR= EF*INVERT(D0b)
    float3 temp111;
    float3 temp112;
    float3 temp113;
    temp113= e.rgb*f.rgb;
    temp112= temp113;
    float temp114;
    temp114= 1-saturate(color0.b);
    float3 temp115;
    float3 temp116;
    temp116= temp112 * temp114;
    temp111= temp116;
    // exp.components=1 term=1
    // line 107: SRCALPHA= 0
    float temp117;
    float temp118;
    temp118= 0;
    float3 temp119;
    temp117= temp118;
    r0.rgb= temp111;
    r0.a= temp117;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
