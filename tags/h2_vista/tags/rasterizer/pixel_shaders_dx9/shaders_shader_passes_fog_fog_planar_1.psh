; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_fog_fog_planar_1.txt
;
#const C1.rgb= $fog_atmospheric_color_adjusted
#const C1.a= $fog_atmospheric_secondary_blend_adjusted_invert
#const C2.rgb= $fog_secondary_color_adjusted
#const C2.a= $fog_atmospheric_secondary_blend_adjusted
#const C3.a= $fog_atmospheric_max_density
#const C4.a= $fog_secondary_max_density
sampler2D s0 : register(S0);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
    // exp.components=3 term=3
    // line 11: R0= C0*T0
    float3 temp0;
    float3 temp1;
    temp1= c1.rgb;
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex0.rgb);
    float3 temp4;
    float3 temp5;
    temp5= temp1 * temp3;
    temp0= temp5;
    // exp.components=3 term=3
    // line 12: R1= C1*T0a
    float3 temp6;
    float3 temp7;
    temp7= c2.rgb;
    float3 temp8;
    float temp9;
    temp9= saturate(tex0.a);
    float3 temp10;
    float3 temp11;
    temp11= temp7 * temp9;
    temp6= temp11;
    // exp.components=1 term=1
    // line 13: R0a= C0a*T0a
    float temp12;
    float temp13;
    temp13= c1.a;
    float3 temp14;
    float temp15;
    temp15= saturate(tex0.a);
    float3 temp16;
    float temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 14: R1a= C1a*T0b
    float temp18;
    float temp19;
    temp19= c2.a;
    float3 temp20;
    float temp21;
    temp21= saturate(tex0.b);
    float3 temp22;
    float temp23;
    temp23= temp19 * temp21;
    temp18= temp23;
    r0.rgb= temp0;
    r1.rgb= temp6;
    r0.a= temp12;
    r1.a= temp18;
    // exp.components=3 term=3 term=3
    // line 18: R0= R0*INVERT(R0a) + R1*INVERT(R1a)
    float3 temp24;
    float3 temp25;
    float3 temp26;
    float3 temp27;
    temp27= saturate(r0.rgb);
    float3 temp28;
    float temp29;
    temp29= 1-saturate(r0.a);
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp25= temp31;
    float3 temp32;
    temp32= saturate(r1.rgb);
    float3 temp33;
    float temp34;
    temp34= 1-saturate(r1.a);
    float3 temp35;
    float3 temp36;
    temp36= temp32 * temp34;
    temp26= temp36;
    temp24= temp25 + temp26;
    // exp.components=1 term=1
    // line 19: R0a= C0a*T0b
    float temp37;
    float temp38;
    temp38= c3.a;
    float3 temp39;
    float temp40;
    temp40= saturate(tex0.b);
    float3 temp41;
    float temp42;
    temp42= temp38 * temp40;
    temp37= temp42;
    // exp.components=1 term=1
    // line 20: R1a= C1a*T0a
    float temp43;
    float temp44;
    temp44= c4.a;
    float3 temp45;
    float temp46;
    temp46= saturate(tex0.a);
    float3 temp47;
    float temp48;
    temp48= temp44 * temp46;
    temp43= temp48;
    r0.rgb= temp24;
    r0.a= temp37;
    r1.a= temp43;
    // exp.components=1 term=1
    // line 22: D0= INVERT(R0a)*INVERT(R1a)
    float temp49;
    float temp50;
    temp50= 1-saturate(r0.a);
    float3 temp51;
    float temp52;
    temp52= 1-saturate(r1.a);
    float3 temp53;
    float temp54;
    temp54= temp50 * temp52;
    temp49= temp54;
    color0.rgb= temp49;
    // exp.components=3 term=3
    // line 24: SRCCOLOR= R0
    float3 temp55;
    float3 temp56;
    temp56= saturate(r0.rgb);
    float3 temp57;
    temp55= temp56;
    // exp.components=1 term=1
    // line 25: SRCALPHA= INVERT(D0b)
    float temp58;
    float temp59;
    temp59= 1-saturate(color0.b);
    float3 temp60;
    temp58= temp59;
    r0.rgb= temp55;
    r0.a= temp58;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
