; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_transparent_transparent_specular_mask_one_sided_0.txt
;
#const C1.rgb= $environment_color
#const C2.rgb= $alpha_blend_color
#const C2.a= $alpha_blend_opacity
#const C3.rgb= $self_illum_color
samplerCUBE s0 : register(S0);
sampler2D s1 : register(S1);
sampler2D s2 : register(S2);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 2 dot 0 input-stage 0
    float4 tex0= texCUBE(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
// texture stage 2 mode 0 dot 0 input-stage 0
    float4 tex2= tex2Dproj(s2, tc2);
    // exp.components=3 term=3
    // line 16: T0= T0*C0
    float3 temp0;
    float3 temp1;
    temp1= saturate(tex0.rgb);
    float3 temp2;
    float3 temp3;
    temp3= c1.rgb;
    float3 temp4;
    float3 temp5;
    temp5= temp1 * temp3;
    temp0= temp5;
    // exp.components=3 term=3
    // line 17: T2= T2*C1
    float3 temp6;
    float3 temp7;
    temp7= saturate(tex2.rgb);
    float3 temp8;
    float3 temp9;
    temp9= c2.rgb;
    float3 temp10;
    float3 temp11;
    temp11= temp7 * temp9;
    temp6= temp11;
    // exp.components=1 term=1
    // line 18: T2a= T2a*C1a
    float temp12;
    float temp13;
    temp13= saturate(tex2.a);
    float3 temp14;
    float temp15;
    temp15= c2.a;
    float3 temp16;
    float temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    tex0.rgb= temp0;
    tex2.rgb= temp6;
    tex2.a= temp12;
    // exp.components=3 term=3 term=3
    // line 21: R0= T0*T2a + T1*C0
    float3 temp18;
    float3 temp19;
    float3 temp20;
    float3 temp21;
    temp21= saturate(tex0.rgb);
    float3 temp22;
    float temp23;
    temp23= saturate(tex2.a);
    float3 temp24;
    float3 temp25;
    temp25= temp21 * temp23;
    temp19= temp25;
    float3 temp26;
    temp26= saturate(tex1.rgb);
    float3 temp27;
    float3 temp28;
    temp28= c3.rgb;
    float3 temp29;
    float3 temp30;
    temp30= temp26 * temp28;
    temp20= temp30;
    temp18= temp19 + temp20;
    // exp.components=1 term=1
    // line 22: T2a= T2a*D1a
    float temp31;
    float temp32;
    temp32= saturate(tex2.a);
    float3 temp33;
    float temp34;
    temp34= saturate(color1.a);
    float3 temp35;
    float temp36;
    temp36= temp32 * temp34;
    temp31= temp36;
    r0.rgb= temp18;
    tex2.a= temp31;
    // exp.components=3 term=3 term=3
    // line 24: R0= R0*D1a + T2*T2a
    float3 temp37;
    float3 temp38;
    float3 temp39;
    float3 temp40;
    temp40= saturate(r0.rgb);
    float3 temp41;
    float temp42;
    temp42= saturate(color1.a);
    float3 temp43;
    float3 temp44;
    temp44= temp40 * temp42;
    temp38= temp44;
    float3 temp45;
    temp45= saturate(tex2.rgb);
    float3 temp46;
    float temp47;
    temp47= saturate(tex2.a);
    float3 temp48;
    float3 temp49;
    temp49= temp45 * temp47;
    temp39= temp49;
    temp37= temp38 + temp39;
    // exp.components=1 term=1
    // line 25: R0a= D0a*T2a
    float temp50;
    float temp51;
    temp51= saturate(color0.a);
    float3 temp52;
    float temp53;
    temp53= saturate(tex2.a);
    float3 temp54;
    float temp55;
    temp55= temp51 * temp53;
    temp50= temp55;
    r0.rgb= temp37;
    r0.a= temp50;
    // exp.components=3 term=3
    // line 27: E= D0
    float3 temp56;
    temp56= saturate(color0.rgb);
    float3 temp57;
    e= temp56;
    // exp.components=3 term=3
    // line 28: F= R0
    float3 temp58;
    temp58= saturate(r0.rgb);
    float3 temp59;
    f= temp58;
    // exp.components=3 term=3
    // line 29: SRCCOLOR= EF*D0a
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= e.rgb*f.rgb;
    temp61= temp62;
    float temp63;
    temp63= saturate(color0.a);
    float3 temp64;
    float3 temp65;
    temp65= temp61 * temp63;
    temp60= temp65;
    // exp.components=1 term=1
    // line 30: SRCALPHA= R0a
    float temp66;
    float temp67;
    temp67= saturate(r0.a);
    float3 temp68;
    temp66= temp67;
    r0.rgb= temp60;
    r0.a= temp66;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
