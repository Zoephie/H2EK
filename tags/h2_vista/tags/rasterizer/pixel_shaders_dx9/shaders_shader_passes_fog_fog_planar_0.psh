; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_fog_fog_planar_0.txt
;
#const C1.rgb= $fog_atmospheric_color_adjusted
#const C1.a= $fog_atmospheric_secondary_blend_adjusted_invert
#const C2.rgb= $fog_secondary_color_adjusted
#const C2.a= $fog_atmospheric_secondary_blend_adjusted
#const C3.a= $fog_atmospheric_max_density
#const C4.a= $fog_secondary_max_density
#const C5.a= $fog_planar_eye_density_adjusted_invert
#const C6.a= $fog_planar_eye_density_adjusted
#const C7.rgb= $fog_planar_color
#const C7.a= $fog_atmospheric_planar_blend
sampler2D s0 : register(S0);
sampler2D s1 : register(S1);
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 c5 : register(C5);
float4 c6 : register(C6);
float4 c7 : register(C7);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
    float4 tc7:TEXCOORD7,
    float4 color0 : COLOR0,
    float4 color1 : COLOR1
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex2;
    float4 tex3;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
    float4 tex0= tex2Dproj(s0, tc0);
// texture stage 1 mode 0 dot 0 input-stage 0
    float4 tex1= tex2Dproj(s1, tc1);
    // exp.components=3 term=3
    // line 108: R0= C0*T0
    float3 temp0;
    float3 temp1;
    temp1= c1.rgb;
    float3 temp2;
    float3 temp3;
    temp3= saturate(tex0.rgb);
    float3 temp4;
    float3 temp5;
    temp5= temp1 * temp3;
    temp0= temp5;
    // exp.components=3 term=3
    // line 109: R1= C1*T0a
    float3 temp6;
    float3 temp7;
    temp7= c2.rgb;
    float3 temp8;
    float temp9;
    temp9= saturate(tex0.a);
    float3 temp10;
    float3 temp11;
    temp11= temp7 * temp9;
    temp6= temp11;
    // exp.components=1 term=1
    // line 110: R0a= C0a*T0a
    float temp12;
    float temp13;
    temp13= c1.a;
    float3 temp14;
    float temp15;
    temp15= saturate(tex0.a);
    float3 temp16;
    float temp17;
    temp17= temp13 * temp15;
    temp12= temp17;
    // exp.components=1 term=1
    // line 111: R1a= C1a*T0b
    float temp18;
    float temp19;
    temp19= c2.a;
    float3 temp20;
    float temp21;
    temp21= saturate(tex0.b);
    float3 temp22;
    float temp23;
    temp23= temp19 * temp21;
    temp18= temp23;
    r0.rgb= temp0;
    r1.rgb= temp6;
    r0.a= temp12;
    r1.a= temp18;
    // exp.components=3 term=3 term=3
    // line 115: R0= R0*INVERT(R0a) + R1*INVERT(R1a)
    float3 temp24;
    float3 temp25;
    float3 temp26;
    float3 temp27;
    temp27= saturate(r0.rgb);
    float3 temp28;
    float temp29;
    temp29= 1-saturate(r0.a);
    float3 temp30;
    float3 temp31;
    temp31= temp27 * temp29;
    temp25= temp31;
    float3 temp32;
    temp32= saturate(r1.rgb);
    float3 temp33;
    float temp34;
    temp34= 1-saturate(r1.a);
    float3 temp35;
    float3 temp36;
    temp36= temp32 * temp34;
    temp26= temp36;
    temp24= temp25 + temp26;
    // exp.components=1 term=1
    // line 116: R0a= C0a*T0b
    float temp37;
    float temp38;
    temp38= c3.a;
    float3 temp39;
    float temp40;
    temp40= saturate(tex0.b);
    float3 temp41;
    float temp42;
    temp42= temp38 * temp40;
    temp37= temp42;
    // exp.components=1 term=1
    // line 117: R1a= C1a*T0a
    float temp43;
    float temp44;
    temp44= c4.a;
    float3 temp45;
    float temp46;
    temp46= saturate(tex0.a);
    float3 temp47;
    float temp48;
    temp48= temp44 * temp46;
    temp43= temp48;
    r0.rgb= temp24;
    r0.a= temp37;
    r1.a= temp43;
    // exp.components=1 term=1
    // line 121: D0=  INVERT(R0a)*INVERT(R1a)
    float temp49;
    float temp50;
    temp50= 1-saturate(r0.a);
    float3 temp51;
    float temp52;
    temp52= 1-saturate(r1.a);
    float3 temp53;
    float temp54;
    temp54= temp50 * temp52;
    temp49= temp54;
    // exp.components=1 term=1 term=1
    // line 122: D0a= T1a*C0a + T1b*C1a
    float temp55;
    float temp56;
    float temp57;
    float temp58;
    temp58= saturate(tex1.a);
    float3 temp59;
    float temp60;
    temp60= c5.a;
    float3 temp61;
    float temp62;
    temp62= temp58 * temp60;
    temp56= temp62;
    float temp63;
    temp63= saturate(tex1.b);
    float3 temp64;
    float temp65;
    temp65= c6.a;
    float3 temp66;
    float temp67;
    temp67= temp63 * temp65;
    temp57= temp67;
    temp55= temp56 + temp57;
    color0.rgb= temp49;
    color0.a= temp55;
    // exp.components=3 term=3
    // line 126: R1= C0*D0a
    float3 temp68;
    float3 temp69;
    temp69= c7.rgb;
    float3 temp70;
    float temp71;
    temp71= saturate(color0.a);
    float3 temp72;
    float3 temp73;
    temp73= temp69 * temp71;
    temp68= temp73;
    // exp.components=3 term=3
    // line 127: D0= D0*INVERT(D0a)
    float3 temp74;
    float3 temp75;
    temp75= saturate(color0.rgb);
    float3 temp76;
    float temp77;
    temp77= 1-saturate(color0.a);
    float3 temp78;
    float3 temp79;
    temp79= temp75 * temp77;
    temp74= temp79;
    // exp.components=1 term=1
    // line 128: R0a= INVERT(C0a)*D0a
    float temp80;
    float temp81;
    temp81= 1-c7.a;
    float3 temp82;
    float temp83;
    temp83= saturate(color0.a);
    float3 temp84;
    float temp85;
    temp85= temp81 * temp83;
    temp80= temp85;
    // exp.components=1 term=1
    // line 129: R1a= C0a*INVERT(D0b)
    float temp86;
    float temp87;
    temp87= c7.a;
    float3 temp88;
    float temp89;
    temp89= 1-saturate(color0.b);
    float3 temp90;
    float temp91;
    temp91= temp87 * temp89;
    temp86= temp91;
    r1.rgb= temp68;
    color0.rgb= temp74;
    r0.a= temp80;
    r1.a= temp86;
    // exp.components=3 term=3
    // line 131: E= R1
    float3 temp92;
    temp92= saturate(r1.rgb);
    float3 temp93;
    e= temp92;
    // exp.components=1 term=1
    // line 132: F= INVERT(R1a)
    float temp94;
    temp94= 1-saturate(r1.a);
    float3 temp95;
    f= temp94;
    // exp.components=3 term=3 term=3
    // line 133: SRCCOLOR= R0*INVERT(R0a) + EF
    float3 temp96;
    float3 temp97;
    float3 temp98;
    float3 temp99;
    temp99= saturate(r0.rgb);
    float3 temp100;
    float temp101;
    temp101= 1-saturate(r0.a);
    float3 temp102;
    float3 temp103;
    temp103= temp99 * temp101;
    temp97= temp103;
    float3 temp104;
    float3 temp105;
    temp105= e.rgb*f.rgb;
    temp104= temp105;
    temp98= temp104;
    temp96= temp97 + temp98;
    // exp.components=1 term=1
    // line 134: SRCALPHA= INVERT(D0b)
    float temp106;
    float temp107;
    temp107= 1-saturate(color0.b);
    float3 temp108;
    temp106= temp107;
    r0.rgb= temp96;
    r0.a= temp106;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
